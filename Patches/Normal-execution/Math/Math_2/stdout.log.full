update-alternatives: using /usr/lib/jvm/java-8-oracle/bin/java to provide /usr/bin/java (java) in manual mode
update-alternatives: using /usr/lib/jvm/java-8-oracle/bin/javac to provide /usr/bin/javac (javac) in manual mode
[-customengine, fr.inria.astor.approaches.zm.ZmEngine, -package, org.apache.commons, -srcjavafolder, /src/main/java/, -failing, org.apache.commons.math3.distribution.HypergeometricDistributionTest:, -jvm4testexecution, /mnt/vdb1/home/ubuntu/jdk1.7.0_80/bin/, -binjavafolder, /target/classes/, -flthreshold, 0, -srctestfolder, /src/test/java/, -location, /tmp/math_2_Genprog, -javacompliancelevel, 5, -dependencies, /tmp/math_2_Genprog/target/classes/:/tmp/math_2_Genprog/target/test-classes/:/tmp/math_2_Genprog/lib/commons-discovery-0.5.jar:/mnt/vdb1/home/ubuntu/defects4j-repair-runner/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar, -parameters, disablelog:false:logtestexecution:true, -bintestfolder, /target/test-classes/, -maxgen, 0]
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:610) - command line arguments: [-customengine  fr.inria.astor.approaches.zm.ZmEngine  -package  org.apache.commons  -srcjavafolder  /src/main/java/  -failing  org.apache.commons.math3.distribution.HypergeometricDistributionTest:  -jvm4testexecution  /mnt/vdb1/home/ubuntu/jdk1.7.0_80/bin/  -binjavafolder  /target/classes/  -flthreshold  0  -srctestfolder  /src/test/java/  -location  /tmp/math_2_Genprog  -javacompliancelevel  5  -dependencies  /tmp/math_2_Genprog/target/classes/:/tmp/math_2_Genprog/target/test-classes/:/tmp/math_2_Genprog/lib/commons-discovery-0.5.jar:/mnt/vdb1/home/ubuntu/defects4j-repair-runner/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar  -parameters  disablelog:false:logtestexecution:true  -bintestfolder  /target/test-classes/  -maxgen  0]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:810) - Source folders: [/tmp/math_2_Genprog/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:829) - Source Test folders: [/tmp/math_2_Genprog/src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/math_2_Genprog/./output_astor/AstorMain-math_2_Genprog//bin//default from 830 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.0
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/tmp/math_2_Genprog/target/test-classes/, /tmp/math_2_Genprog/./output_astor/AstorMain-math_2_Genprog//bin//default, /tmp/math_2_Genprog/lib/commons-discovery-0.5.jar, /tmp/math_2_Genprog/target/classes/, /mnt/vdb1/home/ubuntu/defects4j-repair-runner/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math3.util.FastMathTest#checkMissingFastMathClasses
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math3.distribution.HypergeometricDistributionTest#testMath1021
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:5195, fails: 2, GZoltar suspicious 35953, with positive susp 175
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 5195
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 159 with susp > 0.0, we consider: 159
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:1066) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:1151) - Creating model,  Code location from working folder: /tmp/math_2_Genprog/./output_astor/AstorMain-math_2_Genprog//src//default
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:61) - building model: /tmp/math_2_Genprog/./output_astor/AstorMain-math_2_Genprog//src//default, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:73) - Classpath for building SpoonModel [/tmp/math_2_Genprog/target/classes/, /tmp/math_2_Genprog/target/test-classes/, /tmp/math_2_Genprog/lib/commons-discovery-0.5.jar, /mnt/vdb1/home/ubuntu/defects4j-repair-runner/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:1070) - 
---- Initial suspicious size: 159
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 159,  150
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 150
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 150, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:63) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:64) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:workingDirectory= /tmp/math_2_Genprog/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvm4testexecution= /mnt/vdb1/home/ubuntu/jdk1.7.0_80/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:binjavafolder= /target/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:skipfitnessinitialpopulation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:flthreshold= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:tmax2= 960000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:tmax1= 120000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:srctestfolder= /src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:failing= org.apache.commons.math3.distribution.HypergeometricDistributionTest:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logtestexecution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:projectIdentifier= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:stopfirst= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:customengine= fr.inria.astor.approaches.zm.ZmEngine
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:bintestfolder= /target/test-classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxGeneration= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:max_synthesis_step= 2000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxtime= 60
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvmversion= 1.7.0_80
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:mode= jgenprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvm4evosuitetestexecution= /mnt/vdb1/home/ubuntu/jdk1.7.0_80/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:dependenciespath= /tmp/math_2_Genprog/target/classes/:/tmp/math_2_Genprog/target/test-classes/:/tmp/math_2_Genprog/lib/commons-discovery-0.5.jar:/mnt/vdb1/home/ubuntu/defects4j-repair-runner/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:packageToInstrument= org.apache.commons
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:parsesourcefromoriginal= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:srcjavafolder= /src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:location= /tmp/math_2_Genprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:68) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.startEvolution(AstorCoreEngine.java:169) - 
----Starting Solution Search
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:235) - Time Repair Loop (s): 0.0
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:237) - generationsexecuted: 0
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:299) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:249) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
TOTAL_TIME=0.0
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=null
NR_FAILLING_COMPILATIONS=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=MAX_GENERATION

Patch stats:

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:98) - Storing ing JSON at /tmp/math_2_Genprog/./output_astor/AstorMain-math_2_Genprog//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:99) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":null,"OUTPUT_STATUS":"MAX_GENERATION","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":null,"TOTAL_TIME":0.0,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:197) - Time Total(s): 270.045
Number of SuspiciousModificationPoint: 150
SuspiciousModificationPoint:         return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 268
Used ingredient: getSampleSize() + getNumberOfSuccesses() - getPopulationSize());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1/HypergeometricDistribution.java
Used ingredient: double q = (double) (populationSize - sampleSize) / (double) populationSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2/HypergeometricDistribution.java
Used ingredient: return FastMath.min(getNumberOfSuccesses(), getSampleSize());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3/HypergeometricDistribution.java
Used ingredient: return delegate.nextHypergeometric(populationSize, numberOfSuccesses, sampleSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4/HypergeometricDistribution.java
Used ingredient: double p = (double) sampleSize / (double) populationSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5/HypergeometricDistribution.java
Used ingredient: * @return random value sampled from the Hypergeometric(numberOfSuccesses, sampleSize) distribution
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6/HypergeometricDistribution.java
Used ingredient: * @throws NumberIsTooLargeException  if {@code numberOfSuccesses > populationSize},
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7/HypergeometricDistribution.java
Used ingredient: * @throws NumberIsTooLargeException if {@code numberOfSuccesses > populationSize},
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8/HypergeometricDistribution.java
Used ingredient: return Double.isNaN(x.getReal()) || Double.isNaN(y.getReal()) || Double.isNaN(z.getReal());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9/HypergeometricDistribution.java
Used ingredient: distribution.getNumberOfSuccesses(), distribution.getSampleSize());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10/HypergeometricDistribution.java
Used ingredient: return (double)entries.size()/(double)getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/11/HypergeometricDistribution.java
Used ingredient: * @return random value sampled from the Zipf(numberOfElements, exponent) distribution
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/12/HypergeometricDistribution.java
Used ingredient: ((double) binStats.get(0).getN()) / (double) sampleStats.getN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/13/HypergeometricDistribution.java
Used ingredient: ((double) binStats.get(i).getN()) / (double) sampleStats.getN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/14/HypergeometricDistribution.java
Used ingredient: public int nextHypergeometric(int populationSize, int numberOfSuccesses, int sampleSize)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/15/HypergeometricDistribution.java
Used ingredient: int[] domain = getDomain(populationSize, numberOfSuccesses, sampleSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/16/HypergeometricDistribution.java
Used ingredient: final int[] domain = getDomain(populationSize, numberOfSuccesses, sampleSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/17/HypergeometricDistribution.java
Used ingredient: testHypergeometricDistributionProbabilities(populationSize, sampleSize, numberOfSucceses, data);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/18/HypergeometricDistribution.java
Used ingredient: public HypergeometricDistribution(int populationSize, int numberOfSuccesses, int sampleSize)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/19/HypergeometricDistribution.java
Used ingredient: return new ZipfDistribution(getRandomGenerator(), numberOfElements, exponent).sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/20/HypergeometricDistribution.java
Used ingredient: return !isNaN() && (Double.isInfinite(x) || Double.isInfinite(y) || Double.isInfinite(z));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/21/HypergeometricDistribution.java
Used ingredient: return (double) getCumFreq(v) / (double) sumFreq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/22/HypergeometricDistribution.java
Used ingredient: final double global = hyperplane.getOffset(((OrientedPoint) getHyperplane()).getLocation());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/23/HypergeometricDistribution.java
Used ingredient: * @return random value sampled from the Binomial(numberOfTrials, probabilityOfSuccess) distribution
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/24/HypergeometricDistribution.java
Used ingredient: Assert.fail("numberOfSuccesses > populationSize. NumberIsTooLargeException expected");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/25/HypergeometricDistribution.java
Used ingredient: return format(new Complex(c, 0), new StringBuffer(), new FieldPosition(0)).toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/26/HypergeometricDistribution.java
Used ingredient: setBarycenter(((OrientedPoint) getTree(false).getCut().getHyperplane()).getLocation());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/27/HypergeometricDistribution.java
Used ingredient: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/28/HypergeometricDistribution.java
Used ingredient: final double endOffset   = inserted.getLine().getOffset(edge.getEnd().getLocation());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/29/HypergeometricDistribution.java
Used ingredient: int value = randomData.nextPascal(distribution.getNumberOfSuccesses(), distribution.getProbabilityOfSuccess());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/30/HypergeometricDistribution.java
Used ingredient: public double evaluate(final double[] values, final double cutoff, final Direction direction)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/31/HypergeometricDistribution.java
Used ingredient: return hasIntercept ? (getSumSquaredErrors() / (n - 2)) : (getSumSquaredErrors() / (n - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/32/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(new Fraction(4).doubleValue(), uv.getEntry(0, 0).doubleValue(), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/33/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(new Fraction(-2).doubleValue(), uv.getEntry(0, 1).doubleValue(), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/34/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(new Fraction(8).doubleValue(), uv.getEntry(1, 0).doubleValue(), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/35/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(new Fraction(-4).doubleValue(), uv.getEntry(1, 1).doubleValue(), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/36/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(new Fraction(6).doubleValue(), uv.getEntry(2, 1).doubleValue(), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/37/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals("identity trace", 3d, m.getTrace().doubleValue(), entryTolerance);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/38/HypergeometricDistribution.java
Used ingredient: int value = randomData.nextHypergeometric(distribution.getPopulationSize(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/39/HypergeometricDistribution.java
Used ingredient: final double funcScaledValue = funcScaled.value(funcScaledResult.getPoint());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/40/HypergeometricDistribution.java
Used ingredient: final double[][] sampleSigma = new Covariance(samples).getCovarianceMatrix().getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/41/HypergeometricDistribution.java
Used ingredient: if (getSampleSize() > getNumberOfRegressors()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/42/HypergeometricDistribution.java
Used ingredient: return generalizedHarmonic(x, exponent) / generalizedHarmonic(numberOfElements, exponent);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/43/HypergeometricDistribution.java
Used ingredient: this(new Well19937c(), populationSize, numberOfSuccesses, sampleSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/44/HypergeometricDistribution.java
Used ingredient: while (nextGeneration.getPopulationSize() < nextGeneration.getPopulationLimit()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/45/HypergeometricDistribution.java
Used ingredient: if (nextGeneration.getPopulationSize() < nextGeneration.getPopulationLimit()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/46/HypergeometricDistribution.java
Used ingredient: return 2 * ((double) largerRankSums) / ((double) m);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/47/HypergeometricDistribution.java
Used ingredient: return 1 - calculateResidualSumOfSquares() / calculateTotalSumOfSquares();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/48/HypergeometricDistribution.java
Used ingredient: public double evaluate(final double[] values, final double[] weights, final double mean)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/49/HypergeometricDistribution.java
Used ingredient: result = prime * result + (getRepresentation() == null ? 0 : getRepresentation().hashCode());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/50/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(new Fraction(-12).doubleValue(), uv.getEntry(2, 0).doubleValue(), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/51/HypergeometricDistribution.java
Used ingredient: return (1.0 / FastMath.pow(x, exponent)) / generalizedHarmonic(numberOfElements, exponent);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/52/HypergeometricDistribution.java
Used ingredient: int value = randomData.nextZipf(distribution.getNumberOfElements(), distribution.getExponent());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/53/HypergeometricDistribution.java
Used ingredient: public double evaluate (final double[] values, final double cutoff, final Direction direction,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/54/HypergeometricDistribution.java
Used ingredient: final double sX = sPrime.value(new DerivativeStructure(1, 1, 0, x)).getPartialDerivative(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/55/HypergeometricDistribution.java
Used ingredient: expected[0] = binUpperBounds[0] == 0 ? (double) smallSampleSize / (double) n :
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/56/HypergeometricDistribution.java
Used ingredient: final double h = 0.001 * (interpolator.getCurrentTime() - interpolator.getPreviousTime());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/57/HypergeometricDistribution.java
Used ingredient: return new HypergeometricDistribution(getRandomGenerator(),populationSize,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/58/HypergeometricDistribution.java
Used ingredient: return 1 + ((left  == null) ? 0 : left.size()) + ((right == null) ? 0 : right.size());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/59/HypergeometricDistribution.java
Used ingredient: double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/60/HypergeometricDistribution.java
Used ingredient: protected double[] computeObjectiveGradient(final double[] evaluationPoint) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/61/HypergeometricDistribution.java
Used ingredient: final double tmp2 = trustRegionCenterOffset.getEntry(i) - step * glag.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/62/HypergeometricDistribution.java
Used ingredient: final double tmp = trustRegionCenterOffset.getEntry(i) + scale * work1.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/63/HypergeometricDistribution.java
Used ingredient: (1 - 1 / ((double) 4 * dimension) + 1 / ((double) 21 * dimension * dimension));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/64/HypergeometricDistribution.java
Used ingredient: return new DerivativeStructure(t.getFreeParameters(), 0, f.value(t.getValue()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/65/HypergeometricDistribution.java
Used ingredient: return new DerivativeStructure(compiler.getFreeParameters(), compiler.getOrder(), 0.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/66/HypergeometricDistribution.java
Used ingredient: return new DerivativeStructure(compiler.getFreeParameters(), compiler.getOrder(), 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/67/HypergeometricDistribution.java
Used ingredient: * @param numberOfSuccesses Number of successes in the population.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/68/HypergeometricDistribution.java
Used ingredient: return ((Double)this.getFitness()).compareTo(another.getFitness());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/69/HypergeometricDistribution.java
Used ingredient: return decodeGeneric(sequence, getRepresentation(), sortedRepresentation);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/70/HypergeometricDistribution.java
Used ingredient: public Corrector(final double[] previous, final double[] scaled, final double[] state) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/71/HypergeometricDistribution.java
Used ingredient: return 1 - (1 - calculateRSquared()) * (n / (n - getX().getColumnDimension()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/72/HypergeometricDistribution.java
Used ingredient: return t / (getX().getRowDimension() - getX().getColumnDimension());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/73/HypergeometricDistribution.java
Used ingredient: return (double) getCount(v) / (double) sumFreq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/74/HypergeometricDistribution.java
Used ingredient: return biasCorrected ? result * ((double) length / (double)(length - 1)) : result;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/75/HypergeometricDistribution.java
Used ingredient: return Double.longBitsToDouble(MASK_NON_SIGN_LONG & Double.doubleToRawLongBits(x));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/76/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(msg, m.getEntry(i,j).doubleValue(), n.getEntry(i,j).doubleValue(), tolerance);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/77/HypergeometricDistribution.java
Used ingredient: * returned by the {@link #optimize(int,UnivariateFunction,GoalType,double,double) optimize}
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/78/HypergeometricDistribution.java
Used ingredient: return new BinomialDistribution(getRandomGenerator(), numberOfTrials, probabilityOfSuccess).sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/79/HypergeometricDistribution.java
Used ingredient: TestUtils.assertEquals(dstats.getPopulationVariance(), sstats.getPopulationVariance(), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/80/HypergeometricDistribution.java
Used ingredient: (double) ((binUpperBounds[0] + 1) * smallSampleSize) / (double) n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/81/HypergeometricDistribution.java
Used ingredient: private void testSampler(final double[][] covMatrix, int samples, double epsilon) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/82/HypergeometricDistribution.java
Used ingredient: double sNaive = u1.getX() * u2.getX() + u1.getY() * u2.getY() + u1.getZ() * u2.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/83/HypergeometricDistribution.java
Used ingredient: return func.value(new DerivativeStructure(1, 1, 0, x)).getPartialDerivative(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/84/HypergeometricDistribution.java
Used ingredient: Assert.fail("negative number of successes. NotPositiveException expected");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/85/HypergeometricDistribution.java
Used ingredient: double step = (pb.getFinalTime() - pb.getInitialTime()) * FastMath.pow(2.0, -i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/86/HypergeometricDistribution.java
Used ingredient: public static void assertEquals(double expected[], double observed[], double tolerance) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/87/HypergeometricDistribution.java
Used ingredient: public double nextGamma(double shape, double scale) throws NotStrictlyPositiveException {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/88/HypergeometricDistribution.java
Used ingredient: * @return random value sampled from the F(numeratorDf, denominatorDf) distribution
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/89/HypergeometricDistribution.java
Used ingredient: return ((Boolean) cell.getAttribute()) ? Location.INSIDE : Location.OUTSIDE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/90/HypergeometricDistribution.java
Used ingredient: return new BSPTree<S>(((Boolean) node.getAttribute()) ? Boolean.FALSE : Boolean.TRUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/91/HypergeometricDistribution.java
Used ingredient: return new Rotation(q0.getReal(), q1.getReal(), q2.getReal(), q3.getReal(), false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/92/HypergeometricDistribution.java
Used ingredient: return Double.valueOf(constantTerm).hashCode() ^ coefficients.hashCode();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/93/HypergeometricDistribution.java
Used ingredient: double tolerance = FastMath.max(getRelativeAccuracy() * z.abs(), getAbsoluteAccuracy());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/94/HypergeometricDistribution.java
Used ingredient: * returned by {@link #getPolynomials() getPolynomials}, except it does not build the
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/95/HypergeometricDistribution.java
Used ingredient: return 227 + 229 * getFreeParameters() + 233 * getOrder() + 239 * MathUtils.hash(data);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/96/HypergeometricDistribution.java
Used ingredient: return new DataTransferObject(compiler.getFreeParameters(), compiler.getOrder(), data);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/97/HypergeometricDistribution.java
Used ingredient: final double tMed = 0.5 * (sMed.getPreviousTime() + sMed.getCurrentTime());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/98/HypergeometricDistribution.java
Used ingredient: final double[] complete = new double[expandable.getTotalDimension()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/99/HypergeometricDistribution.java
Used ingredient: public double calculateTotalSumOfSquares() throws MathIllegalArgumentException {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/100/HypergeometricDistribution.java
SuspiciousModificationPoint:         if (!numericalVarianceIsCalculated) {
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 279
Used ingredient: if (!numericalMeanIsCalculated) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/101/HypergeometricDistribution.java
Used ingredient: numericalVarianceIsCalculated = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/102/HypergeometricDistribution.java
Used ingredient: numericalMeanIsCalculated = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/103/HypergeometricDistribution.java
Used ingredient: private boolean numericalVarianceIsCalculated = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/104/HypergeometricDistribution.java
Used ingredient: public double getNumericalVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/105/HypergeometricDistribution.java
Used ingredient: public RealMatrix calculateHat() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/106/HypergeometricDistribution.java
Used ingredient: if (varianceSum <= bestVarianceSum) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/107/HypergeometricDistribution.java
Used ingredient: numericalVariance = calculateNumericalVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/108/HypergeometricDistribution.java
Used ingredient: public void testGetNumericalVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/109/HypergeometricDistribution.java
Used ingredient: private boolean numericalMeanIsCalculated = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/110/HypergeometricDistribution.java
Used ingredient: if (data instanceof PopulationSize) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/111/HypergeometricDistribution.java
Used ingredient: if (theoreticalMinParams != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/112/HypergeometricDistribution.java
Used ingredient: public VectorialCovarianceTest() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/113/HypergeometricDistribution.java
Used ingredient: if (!(other instanceof RealVector)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/114/HypergeometricDistribution.java
Used ingredient: if (data instanceof InitialGuess) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/115/HypergeometricDistribution.java
Used ingredient: if (dim != covariances[i].length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/116/HypergeometricDistribution.java
Used ingredient: if (numberOfVariables < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/117/HypergeometricDistribution.java
Used ingredient: if (!coefficientsComputed) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/118/HypergeometricDistribution.java
Used ingredient: if (covariances.length != dim) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/119/HypergeometricDistribution.java
Used ingredient: if (variance > maxVariance) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/120/HypergeometricDistribution.java
Used ingredient: if (numberOfSuccesses > populationSize) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/121/HypergeometricDistribution.java
Used ingredient: numericalMean = calculateNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/122/HypergeometricDistribution.java
Used ingredient: if (data instanceof AbstractSimplex) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/123/HypergeometricDistribution.java
Used ingredient: if (a instanceof AbstractRealMatrix) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/124/HypergeometricDistribution.java
Used ingredient: if (!Double.isNaN(cachedNormalDeviate)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/125/HypergeometricDistribution.java
Used ingredient: if (cluster instanceof CentroidCluster) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/126/HypergeometricDistribution.java
Used ingredient: double getNumericalVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/127/HypergeometricDistribution.java
Used ingredient: if (other instanceof Quaternion) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/128/HypergeometricDistribution.java
Used ingredient: if (distance < selectedDistance) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/129/HypergeometricDistribution.java
Used ingredient: if (other instanceof DoubleIndex) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/130/HypergeometricDistribution.java
Used ingredient: return numericalVariance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/131/HypergeometricDistribution.java
Used ingredient: if (numeratorDegreesOfFreedom <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/132/HypergeometricDistribution.java
Used ingredient: if (value instanceof Serializable) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/133/HypergeometricDistribution.java
Used ingredient: if (line.contains("Dataset Name:")) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/134/HypergeometricDistribution.java
Used ingredient: if (theoreticalStartCost > 1.0e6) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/135/HypergeometricDistribution.java
Used ingredient: if (partialDerivatives == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/136/HypergeometricDistribution.java
Used ingredient: if (data instanceof SearchInterval) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/137/HypergeometricDistribution.java
Used ingredient: if (x.length != covariance.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/138/HypergeometricDistribution.java
Used ingredient: if (summariesValue != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/139/HypergeometricDistribution.java
Used ingredient: /** Cached numerical variance */
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/140/HypergeometricDistribution.java
Used ingredient: if (interpolator.scaled != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/141/HypergeometricDistribution.java
Used ingredient: if (interpolator.nordsieck != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/142/HypergeometricDistribution.java
Used ingredient: super(k, isCovarianceBiasCorrected);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/143/HypergeometricDistribution.java
Used ingredient: if (i < secondaryDiagonal.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/144/HypergeometricDistribution.java
Used ingredient: if (!isDefaultValue(value)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/145/HypergeometricDistribution.java
Used ingredient: if (covarianceMatrix == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/146/HypergeometricDistribution.java
Used ingredient: if (!Precision.equals(scale, 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/147/HypergeometricDistribution.java
Used ingredient: if (varianceImpl != variance) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/148/HypergeometricDistribution.java
Used ingredient: private double numericalVariance = Double.NaN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/149/HypergeometricDistribution.java
Used ingredient: if (!(obj instanceof VectorialCovariance)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/150/HypergeometricDistribution.java
Used ingredient: public Variance(boolean isBiasCorrected) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/151/HypergeometricDistribution.java
Used ingredient: double covarianceSingularityThreshold) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/152/HypergeometricDistribution.java
Used ingredient: if (Double.isNaN(ranks[i].getValue())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/153/HypergeometricDistribution.java
Used ingredient: protected RealVector calculateBeta() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/154/HypergeometricDistribution.java
Used ingredient: if (!(other instanceof DoublePoint)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/155/HypergeometricDistribution.java
Used ingredient: if (source.meanImpl instanceof Mean) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/156/HypergeometricDistribution.java
Used ingredient: if  (data instanceof BracketingStep) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/157/HypergeometricDistribution.java
Used ingredient: public class VectorialCovarianceTest {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/158/HypergeometricDistribution.java
Used ingredient: for (final Interval interval : list) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/159/HypergeometricDistribution.java
Used ingredient: if (m.entries.containsKey(rightKey)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/160/HypergeometricDistribution.java
Used ingredient: if (originalIsClockwise ^ clockwise) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/161/HypergeometricDistribution.java
Used ingredient: if (!shouldThrow && exactResult > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/162/HypergeometricDistribution.java
Used ingredient: if (args[j] instanceof Serializable) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/163/HypergeometricDistribution.java
Used ingredient: if (source.getVarianceImpl() instanceof Variance) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/164/HypergeometricDistribution.java
Used ingredient: public RealMatrix scalarAdd(final double d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/165/HypergeometricDistribution.java
Used ingredient: if (source.variance == source.varianceImpl) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/166/HypergeometricDistribution.java
Used ingredient: if (optimData[i] instanceof InitialGuess) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/167/HypergeometricDistribution.java
Used ingredient: * used by {@link #getNumericalVariance()}
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/168/HypergeometricDistribution.java
Used ingredient: variance = new Variance(isBiasCorrected);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/169/HypergeometricDistribution.java
Used ingredient: if (interpolator.polynomials == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/170/HypergeometricDistribution.java
Used ingredient: if (!Precision.equals(0.0, value, 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/171/HypergeometricDistribution.java
Used ingredient: if (numberOfSuccesses < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/172/HypergeometricDistribution.java
Used ingredient: if (Double.isNaN(iter.value())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/173/HypergeometricDistribution.java
Used ingredient: final Variance stat = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/174/HypergeometricDistribution.java
Used ingredient: public void testNormalVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/175/HypergeometricDistribution.java
Used ingredient: if (expected instanceof Double) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/176/HypergeometricDistribution.java
Used ingredient: if (entry.getValue() <= minValue) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/177/HypergeometricDistribution.java
Used ingredient: if (data instanceof ModelFunction) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/178/HypergeometricDistribution.java
Used ingredient: if (!test.equals(iter.value())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/179/HypergeometricDistribution.java
Used ingredient: if (constraint.getValue() < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/180/HypergeometricDistribution.java
Used ingredient: if (newSize > internalArray.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/181/HypergeometricDistribution.java
Used ingredient: if (other instanceof Fraction) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/182/HypergeometricDistribution.java
Used ingredient: for (final int row : selectedRows) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/183/HypergeometricDistribution.java
Used ingredient: if (!tmp1Solver.isNonSingular()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/184/HypergeometricDistribution.java
Used ingredient: if (!tmp2Solver.isNonSingular()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/185/HypergeometricDistribution.java
Used ingredient: if (m instanceof DiagonalMatrix) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/186/HypergeometricDistribution.java
Used ingredient: if (Double.isNaN(realPart)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/187/HypergeometricDistribution.java
Used ingredient: if (!oneSet.contains(item)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/188/HypergeometricDistribution.java
Used ingredient: if (node.insertCut(hyperplane)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/189/HypergeometricDistribution.java
Used ingredient: if (other instanceof FieldVector3D) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/190/HypergeometricDistribution.java
Used ingredient: if (original != cachedOriginal) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/191/HypergeometricDistribution.java
Used ingredient: private int numArtificialVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/192/HypergeometricDistribution.java
Used ingredient: if (data instanceof SimpleBounds) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/193/HypergeometricDistribution.java
Used ingredient: if (Double.isNaN(result)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/194/HypergeometricDistribution.java
Used ingredient: if (vecAbsoluteTolerance == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/195/HypergeometricDistribution.java
Used ingredient: if (! firstStepAlreadyComputed) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/196/HypergeometricDistribution.java
Used ingredient: if (Double.isInfinite(values[i])) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/197/HypergeometricDistribution.java
Used ingredient: if (theoreticalStartCost > 20.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/198/HypergeometricDistribution.java
Used ingredient: if (descriptivesValue != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/199/HypergeometricDistribution.java
Used ingredient: if (binomialCache.size() > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/200/HypergeometricDistribution.java
SuspiciousModificationPoint:             numericalVariance = calculateNumericalVariance();
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 280
Used ingredient: numericalMean = calculateNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/201/HypergeometricDistribution.java
Used ingredient: protected double calculateNumericalVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/202/HypergeometricDistribution.java
Used ingredient: protected RealMatrix calculateBetaVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/203/HypergeometricDistribution.java
Used ingredient: protected abstract RealMatrix calculateBetaVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/204/HypergeometricDistribution.java
Used ingredient: numericalVarianceIsCalculated = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/205/HypergeometricDistribution.java
Used ingredient: SemiVariance result = new SemiVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/206/HypergeometricDistribution.java
Used ingredient: double sigma = calculateErrorVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/207/HypergeometricDistribution.java
Used ingredient: VectorialCovariance other = (VectorialCovariance) obj;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/208/HypergeometricDistribution.java
Used ingredient: public double getNumericalVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/209/HypergeometricDistribution.java
Used ingredient: public void testGetNumericalVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/210/HypergeometricDistribution.java
Used ingredient: SemiVariance sv = new SemiVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/211/HypergeometricDistribution.java
Used ingredient: SemiVariance sv = new SemiVariance(false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/212/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(dist.getNumericalVariance(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/213/HypergeometricDistribution.java
Used ingredient: protected double calculateNumericalMean() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/214/HypergeometricDistribution.java
Used ingredient: (numArtificialVariables == rhs.numArtificialVariables) &&
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/215/HypergeometricDistribution.java
Used ingredient: final double sig = FastMath.sqrt(getNumericalVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/216/HypergeometricDistribution.java
Used ingredient: final double sigma = FastMath.sqrt(getNumericalVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/217/HypergeometricDistribution.java
Used ingredient: final RealVector residuals = calculateResiduals();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/218/HypergeometricDistribution.java
Used ingredient: private boolean numericalVarianceIsCalculated = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/219/HypergeometricDistribution.java
Used ingredient: private double numericalVariance = Double.NaN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/220/HypergeometricDistribution.java
Used ingredient: * used by {@link #getNumericalVariance()}
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/221/HypergeometricDistribution.java
Used ingredient: final Variance stat = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/222/HypergeometricDistribution.java
Used ingredient: double variance = StatUtils.variance(values);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/223/HypergeometricDistribution.java
Used ingredient: RealVector residuals = calculateResiduals();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/224/HypergeometricDistribution.java
Used ingredient: return calculateBetaVariance().getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/225/HypergeometricDistribution.java
Used ingredient: if (!numericalVarianceIsCalculated) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/226/HypergeometricDistribution.java
Used ingredient: difference = calculateMaxMembershipChange(oldMatrix);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/227/HypergeometricDistribution.java
Used ingredient: VectorialCovariance stat = new VectorialCovariance(2, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/228/HypergeometricDistribution.java
Used ingredient: double getNumericalVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/229/HypergeometricDistribution.java
Used ingredient: * Used by {@link #getNumericalVariance()}.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/230/HypergeometricDistribution.java
Used ingredient: Variance variance = new Variance(biasCorrected);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/231/HypergeometricDistribution.java
Used ingredient: Variance variance = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/232/HypergeometricDistribution.java
Used ingredient: protected double calculateErrorVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/233/HypergeometricDistribution.java
Used ingredient: return calculateErrorVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/234/HypergeometricDistribution.java
Used ingredient: EuclideanDistance f = new EuclideanDistance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/235/HypergeometricDistribution.java
Used ingredient: double scalRelativeTolerance = scalAbsoluteTolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/236/HypergeometricDistribution.java
Used ingredient: private static final Variance VARIANCE = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/237/HypergeometricDistribution.java
Used ingredient: vecAbsoluteTolerance  = absoluteTolerance.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/238/HypergeometricDistribution.java
Used ingredient: vecRelativeTolerance  = relativeTolerance.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/239/HypergeometricDistribution.java
Used ingredient: double variance = regression.estimateRegressandVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/240/HypergeometricDistribution.java
Used ingredient: double[][] betaVariance = estimateRegressionParametersVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/241/HypergeometricDistribution.java
Used ingredient: Assert.assertTrue(Double.isNaN(dist.getNumericalVariance()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/242/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(dist.getNumericalVariance(), 1, tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/243/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(dist.getNumericalVariance(), 4, tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/244/HypergeometricDistribution.java
Used ingredient: private Variance variance = new Variance(secondMoment);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/245/HypergeometricDistribution.java
Used ingredient: sampleStats1.getVariance(), sampleStats2.getVariance(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/246/HypergeometricDistribution.java
Used ingredient: stateVariation = interpolator.stateVariation.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/247/HypergeometricDistribution.java
Used ingredient: if (source.variance == source.varianceImpl) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/248/HypergeometricDistribution.java
Used ingredient: protected double calculateYVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/249/HypergeometricDistribution.java
Used ingredient: protected final int getNumArtificialVariables() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/250/HypergeometricDistribution.java
Used ingredient: public void canEstimateRegressandVariance(){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/251/HypergeometricDistribution.java
Used ingredient: public double calculateResidualSumOfSquares() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/252/HypergeometricDistribution.java
Used ingredient: return calculateYVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/253/HypergeometricDistribution.java
Used ingredient: Variance result = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/254/HypergeometricDistribution.java
Used ingredient: dest.variance = source.variance.copy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/255/HypergeometricDistribution.java
Used ingredient: final RealVector b = ols.calculateBeta().copy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/256/HypergeometricDistribution.java
Used ingredient: final double meanX = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/257/HypergeometricDistribution.java
Used ingredient: scalAbsoluteTolerance, scalRelativeTolerance);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/258/HypergeometricDistribution.java
Used ingredient: dest.varianceImpl = source.varianceImpl.copy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/259/HypergeometricDistribution.java
Used ingredient: accum3 /= variance * FastMath.sqrt(variance);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/260/HypergeometricDistribution.java
Used ingredient: final double[] z = calculateDifferences(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/261/HypergeometricDistribution.java
Used ingredient: this.parRelativeTolerance = parRelativeTolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/262/HypergeometricDistribution.java
Used ingredient: (dist.getNumericalMean() * dist.getNumericalMean()), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/263/HypergeometricDistribution.java
Used ingredient: final double upsideSemiVariance = sv.evaluate(values);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/264/HypergeometricDistribution.java
Used ingredient: final double[] zAbs = calculateAbsoluteDifferences(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/265/HypergeometricDistribution.java
Used ingredient: RealMatrix m = MatrixUtils.createRealMatrix(data);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/266/HypergeometricDistribution.java
Used ingredient: RealMatrix b = MatrixUtils.createRealMatrix(4, 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/267/HypergeometricDistribution.java
Used ingredient: double columnVariance = variance.evaluate(matrix.getColumn(0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/268/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(dist.getNumericalVariance(), 0.0, tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/269/HypergeometricDistribution.java
Used ingredient: errorCovariance = processModel.getInitialErrorCovariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/270/HypergeometricDistribution.java
Used ingredient: Variance populationVariance = new Variance(secondMoment);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/271/HypergeometricDistribution.java
Used ingredient: covarianceMatrix = new Array2DRowRealMatrix(covariances);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/272/HypergeometricDistribution.java
Used ingredient: int column = i + tableau.getArtificialVariableOffset();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/273/HypergeometricDistribution.java
Used ingredient: * cutoff point will be used to calculate SemiVariance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/274/HypergeometricDistribution.java
Used ingredient: empiricalDistribution = new EmpiricalDistribution(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/275/HypergeometricDistribution.java
Used ingredient: RealMatrix covRM = MatrixUtils.createRealMatrix(cov);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/276/HypergeometricDistribution.java
Used ingredient: if (source.getVarianceImpl() instanceof Variance) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/277/HypergeometricDistribution.java
Used ingredient: RealMatrix actual = realMatrixFormat.parse(source);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/278/HypergeometricDistribution.java
Used ingredient: this.costRelativeTolerance = costRelativeTolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/279/HypergeometricDistribution.java
Used ingredient: RealMatrix expected = MatrixUtils.createRealMatrix(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/280/HypergeometricDistribution.java
Used ingredient: if (tableau.getNumArtificialVariables() > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/281/HypergeometricDistribution.java
Used ingredient: RealMatrix hat = model.calculateHat();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/282/HypergeometricDistribution.java
Used ingredient: if (tableau.getNumArtificialVariables() == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/283/HypergeometricDistribution.java
Used ingredient: public double estimateRegressandVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/284/HypergeometricDistribution.java
Used ingredient: RealVector olsBeta = ols.calculateBeta();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/285/HypergeometricDistribution.java
Used ingredient: RealVector glsBeta = gls.calculateBeta();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/286/HypergeometricDistribution.java
Used ingredient: CircleScalar circle = new CircleScalar();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/287/HypergeometricDistribution.java
Used ingredient: Variance.copy(source.variance, dest.variance);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/288/HypergeometricDistribution.java
Used ingredient: dest.variance = (Variance) dest.varianceImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/289/HypergeometricDistribution.java
Used ingredient: Variance v1 = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/290/HypergeometricDistribution.java
Used ingredient: Variance v = new Variance(m4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/291/HypergeometricDistribution.java
Used ingredient: final RealMatrix covMat = mvn.getCovariances();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/292/HypergeometricDistribution.java
Used ingredient: NumberFormat nf = NumberFormat.getInstance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/293/HypergeometricDistribution.java
Used ingredient: scalAbsoluteTolerance = absoluteTolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/294/HypergeometricDistribution.java
Used ingredient: CircleVectorial circle = new CircleVectorial();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/295/HypergeometricDistribution.java
Used ingredient: Covariance covInstance = new Covariance(matrix);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/296/HypergeometricDistribution.java
Used ingredient: final RealMatrix m = createRealMatrix(1, nCols);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/297/HypergeometricDistribution.java
Used ingredient: final RealMatrix m = createRealMatrix(nRows, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/298/HypergeometricDistribution.java
Used ingredient: scalRelativeTolerance = relativeTolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/299/HypergeometricDistribution.java
Used ingredient: UnivariateFunction dSpline = spline.derivative();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/300/HypergeometricDistribution.java
SuspiciousModificationPoint:             numericalVarianceIsCalculated = true;
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 281
Used ingredient: numericalMeanIsCalculated = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/301/HypergeometricDistribution.java
Used ingredient: if (!numericalVarianceIsCalculated) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/302/HypergeometricDistribution.java
Used ingredient: if (!numericalMeanIsCalculated) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/303/HypergeometricDistribution.java
Used ingredient: private boolean numericalVarianceIsCalculated = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/304/HypergeometricDistribution.java
Used ingredient: numericalVariance = calculateNumericalVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/305/HypergeometricDistribution.java
Used ingredient: private boolean biasCorrected = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/306/HypergeometricDistribution.java
Used ingredient: numericalMean = calculateNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/307/HypergeometricDistribution.java
Used ingredient: private boolean numericalMeanIsCalculated = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/308/HypergeometricDistribution.java
Used ingredient: final Variance stat = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/309/HypergeometricDistribution.java
Used ingredient: private boolean isBiasCorrected = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/310/HypergeometricDistribution.java
Used ingredient: private Variance variance = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/311/HypergeometricDistribution.java
Used ingredient: this.numArtificialVariables = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/312/HypergeometricDistribution.java
Used ingredient: private boolean firstCall = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/313/HypergeometricDistribution.java
Used ingredient: coefficientsComputed = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/314/HypergeometricDistribution.java
Used ingredient: private double numericalVariance = Double.NaN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/315/HypergeometricDistribution.java
Used ingredient: SemiVariance result = new SemiVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/316/HypergeometricDistribution.java
Used ingredient: numberOfSuccesses, populationSize, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/317/HypergeometricDistribution.java
Used ingredient: Variance result = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/318/HypergeometricDistribution.java
Used ingredient: public RealMatrix calculateHat() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/319/HypergeometricDistribution.java
Used ingredient: return numericalVariance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/320/HypergeometricDistribution.java
Used ingredient: super(k, isCovarianceBiasCorrected);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/321/HypergeometricDistribution.java
Used ingredient: uniquePointIsCenter = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/322/HypergeometricDistribution.java
Used ingredient: originalIsClockwise = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/323/HypergeometricDistribution.java
Used ingredient: RealMatrix hat = model.calculateHat();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/324/HypergeometricDistribution.java
Used ingredient: isSymmetricInternal(matrix, eps, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/325/HypergeometricDistribution.java
Used ingredient: * number of evaluations will be stored.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/326/HypergeometricDistribution.java
Used ingredient: SemiVariance sv = new SemiVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/327/HypergeometricDistribution.java
Used ingredient: double getNumericalVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/328/HypergeometricDistribution.java
Used ingredient: Variance variance = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/329/HypergeometricDistribution.java
Used ingredient: RealMatrix rm = ols.calculateHat();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/330/HypergeometricDistribution.java
Used ingredient: super.setVarianceImpl(varianceImpl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/331/HypergeometricDistribution.java
Used ingredient: /** Cached numerical variance */
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/332/HypergeometricDistribution.java
Used ingredient: RealMatrix inverse = es.getInverse();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/333/HypergeometricDistribution.java
Used ingredient: internalArray[substIndex] = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/334/HypergeometricDistribution.java
Used ingredient: StatUtils.variance(values) == 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/335/HypergeometricDistribution.java
Used ingredient: inverseCumulativeTestValues = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/336/HypergeometricDistribution.java
Used ingredient: private boolean firstTime = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/337/HypergeometricDistribution.java
Used ingredient: protected boolean incMoment = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/338/HypergeometricDistribution.java
Used ingredient: firstStepAlreadyComputed = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/339/HypergeometricDistribution.java
Used ingredient: return new Variance(false).evaluate(values);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/340/HypergeometricDistribution.java
Used ingredient: return covariance(xArray, yArray, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/341/HypergeometricDistribution.java
Used ingredient: UnivariatePointValuePair best = current;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/342/HypergeometricDistribution.java
Used ingredient: public double getNumericalVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/343/HypergeometricDistribution.java
Used ingredient: omegaImaginaryCounterClockwise = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/344/HypergeometricDistribution.java
Used ingredient: Assert.fail("Variance Covariance not correct");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/345/HypergeometricDistribution.java
Used ingredient: GeometricMean result = new GeometricMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/346/HypergeometricDistribution.java
Used ingredient: return computeCovarianceMatrix(data, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/347/HypergeometricDistribution.java
Used ingredient: variance = new Variance(isBiasCorrected);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/348/HypergeometricDistribution.java
Used ingredient: final RealVector actual = create(data);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/349/HypergeometricDistribution.java
Used ingredient: * @param covariances Covariance matrix.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/350/HypergeometricDistribution.java
Used ingredient: return new ArrayRealVector(data, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/351/HypergeometricDistribution.java
Used ingredient: RealVector b = calculateBeta();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/352/HypergeometricDistribution.java
Used ingredient: maxVariance = variance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/353/HypergeometricDistribution.java
Used ingredient: public VectorialCovarianceTest() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/354/HypergeometricDistribution.java
Used ingredient: private int numArtificialVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/355/HypergeometricDistribution.java
Used ingredient: return calculateExactPValue(Wmax, N);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/356/HypergeometricDistribution.java
Used ingredient: bestVarianceSum = varianceSum;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/357/HypergeometricDistribution.java
Used ingredient: private double covarianceNumerator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/358/HypergeometricDistribution.java
Used ingredient: empiricalDistribution.getNextValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/359/HypergeometricDistribution.java
Used ingredient: return covarianceNumerator / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/360/HypergeometricDistribution.java
Used ingredient: this.varianceImpl = varianceImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/361/HypergeometricDistribution.java
Used ingredient: return covarianceImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/362/HypergeometricDistribution.java
Used ingredient: return apply(new Variance(false));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/363/HypergeometricDistribution.java
Used ingredient: return numArtificialVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/364/HypergeometricDistribution.java
Used ingredient: final int numRetries = retry.value();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/365/HypergeometricDistribution.java
Used ingredient: RealMatrix scalarMultiply(double d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/366/HypergeometricDistribution.java
Used ingredient: covarianceImpl.increment(value);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/367/HypergeometricDistribution.java
Used ingredient: final double value = iter.value();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/368/HypergeometricDistribution.java
Used ingredient: Percentile result = new Percentile();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/369/HypergeometricDistribution.java
Used ingredient: return variance.isBiasCorrected();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/370/HypergeometricDistribution.java
Used ingredient: checkVarianceConsistency(model);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/371/HypergeometricDistribution.java
Used ingredient: double[] variances = new double[4];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/372/HypergeometricDistribution.java
Used ingredient: Comparable<?> value = iter.next();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/373/HypergeometricDistribution.java
Used ingredient: numArtificialVariables ^
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/374/HypergeometricDistribution.java
Used ingredient: checkMatricesValues(testSquare5,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/375/HypergeometricDistribution.java
Used ingredient: checkMatricesValues(testSquare3,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/376/HypergeometricDistribution.java
Used ingredient: final double mid = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/377/HypergeometricDistribution.java
Used ingredient: RealMatrix result = this.copy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/378/HypergeometricDistribution.java
Used ingredient: RealMatrix transformed = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/379/HypergeometricDistribution.java
Used ingredient: double sAccurate = u1.dotProduct(u2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/380/HypergeometricDistribution.java
Used ingredient: this.varianceDirection = direction;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/381/HypergeometricDistribution.java
Used ingredient: int numberOfVariables = 27;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/382/HypergeometricDistribution.java
Used ingredient: return inverseCumulativeTestValues;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/383/HypergeometricDistribution.java
Used ingredient: final StatisticalSummary s = time[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/384/HypergeometricDistribution.java
Used ingredient: SubHyperplane<S> plusOutside = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/385/HypergeometricDistribution.java
Used ingredient: SummaryStatistics sampleStats = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/386/HypergeometricDistribution.java
Used ingredient: this.stringValue = stringValue;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/387/HypergeometricDistribution.java
Used ingredient: private boolean isMinimize = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/388/HypergeometricDistribution.java
Used ingredient: PointValuePair lastResult = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/389/HypergeometricDistribution.java
Used ingredient: cumulativeTestValues = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/390/HypergeometricDistribution.java
Used ingredient: boolean sameSignature = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/391/HypergeometricDistribution.java
Used ingredient: vectorsInitialized = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/392/HypergeometricDistribution.java
Used ingredient: private boolean useLU = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/393/HypergeometricDistribution.java
Used ingredient: private static int fitnessCalls = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/394/HypergeometricDistribution.java
Used ingredient: Cluster<T> selectedCluster = null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/395/HypergeometricDistribution.java
Used ingredient: coefficientsComputed = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/396/HypergeometricDistribution.java
Used ingredient: visited[actualIndex] = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/397/HypergeometricDistribution.java
Used ingredient: boolean result = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/398/HypergeometricDistribution.java
Used ingredient: RealVector residuals = calculateResiduals();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/399/HypergeometricDistribution.java
Used ingredient: /** Exponential evaluated at integer values,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/400/HypergeometricDistribution.java
SuspiciousModificationPoint:         return numericalVariance;
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 283
Used ingredient: return numericalMean;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/401/HypergeometricDistribution.java
Used ingredient: return numArtificialVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/402/HypergeometricDistribution.java
Used ingredient: return numSlackVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/403/HypergeometricDistribution.java
Used ingredient: return new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/404/HypergeometricDistribution.java
Used ingredient: return super.getVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/405/HypergeometricDistribution.java
Used ingredient: return calculateYVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/406/HypergeometricDistribution.java
Used ingredient: return numDecisionVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/407/HypergeometricDistribution.java
Used ingredient: * @return the SemiVariance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/408/HypergeometricDistribution.java
Used ingredient: return numerator.intValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/409/HypergeometricDistribution.java
Used ingredient: return covarianceMatrix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/410/HypergeometricDistribution.java
Used ingredient: return numberOfSuccesses;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/411/HypergeometricDistribution.java
Used ingredient: * @return beta variance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/412/HypergeometricDistribution.java
Used ingredient: * @return error variance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/413/HypergeometricDistribution.java
Used ingredient: return numObservations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/414/HypergeometricDistribution.java
Used ingredient: return numGenerations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/415/HypergeometricDistribution.java
Used ingredient: return numberOfTrials;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/416/HypergeometricDistribution.java
Used ingredient: return numeratorFormat;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/417/HypergeometricDistribution.java
Used ingredient: double getNumericalVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/418/HypergeometricDistribution.java
Used ingredient: return apply(varianceImpl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/419/HypergeometricDistribution.java
Used ingredient: return numerator.longValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/420/HypergeometricDistribution.java
Used ingredient: return super.getCovariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/421/HypergeometricDistribution.java
Used ingredient: return imaginaryCharacter;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/422/HypergeometricDistribution.java
Used ingredient: return partialDerivativeX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/423/HypergeometricDistribution.java
Used ingredient: return partialDerivativeY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/424/HypergeometricDistribution.java
Used ingredient: return super.getVarianceImpl();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/425/HypergeometricDistribution.java
Used ingredient: return variance.getN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/426/HypergeometricDistribution.java
Used ingredient: return varianceDirection;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/427/HypergeometricDistribution.java
Used ingredient: return varianceImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/428/HypergeometricDistribution.java
Used ingredient: return interpolatedTime;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/429/HypergeometricDistribution.java
Used ingredient: return vertices.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/430/HypergeometricDistribution.java
Used ingredient: return geometricMeanImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/431/HypergeometricDistribution.java
Used ingredient: return singularValues[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/432/HypergeometricDistribution.java
Used ingredient: return numParameters;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/433/HypergeometricDistribution.java
Used ingredient: return stateVariation;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/434/HypergeometricDistribution.java
Used ingredient: return variance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/435/HypergeometricDistribution.java
Used ingredient: return numberOfElements;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/436/HypergeometricDistribution.java
Used ingredient: return upper.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/437/HypergeometricDistribution.java
Used ingredient: * @return the variance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/438/HypergeometricDistribution.java
Used ingredient: return interpolation;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/439/HypergeometricDistribution.java
Used ingredient: return orthoTolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/440/HypergeometricDistribution.java
Used ingredient: return internalArray;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/441/HypergeometricDistribution.java
Used ingredient: return numStartingPoints;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/442/HypergeometricDistribution.java
Used ingredient: return numTrials;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/443/HypergeometricDistribution.java
Used ingredient: return numerator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/444/HypergeometricDistribution.java
Used ingredient: return calculateErrorVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/445/HypergeometricDistribution.java
Used ingredient: return partialDerivativeXX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/446/HypergeometricDistribution.java
Used ingredient: return partialDerivativeYY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/447/HypergeometricDistribution.java
Used ingredient: return partialDerivativeXY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/448/HypergeometricDistribution.java
Used ingredient: return interPt.distance(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/449/HypergeometricDistribution.java
Used ingredient: return new GeometricMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/450/HypergeometricDistribution.java
Used ingredient: return empiricalDistribution;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/451/HypergeometricDistribution.java
Used ingredient: return generationsEvolved;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/452/HypergeometricDistribution.java
Used ingredient: return StrictMath.asin(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/453/HypergeometricDistribution.java
Used ingredient: return StrictMath.atan(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/454/HypergeometricDistribution.java
Used ingredient: return sampleStats.getVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/455/HypergeometricDistribution.java
Used ingredient: return parRelativeTolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/456/HypergeometricDistribution.java
Used ingredient: return relativeTolerance[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/457/HypergeometricDistribution.java
Used ingredient: return internalArray.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/458/HypergeometricDistribution.java
Used ingredient: return super.getDistance(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/459/HypergeometricDistribution.java
Used ingredient: return errorCovariance.copy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/460/HypergeometricDistribution.java
Used ingredient: return polynomialDerivative();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/461/HypergeometricDistribution.java
Used ingredient: /** Cached numerical variance */
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/462/HypergeometricDistribution.java
Used ingredient: return statistics.getVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/463/HypergeometricDistribution.java
Used ingredient: numArtificialVariables ^
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/464/HypergeometricDistribution.java
Used ingredient: return evaluate(a, c, z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/465/HypergeometricDistribution.java
Used ingredient: * test calculateYVariance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/466/HypergeometricDistribution.java
Used ingredient: return actualSequence;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/467/HypergeometricDistribution.java
Used ingredient: return meanImpl.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/468/HypergeometricDistribution.java
Used ingredient: return a.newInstance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/469/HypergeometricDistribution.java
Used ingredient: return a.newInstance(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/470/HypergeometricDistribution.java
Used ingredient: return columnSeparator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/471/HypergeometricDistribution.java
Used ingredient: return newInstance(this);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/472/HypergeometricDistribution.java
Used ingredient: return maxIterationCount;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/473/HypergeometricDistribution.java
Used ingredient: return x.newInstance(r);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/474/HypergeometricDistribution.java
Used ingredient: return absoluteAccuracy;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/475/HypergeometricDistribution.java
Used ingredient: return super.getValues();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/476/HypergeometricDistribution.java
Used ingredient: return super.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/477/HypergeometricDistribution.java
Used ingredient: return minImpl.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/478/HypergeometricDistribution.java
Used ingredient: return relativeAccuracy;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/479/HypergeometricDistribution.java
Used ingredient: return measurementMatrix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/480/HypergeometricDistribution.java
Used ingredient: return super.apply(stat);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/481/HypergeometricDistribution.java
Used ingredient: return newInstance(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/482/HypergeometricDistribution.java
Used ingredient: return evaluations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/483/HypergeometricDistribution.java
Used ingredient: return rankCorrelation;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/484/HypergeometricDistribution.java
Used ingredient: return measurementNoise;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/485/HypergeometricDistribution.java
Used ingredient: return interpolator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/486/HypergeometricDistribution.java
Used ingredient: return randomGenerator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/487/HypergeometricDistribution.java
Used ingredient: return normalized.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/488/HypergeometricDistribution.java
Used ingredient: return ln2Split.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/489/HypergeometricDistribution.java
Used ingredient: return ln5Split.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/490/HypergeometricDistribution.java
Used ingredient: return StrictMath.tan(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/491/HypergeometricDistribution.java
Used ingredient: return eSplit.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/492/HypergeometricDistribution.java
Used ingredient: return super.subtract(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/493/HypergeometricDistribution.java
Used ingredient: return sqr2Split.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/494/HypergeometricDistribution.java
Used ingredient: return sumSqImpl.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/495/HypergeometricDistribution.java
Used ingredient: return v.getDistance(w);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/496/HypergeometricDistribution.java
Used ingredient: return sumImpl.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/497/HypergeometricDistribution.java
Used ingredient: return super.toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/498/HypergeometricDistribution.java
Used ingredient: * @return Y variance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/499/HypergeometricDistribution.java
Used ingredient: return new Plane(this);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/500/HypergeometricDistribution.java
SuspiciousModificationPoint:         final double N = getPopulationSize();
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 292
Used ingredient: final double n = getSampleSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/501/HypergeometricDistribution.java
Used ingredient: final double mn = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/502/HypergeometricDistribution.java
Used ingredient: final double mu = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/503/HypergeometricDistribution.java
Used ingredient: final double sol = result.getPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/504/HypergeometricDistribution.java
Used ingredient: final double p = getPoint(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/505/HypergeometricDistribution.java
Used ingredient: final double size1 = o1.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/506/HypergeometricDistribution.java
Used ingredient: final double size2 = o2.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/507/HypergeometricDistribution.java
Used ingredient: final double s = getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/508/HypergeometricDistribution.java
Used ingredient: final double[] point = p.getPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/509/HypergeometricDistribution.java
Used ingredient: final double a = getValidLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/510/HypergeometricDistribution.java
Used ingredient: final double[] init = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/511/HypergeometricDistribution.java
Used ingredient: final double b = getValidUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/512/HypergeometricDistribution.java
Used ingredient: final double sP = q.getScalarPart();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/513/HypergeometricDistribution.java
Used ingredient: final double mid = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/514/HypergeometricDistribution.java
Used ingredient: final double iV = md.illumination();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/515/HypergeometricDistribution.java
Used ingredient: final double x = rand.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/516/HypergeometricDistribution.java
Used ingredient: final double u = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/517/HypergeometricDistribution.java
Used ingredient: final double n = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/518/HypergeometricDistribution.java
Used ingredient: final double b1 = getSlope();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/519/HypergeometricDistribution.java
Used ingredient: final double x = nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/520/HypergeometricDistribution.java
Used ingredient: final double y = nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/521/HypergeometricDistribution.java
Used ingredient: final double[] lB = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/522/HypergeometricDistribution.java
Used ingredient: final double[] min = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/523/HypergeometricDistribution.java
Used ingredient: final double[] max = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/524/HypergeometricDistribution.java
Used ingredient: final double[] uB = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/525/HypergeometricDistribution.java
Used ingredient: final double s = getStandardDeviation();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/526/HypergeometricDistribution.java
Used ingredient: final double y = observations[i].getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/527/HypergeometricDistribution.java
Used ingredient: final double tol = getRelativeTolerance(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/528/HypergeometricDistribution.java
Used ingredient: public double getPopulationVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/529/HypergeometricDistribution.java
Used ingredient: final double t = getAbsoluteAccuracy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/530/HypergeometricDistribution.java
Used ingredient: final double[] point = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/531/HypergeometricDistribution.java
Used ingredient: final double llr = gDataSetsComparison(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/532/HypergeometricDistribution.java
Used ingredient: final double pT = getGlobalPreviousTime();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/533/HypergeometricDistribution.java
Used ingredient: final double[] guess = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/534/HypergeometricDistribution.java
Used ingredient: final double[] x = getPoint(i).getPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/535/HypergeometricDistribution.java
Used ingredient: final double area    = polygon.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/536/HypergeometricDistribution.java
Used ingredient: final double eps = getRelativeAccuracy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/537/HypergeometricDistribution.java
Used ingredient: final double coef = rand.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/538/HypergeometricDistribution.java
Used ingredient: final double e = exponential.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/539/HypergeometricDistribution.java
Used ingredient: final double u2 = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/540/HypergeometricDistribution.java
Used ingredient: final double[] vData = v.getDataRef();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/541/HypergeometricDistribution.java
Used ingredient: final double xi = x[j].getImaginary();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/542/HypergeometricDistribution.java
Used ingredient: final double[] vP = q.getVectorPart();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/543/HypergeometricDistribution.java
Used ingredient: final double p = getProbabilityOfSuccess();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/544/HypergeometricDistribution.java
Used ingredient: final double meanX = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/545/HypergeometricDistribution.java
Used ingredient: final double[] params = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/546/HypergeometricDistribution.java
Used ingredient: final double s1 = distribution.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/547/HypergeometricDistribution.java
Used ingredient: final double mse = getMeanSquareError();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/548/HypergeometricDistribution.java
Used ingredient: final double sc = getScale();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/549/HypergeometricDistribution.java
Used ingredient: final double[] x = createRealData(n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/550/HypergeometricDistribution.java
Used ingredient: final double m = getMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/551/HypergeometricDistribution.java
Used ingredient: final double lo = getMin();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/552/HypergeometricDistribution.java
Used ingredient: final double value = e.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/553/HypergeometricDistribution.java
Used ingredient: final double a1 = plane1.w.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/554/HypergeometricDistribution.java
Used ingredient: final double c1 = plane1.w.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/555/HypergeometricDistribution.java
Used ingredient: final double a2 = plane2.w.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/556/HypergeometricDistribution.java
Used ingredient: final double c2 = plane2.w.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/557/HypergeometricDistribution.java
Used ingredient: final double a3 = plane3.w.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/558/HypergeometricDistribution.java
Used ingredient: final double c3 = plane3.w.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/559/HypergeometricDistribution.java
Used ingredient: final double p = sample.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/560/HypergeometricDistribution.java
Used ingredient: final double min = getMin();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/561/HypergeometricDistribution.java
Used ingredient: final double a = getAlpha();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/562/HypergeometricDistribution.java
Used ingredient: public int getPopulationSize() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/563/HypergeometricDistribution.java
Used ingredient: final double[] y = value[i].clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/564/HypergeometricDistribution.java
Used ingredient: final double c = FastMath.nextUp(b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/565/HypergeometricDistribution.java
Used ingredient: final double sinT = FastMath.sin(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/566/HypergeometricDistribution.java
Used ingredient: final double t = tP.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/567/HypergeometricDistribution.java
Used ingredient: final double x = in.readDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/568/HypergeometricDistribution.java
Used ingredient: final double p = previous.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/569/HypergeometricDistribution.java
Used ingredient: final double alpha = v.dotProduct(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/570/HypergeometricDistribution.java
Used ingredient: final double x = t.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/571/HypergeometricDistribution.java
Used ingredient: final double b1 = plane1.w.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/572/HypergeometricDistribution.java
Used ingredient: final double b2 = plane2.w.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/573/HypergeometricDistribution.java
Used ingredient: final double b3 = plane3.w.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/574/HypergeometricDistribution.java
Used ingredient: final double t0 = t.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/575/HypergeometricDistribution.java
Used ingredient: final double d1 = glag.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/576/HypergeometricDistribution.java
Used ingredient: final double[] target = getTarget();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/577/HypergeometricDistribution.java
Used ingredient: final double c = current.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/578/HypergeometricDistribution.java
Used ingredient: final double[] v = super.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/579/HypergeometricDistribution.java
Used ingredient: final double v1 = o1.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/580/HypergeometricDistribution.java
Used ingredient: final double v2 = o2.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/581/HypergeometricDistribution.java
Used ingredient: final double xa = doubleHighPart(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/582/HypergeometricDistribution.java
Used ingredient: final double b = FastMath.nextUp(a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/583/HypergeometricDistribution.java
Used ingredient: final double[] m = d.getMeans();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/584/HypergeometricDistribution.java
Used ingredient: final double a = FastMath.min(p, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/585/HypergeometricDistribution.java
Used ingredient: final double tst = FastMath.sinh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/586/HypergeometricDistribution.java
Used ingredient: final double[] mean = mvn.getMeans();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/587/HypergeometricDistribution.java
Used ingredient: final double sh = getShape();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/588/HypergeometricDistribution.java
Used ingredient: final double sum = a.compute(add);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/589/HypergeometricDistribution.java
Used ingredient: final double[][] out = m.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/590/HypergeometricDistribution.java
Used ingredient: final double[][] suT = uT.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/591/HypergeometricDistribution.java
Used ingredient: final double[] p = previous.getKey();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/592/HypergeometricDistribution.java
Used ingredient: final double norm2 = v.dotProduct(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/593/HypergeometricDistribution.java
Used ingredient: final double s = y.dotProduct(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/594/HypergeometricDistribution.java
Used ingredient: final double t = x.dotProduct(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/595/HypergeometricDistribution.java
Used ingredient: final double vNorm = v.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/596/HypergeometricDistribution.java
Used ingredient: final double[][] x = b.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/597/HypergeometricDistribution.java
Used ingredient: final double pq = p.dotProduct(q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/598/HypergeometricDistribution.java
Used ingredient: final double vtv = v.dotProduct(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/599/HypergeometricDistribution.java
Used ingredient: final double LN2 = FastMath.log(2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/600/HypergeometricDistribution.java
SuspiciousModificationPoint:         final double m = getNumberOfSuccesses();
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 293
Used ingredient: final double r = getNumberOfSuccesses();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/601/HypergeometricDistribution.java
Used ingredient: final double mn = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/602/HypergeometricDistribution.java
Used ingredient: final double mu = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/603/HypergeometricDistribution.java
Used ingredient: final double meanX = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/604/HypergeometricDistribution.java
Used ingredient: final double p = getProbabilityOfSuccess();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/605/HypergeometricDistribution.java
Used ingredient: final double df = getDegreesOfFreedom();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/606/HypergeometricDistribution.java
Used ingredient: final double mse = getMeanSquareError();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/607/HypergeometricDistribution.java
Used ingredient: final double p = probabilityOfSuccess;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/608/HypergeometricDistribution.java
Used ingredient: final int N = getNumberOfElements();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/609/HypergeometricDistribution.java
Used ingredient: public int getNumberOfSuccesses() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/610/HypergeometricDistribution.java
Used ingredient: final double n = getSampleSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/611/HypergeometricDistribution.java
Used ingredient: final double mid = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/612/HypergeometricDistribution.java
Used ingredient: final double[] min = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/613/HypergeometricDistribution.java
Used ingredient: final double[] max = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/614/HypergeometricDistribution.java
Used ingredient: final double t = getAbsoluteAccuracy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/615/HypergeometricDistribution.java
Used ingredient: final double norm2 = delta.getNormSq();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/616/HypergeometricDistribution.java
Used ingredient: final double sumsq = data.getSumsq();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/617/HypergeometricDistribution.java
Used ingredient: final double pT = getGlobalPreviousTime();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/618/HypergeometricDistribution.java
Used ingredient: //final double mse = getMeanSquareError();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/619/HypergeometricDistribution.java
Used ingredient: final double[][] data = getTestSamples();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/620/HypergeometricDistribution.java
Used ingredient: final int ruleLength = getNumberOfPoints();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/621/HypergeometricDistribution.java
Used ingredient: final double a = getValidLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/622/HypergeometricDistribution.java
Used ingredient: final double b = getValidUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/623/HypergeometricDistribution.java
Used ingredient: final double[] lB = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/624/HypergeometricDistribution.java
Used ingredient: final double[] uB = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/625/HypergeometricDistribution.java
Used ingredient: final double sc = getScale();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/626/HypergeometricDistribution.java
Used ingredient: final double[] m = d.getMeans();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/627/HypergeometricDistribution.java
Used ingredient: final double[] mean = mvn.getMeans();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/628/HypergeometricDistribution.java
Used ingredient: final double vNorm = v.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/629/HypergeometricDistribution.java
Used ingredient: final double initial = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/630/HypergeometricDistribution.java
Used ingredient: final double norm = normal.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/631/HypergeometricDistribution.java
Used ingredient: final double sum = data.getSum();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/632/HypergeometricDistribution.java
Used ingredient: final double rnorm = r.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/633/HypergeometricDistribution.java
Used ingredient: final double norm = getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/634/HypergeometricDistribution.java
Used ingredient: final double norm = q.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/635/HypergeometricDistribution.java
Used ingredient: final double diffNorm = diff.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/636/HypergeometricDistribution.java
Used ingredient: final double comp = rand.nextGaussian();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/637/HypergeometricDistribution.java
Used ingredient: final double[] value = pv.getValueRef();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/638/HypergeometricDistribution.java
Used ingredient: final double rmax = delta * b.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/639/HypergeometricDistribution.java
Used ingredient: final double nthPhi = getArgument() / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/640/HypergeometricDistribution.java
Used ingredient: final double d = numberOfPoints * pmc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/641/HypergeometricDistribution.java
Used ingredient: final double N = getPopulationSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/642/HypergeometricDistribution.java
Used ingredient: final double atol = getAbsoluteAccuracy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/643/HypergeometricDistribution.java
Used ingredient: final double x = getPreferredEntryValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/644/HypergeometricDistribution.java
Used ingredient: final double[] coeffs = p.getCoefficients();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/645/HypergeometricDistribution.java
Used ingredient: final double eps = getRelativeAccuracy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/646/HypergeometricDistribution.java
Used ingredient: final double[] c = current.getValueRef();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/647/HypergeometricDistribution.java
Used ingredient: final double c = ranks[tiesTrace.get(0)];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/648/HypergeometricDistribution.java
Used ingredient: final double tol = getRelativeTolerance(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/649/HypergeometricDistribution.java
Used ingredient: final double[] a = dataset.getParameters();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/650/HypergeometricDistribution.java
Used ingredient: final double size1 = o1.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/651/HypergeometricDistribution.java
Used ingredient: final double size2 = o2.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/652/HypergeometricDistribution.java
Used ingredient: final double sP = q.getScalarPart();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/653/HypergeometricDistribution.java
Used ingredient: final double x = rand.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/654/HypergeometricDistribution.java
Used ingredient: final double u = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/655/HypergeometricDistribution.java
Used ingredient: final double n = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/656/HypergeometricDistribution.java
Used ingredient: final double b1 = getSlope();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/657/HypergeometricDistribution.java
Used ingredient: final double x = nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/658/HypergeometricDistribution.java
Used ingredient: final double y = nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/659/HypergeometricDistribution.java
Used ingredient: final double s = getStandardDeviation();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/660/HypergeometricDistribution.java
Used ingredient: final double y = observations[i].getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/661/HypergeometricDistribution.java
Used ingredient: final double coef = rand.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/662/HypergeometricDistribution.java
Used ingredient: final double u2 = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/663/HypergeometricDistribution.java
Used ingredient: final double[] vData = v.getDataRef();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/664/HypergeometricDistribution.java
Used ingredient: final double xi = x[j].getImaginary();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/665/HypergeometricDistribution.java
Used ingredient: final double[] vP = q.getVectorPart();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/666/HypergeometricDistribution.java
Used ingredient: final double[] params = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/667/HypergeometricDistribution.java
Used ingredient: final double s1 = distribution.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/668/HypergeometricDistribution.java
Used ingredient: final double m = getMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/669/HypergeometricDistribution.java
Used ingredient: final double value = e.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/670/HypergeometricDistribution.java
Used ingredient: final double p = sample.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/671/HypergeometricDistribution.java
Used ingredient: final double p = previous.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/672/HypergeometricDistribution.java
Used ingredient: final double x = t.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/673/HypergeometricDistribution.java
Used ingredient: final double t0 = t.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/674/HypergeometricDistribution.java
Used ingredient: final double[] target = getTarget();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/675/HypergeometricDistribution.java
Used ingredient: final double c = current.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/676/HypergeometricDistribution.java
Used ingredient: final double[] v = super.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/677/HypergeometricDistribution.java
Used ingredient: final double v1 = o1.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/678/HypergeometricDistribution.java
Used ingredient: final double v2 = o2.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/679/HypergeometricDistribution.java
Used ingredient: final double sh = getShape();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/680/HypergeometricDistribution.java
Used ingredient: final double norm2 = v.dotProduct(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/681/HypergeometricDistribution.java
Used ingredient: final double[] pcCol = pc.getColumn(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/682/HypergeometricDistribution.java
Used ingredient: final double value = iterator.value();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/683/HypergeometricDistribution.java
Used ingredient: final double d = divisor.getImaginary();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/684/HypergeometricDistribution.java
Used ingredient: final double actual = v.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/685/HypergeometricDistribution.java
Used ingredient: final double n = normal.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/686/HypergeometricDistribution.java
Used ingredient: final double actual = v.getL1Norm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/687/HypergeometricDistribution.java
Used ingredient: final double n = random.nextGaussian();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/688/HypergeometricDistribution.java
Used ingredient: final double x = random.nextGaussian();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/689/HypergeometricDistribution.java
Used ingredient: final double actual = v.getLInfNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/690/HypergeometricDistribution.java
Used ingredient: final double temp = work1.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/691/HypergeometricDistribution.java
Used ingredient: final double hP = hParam.get(paramName);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/692/HypergeometricDistribution.java
Used ingredient: final double value = iter.value();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/693/HypergeometricDistribution.java
Used ingredient: final double[] mCol = new double[nSum];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/694/HypergeometricDistribution.java
Used ingredient: final double x = operand[operandOffset];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/695/HypergeometricDistribution.java
Used ingredient: final double[] points = rule.getFirst();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/696/HypergeometricDistribution.java
Used ingredient: final double x       = abscissa.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/697/HypergeometricDistribution.java
Used ingredient: final double n = degreesOfFreedom;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/698/HypergeometricDistribution.java
Used ingredient: private final int numberOfSuccesses;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/699/HypergeometricDistribution.java
Used ingredient: final double rtol = getRelativeAccuracy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/700/HypergeometricDistribution.java
SuspiciousModificationPoint:         final double n = getSampleSize();
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 294
Used ingredient: final double sc = getScale();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/701/HypergeometricDistribution.java
Used ingredient: final double sh = getShape();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/702/HypergeometricDistribution.java
Used ingredient: final double size1 = o1.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/703/HypergeometricDistribution.java
Used ingredient: final double size2 = o2.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/704/HypergeometricDistribution.java
Used ingredient: final double b1 = getSlope();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/705/HypergeometricDistribution.java
Used ingredient: final double x = t.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/706/HypergeometricDistribution.java
Used ingredient: final double t0 = t.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/707/HypergeometricDistribution.java
Used ingredient: final double v1 = o1.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/708/HypergeometricDistribution.java
Used ingredient: final double v2 = o2.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/709/HypergeometricDistribution.java
Used ingredient: final double t = tP.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/710/HypergeometricDistribution.java
Used ingredient: final double x = rng.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/711/HypergeometricDistribution.java
Used ingredient: final double v = dist.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/712/HypergeometricDistribution.java
Used ingredient: final double N = getPopulationSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/713/HypergeometricDistribution.java
Used ingredient: final double mid = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/714/HypergeometricDistribution.java
Used ingredient: final double value = e.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/715/HypergeometricDistribution.java
Used ingredient: final double s2 = cloned.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/716/HypergeometricDistribution.java
Used ingredient: final double mn = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/717/HypergeometricDistribution.java
Used ingredient: final double sum = data.getSum();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/718/HypergeometricDistribution.java
Used ingredient: final double rnorm = r.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/719/HypergeometricDistribution.java
Used ingredient: final double norm = getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/720/HypergeometricDistribution.java
Used ingredient: final double norm = q.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/721/HypergeometricDistribution.java
Used ingredient: final double s = getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/722/HypergeometricDistribution.java
Used ingredient: final double min = getMin();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/723/HypergeometricDistribution.java
Used ingredient: final double w = getWeight(iMax);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/724/HypergeometricDistribution.java
Used ingredient: final double xr = x[j].getReal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/725/HypergeometricDistribution.java
Used ingredient: final double w = getWeight(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/726/HypergeometricDistribution.java
Used ingredient: final double u = x.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/727/HypergeometricDistribution.java
Used ingredient: final double p = sample.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/728/HypergeometricDistribution.java
Used ingredient: final double n = normal.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/729/HypergeometricDistribution.java
Used ingredient: final double mu = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/730/HypergeometricDistribution.java
Used ingredient: final double[] m = d.getMeans();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/731/HypergeometricDistribution.java
Used ingredient: final double vNorm = v.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/732/HypergeometricDistribution.java
Used ingredient: final double x = nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/733/HypergeometricDistribution.java
Used ingredient: final double y = nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/734/HypergeometricDistribution.java
Used ingredient: final double m = getMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/735/HypergeometricDistribution.java
Used ingredient: final double x = in.readDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/736/HypergeometricDistribution.java
Used ingredient: final double max = getMax();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/737/HypergeometricDistribution.java
Used ingredient: final double b = getBeta();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/738/HypergeometricDistribution.java
Used ingredient: final double[] p = getKey();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/739/HypergeometricDistribution.java
Used ingredient: final double t = time.get(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/740/HypergeometricDistribution.java
Used ingredient: final double p = getPoint(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/741/HypergeometricDistribution.java
Used ingredient: final double lo = getMin();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/742/HypergeometricDistribution.java
Used ingredient: final double a = getAlpha();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/743/HypergeometricDistribution.java
Used ingredient: final double[][] x = b.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/744/HypergeometricDistribution.java
Used ingredient: final double hi = getMax();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/745/HypergeometricDistribution.java
Used ingredient: final double yIn = fP.value(xIn);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/746/HypergeometricDistribution.java
Used ingredient: final double sP = q.getScalarPart();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/747/HypergeometricDistribution.java
Used ingredient: final double c = current.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/748/HypergeometricDistribution.java
Used ingredient: final double[] v = super.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/749/HypergeometricDistribution.java
Used ingredient: final double initial = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/750/HypergeometricDistribution.java
Used ingredient: final double c = divisor.getReal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/751/HypergeometricDistribution.java
Used ingredient: final double abscissa = x.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/752/HypergeometricDistribution.java
Used ingredient: final double a = getValidLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/753/HypergeometricDistribution.java
Used ingredient: final double b = getValidUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/754/HypergeometricDistribution.java
Used ingredient: final double[] init = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/755/HypergeometricDistribution.java
Used ingredient: final double e = exponential.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/756/HypergeometricDistribution.java
Used ingredient: final double[][] data = getTestSamples();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/757/HypergeometricDistribution.java
Used ingredient: final double actual = v.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/758/HypergeometricDistribution.java
Used ingredient: final double value = iter.value();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/759/HypergeometricDistribution.java
Used ingredient: final double sum = a.compute(add);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/760/HypergeometricDistribution.java
Used ingredient: final double a1 = plane1.w.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/761/HypergeometricDistribution.java
Used ingredient: final double c1 = plane1.w.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/762/HypergeometricDistribution.java
Used ingredient: final double a2 = plane2.w.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/763/HypergeometricDistribution.java
Used ingredient: final double c2 = plane2.w.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/764/HypergeometricDistribution.java
Used ingredient: final double a3 = plane3.w.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/765/HypergeometricDistribution.java
Used ingredient: final double c3 = plane3.w.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/766/HypergeometricDistribution.java
Used ingredient: final double b1 = plane1.w.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/767/HypergeometricDistribution.java
Used ingredient: final double b2 = plane2.w.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/768/HypergeometricDistribution.java
Used ingredient: final double b3 = plane3.w.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/769/HypergeometricDistribution.java
Used ingredient: final int n = getValidDataSize(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/770/HypergeometricDistribution.java
Used ingredient: final double p = previous.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/771/HypergeometricDistribution.java
Used ingredient: final double meanX = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/772/HypergeometricDistribution.java
Used ingredient: final double[] uB = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/773/HypergeometricDistribution.java
Used ingredient: final double[] target = getTarget();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/774/HypergeometricDistribution.java
Used ingredient: final double[] point = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/775/HypergeometricDistribution.java
Used ingredient: final double[] y = value[i].clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/776/HypergeometricDistribution.java
Used ingredient: final double xi = getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/777/HypergeometricDistribution.java
Used ingredient: final double bi = b.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/778/HypergeometricDistribution.java
Used ingredient: final double yi = y.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/779/HypergeometricDistribution.java
Used ingredient: final double xi = x.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/780/HypergeometricDistribution.java
Used ingredient: final double vi = v.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/781/HypergeometricDistribution.java
Used ingredient: final double bi = mb.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/782/HypergeometricDistribution.java
Used ingredient: final double xi = xL.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/783/HypergeometricDistribution.java
Used ingredient: final double y = v.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/784/HypergeometricDistribution.java
Used ingredient: final double d1 = s.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/785/HypergeometricDistribution.java
Used ingredient: final double xj = x.getEntry(j);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/786/HypergeometricDistribution.java
Used ingredient: final double[] p = fitter.fit();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/787/HypergeometricDistribution.java
Used ingredient: final double m0 = -r.getQ0();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/788/HypergeometricDistribution.java
Used ingredient: final double[] point = p.getPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/789/HypergeometricDistribution.java
Used ingredient: final double[] p = points.get(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/790/HypergeometricDistribution.java
Used ingredient: final double t = stage(this, i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/791/HypergeometricDistribution.java
Used ingredient: final double yP = fP.value(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/792/HypergeometricDistribution.java
Used ingredient: final double a = getA(n, x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/793/HypergeometricDistribution.java
Used ingredient: final double q1a = q1.getQ0();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/794/HypergeometricDistribution.java
Used ingredient: final double q2a = q2.getQ0();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/795/HypergeometricDistribution.java
Used ingredient: final double q1c = q1.getQ2();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/796/HypergeometricDistribution.java
Used ingredient: final double q2c = q2.getQ2();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/797/HypergeometricDistribution.java
Used ingredient: final double z = u.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/798/HypergeometricDistribution.java
Used ingredient: final double x = u.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/799/HypergeometricDistribution.java
Used ingredient: final double y = u.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/800/HypergeometricDistribution.java
SuspiciousModificationPoint:         return (n * m * (N - n) * (N - m)) / (N * N * (N - 1));
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 295
Used ingredient: * {@code [n * m * (N - n) * (N - m)] / [N^2 * (N - 1)]}.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/801/HypergeometricDistribution.java
Used ingredient: p = s * (2 * m * q * (q - r) - (b - a) * (r - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/802/HypergeometricDistribution.java
Used ingredient: return 2 * x * x - 3 * y * y + 4 * x * y - 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/803/HypergeometricDistribution.java
Used ingredient: return b - FastMath.sqrt((1 - p) * (b - a) * (b - c));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/804/HypergeometricDistribution.java
Used ingredient: return 2 * x * x - 3 * y * y + 4 * x * y - 5
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/805/HypergeometricDistribution.java
Used ingredient: return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/806/HypergeometricDistribution.java
Used ingredient: return p12 + (1.0 - p12) * (x - x2) / (x3 - x2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/807/HypergeometricDistribution.java
Used ingredient: (n0 * (n0 + 1)) / ((n0 - 1) * (n0 - 2) * (n0 - 3));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/808/HypergeometricDistribution.java
Used ingredient: return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/809/HypergeometricDistribution.java
Used ingredient: FastMath.sqrt((m * (m + 3) - 6) / (2.0 * (2 * m - 3))),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/810/HypergeometricDistribution.java
Used ingredient: return 2 - x - 6 * y + 4 * x2 - 2 * x * y + 3 * y2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/811/HypergeometricDistribution.java
Used ingredient: // monomial(t) = (t - t0) * (t - t1) * ... * (t - t(i-1))
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/812/HypergeometricDistribution.java
Used ingredient: return ((x0 + x1) * p12 + (x2 + x3) * (1.0 - p12)) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/813/HypergeometricDistribution.java
Used ingredient: return (((v1 / n1) + (v2 / n2)) * ((v1 / n1) + (v2 / n2))) /
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/814/HypergeometricDistribution.java
Used ingredient: ((n0 * n0) - 3 * (n0 -1)) * (nDevSq * nDevSq * (n0 - 1) * n0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/815/HypergeometricDistribution.java
Used ingredient: double f3 = (f0 + x / (2 * y * f0)) / (4 * x * x * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/816/HypergeometricDistribution.java
Used ingredient: return (sum1 - (sum2 * sum2 / n)) / (n - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/817/HypergeometricDistribution.java
Used ingredient: return (1.0 - p23) * (x - x3) / (x4 - x3) + p23;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/818/HypergeometricDistribution.java
Used ingredient: 2 * (m0 * (z * m0 - (q1 * y - q2 * x)) + s * q3) - z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/819/HypergeometricDistribution.java
Used ingredient: 2 * (q0 * (z * q0 - (q1 * y - q2 * x)) + s * q3) - z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/820/HypergeometricDistribution.java
Used ingredient: return 2 * x[0] * x[0] - 3 * x[1] * x[1] + 4 * x[0] * x[1] - 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/821/HypergeometricDistribution.java
Used ingredient: return value * (1.0 + noise * (2 * r.nextDouble() - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/822/HypergeometricDistribution.java
Used ingredient: return a * FastMath.sin(omega * z - kx * x - ky * y) * kx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/823/HypergeometricDistribution.java
Used ingredient: return a * FastMath.sin(omega * z - kx * x - ky * y) * ky;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/824/HypergeometricDistribution.java
Used ingredient: return scale * scale * shape / (s * s) / (shape - 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/825/HypergeometricDistribution.java
Used ingredient: double f3 = (x / (8 * y * f0) - 2 * f0) / (y * y * y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/826/HypergeometricDistribution.java
Used ingredient: return (2 * x + 1) / (1.0e9 * (x + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/827/HypergeometricDistribution.java
Used ingredient: return u <= v ? (w - u) - v : (w - v) - u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/828/HypergeometricDistribution.java
Used ingredient: return a + FastMath.sqrt(p * (b - a) * (c - a));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/829/HypergeometricDistribution.java
Used ingredient: return a * FastMath.cos(omega * z - kx * x - ky * y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/830/HypergeometricDistribution.java
Used ingredient: p[k - 1] = (n - k + 2) * p[k - 2] - (k - 1) * p[k - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/831/HypergeometricDistribution.java
Used ingredient: p[k - 2] = (k - 1) * p[k - 1] + (2 * n - k) * p[k - 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/832/HypergeometricDistribution.java
Used ingredient: p[k - 2] = (1 - k) * p[k - 1] + (k - 2 * n) * p[k - 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/833/HypergeometricDistribution.java
Used ingredient: p[k - 2] = (k - 1) * p[k - 1] + (k - 2 * n) * p[k - 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/834/HypergeometricDistribution.java
Used ingredient: return - 3 - y + 4 * x + 8 * x * y - y2 - 9 * x2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/835/HypergeometricDistribution.java
Used ingredient: return (m1 - m2) / FastMath.sqrt((v1 / n1) + (v2 / n2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/836/HypergeometricDistribution.java
Used ingredient: return -a * FastMath.cos(omega * z - kx * x - ky * y) * kx * ky;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/837/HypergeometricDistribution.java
Used ingredient: return a * a + 5 * b * b + c * c * c * c + 10 * d * d * d * d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/838/HypergeometricDistribution.java
Used ingredient: final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/839/HypergeometricDistribution.java
Used ingredient: return new double[] { 1 / (lo - x), 1 / (hi - x) };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/840/HypergeometricDistribution.java
Used ingredient: return new double[] { 10 * (x2 - x1 * x1), 1 - x1 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/841/HypergeometricDistribution.java
Used ingredient: return d + ((a - d) / (1 + FastMath.pow(x / c, b)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/842/HypergeometricDistribution.java
Used ingredient: return (n > 0) && ((n & (n - 1)) == 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/843/HypergeometricDistribution.java
Used ingredient: return (x - 1) * (x + 2) * (x + 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/844/HypergeometricDistribution.java
Used ingredient: return -(x - 1) * (x + 2) * (x + 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/845/HypergeometricDistribution.java
Used ingredient: return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/846/HypergeometricDistribution.java
Used ingredient: // ppa = ((2 * j + 1) * a * pa - j * pma) / (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/847/HypergeometricDistribution.java
Used ingredient: p[k - 2] = (k - 1) * p[k - 1] + (k - 3) * p[k - 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/848/HypergeometricDistribution.java
Used ingredient: p[k - 2] = (k - 1) * p[k - 1] - (k - 3) * p[k - 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/849/HypergeometricDistribution.java
Used ingredient: return (Hs2 / Hs) - ((Hs1 * Hs1) / (Hs * Hs));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/850/HypergeometricDistribution.java
Used ingredient: // ppb = ((2 * j + 1) * b * pb - j * pmb) / (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/851/HypergeometricDistribution.java
Used ingredient: rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/852/HypergeometricDistribution.java
Used ingredient: if ((i < 2) || (i > n - 3) || (j < 2) || (j > n - 3)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/853/HypergeometricDistribution.java
Used ingredient: 2 * (m0 * (y * m0 - (q3 * x - q1 * z)) + s * q2) - y,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/854/HypergeometricDistribution.java
Used ingredient: //   ((DIM + 1) * (DIM + 2)) / 2 - (2 * DIM + 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/855/HypergeometricDistribution.java
Used ingredient: 2 * (q0 * (y * q0 - (q3 * x - q1 * z)) + s * q2) - y,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/856/HypergeometricDistribution.java
Used ingredient: double ref = (x + dx) * (y + dy) * ((x + dx) * (y + dy) + (z + dz));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/857/HypergeometricDistribution.java
Used ingredient: return a * FastMath.cos(omega * z - kx * x - ky * y) * kx * omega;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/858/HypergeometricDistribution.java
Used ingredient: return a * FastMath.cos(omega * z - kx * x - ky * y) * ky * omega;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/859/HypergeometricDistribution.java
Used ingredient: return -a * FastMath.sin(omega * z - kx * x - ky * y) * omega;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/860/HypergeometricDistribution.java
Used ingredient: out[2] = 2 * (m0 * (z * m0 - (q1 * y - q2 * x)) + s * q3) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/861/HypergeometricDistribution.java
Used ingredient: out[0] = 2 * (m0 * (x * m0 - (q2 * z - q3 * y)) + s * q1) - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/862/HypergeometricDistribution.java
Used ingredient: out[1] = 2 * (m0 * (y * m0 - (q3 * x - q1 * z)) + s * q2) - y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/863/HypergeometricDistribution.java
Used ingredient: output[ (col2 - 1 - in) * (col2 - in) / 2 + col1 - in] =
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/864/HypergeometricDistribution.java
Used ingredient: (3 * FastMath.pow(n0 - 1, 2.0)) / ((n0 - 2) * (n0 - 3));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/865/HypergeometricDistribution.java
Used ingredient: return new Vector3D(2 * (m0 * (x * m0 - (q2 * z - q3 * y)) + s * q1) - x,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/866/HypergeometricDistribution.java
Used ingredient: return a * FastMath.sin(omega * z - kx * x - ky * y) * kx * ky * omega;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/867/HypergeometricDistribution.java
Used ingredient: q[k - 2] = (k - 1) * q[k - 1] + (k - 1 - 2 * n) * q[k - 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/868/HypergeometricDistribution.java
Used ingredient: q[k - 2] = (k - 1) * q[k - 1] + (2 * n - k + 1) * q[k - 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/869/HypergeometricDistribution.java
Used ingredient: final int z1 = (vi ^ (vi << 16))   ^ (vi1 ^ (vi1 << 15));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/870/HypergeometricDistribution.java
Used ingredient: { 2 * sqrt10 * (x1 - x4), 0, 0, -2 * sqrt10 * (x1 - x4) }
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/871/HypergeometricDistribution.java
Used ingredient: ((n - 1) * (n -2) * (n -3) * variance * variance);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/872/HypergeometricDistribution.java
Used ingredient: qa = qr - (t * t) / (3 * (lambda + a * (y + 1)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/873/HypergeometricDistribution.java
Used ingredient: return (size2 < size1) ? -1 : ((o1 == o2) ? 0 : +1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/874/HypergeometricDistribution.java
Used ingredient: return ((long)y & 1) == 0 ? pow(-x, y) : -pow(-x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/875/HypergeometricDistribution.java
Used ingredient: * Gamma(x) = (x - 1) * ... * (x - n) * Gamma(x - n),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/876/HypergeometricDistribution.java
Used ingredient: qr = t * ((2 * y + 1) / (6 * lambda) - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/877/HypergeometricDistribution.java
Used ingredient: ((v1 * v1) / (n1 * n1 * (n1 - 1d)) + (v2 * v2) /
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/878/HypergeometricDistribution.java
Used ingredient: out[2] = 2 * (q0 * (z * q0 - (q1 * y - q2 * x)) + s * q3) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/879/HypergeometricDistribution.java
Used ingredient: out[0] = 2 * (q0 * (x * q0 - (q2 * z - q3 * y)) + s * q1) - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/880/HypergeometricDistribution.java
Used ingredient: out[1] = 2 * (q0 * (y * q0 - (q3 * x - q1 * z)) + s * q2) - y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/881/HypergeometricDistribution.java
Used ingredient: return new Vector3D(2 * (q0 * (x * q0 - (q2 * z - q3 * y)) + s * q1) - x,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/882/HypergeometricDistribution.java
Used ingredient: return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/883/HypergeometricDistribution.java
Used ingredient: final double v = (1 + c * x) * (1 + c * x) * (1 + c * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/884/HypergeometricDistribution.java
Used ingredient: final int z2 = (vM2 ^ (vM2 << 19)) ^ (vM3 ^ (vM3 << 14));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/885/HypergeometricDistribution.java
Used ingredient: return (int) ((n * (long) next(31)) >> 31);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/886/HypergeometricDistribution.java
Used ingredient: final int offXX = (nvars - in) * (nvars - in - 1) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/887/HypergeometricDistribution.java
Used ingredient: return lo + (hi - lo) / (1 + FastMath.exp(-x));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/888/HypergeometricDistribution.java
Used ingredient: return (x - lower + 1.0) / (upper - lower + 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/889/HypergeometricDistribution.java
Used ingredient: cth = (ONE - angt * angt) / (ONE + angt * angt);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/890/HypergeometricDistribution.java
Used ingredient: return (offset > 0) ? (offset + 0.5) : (offset - 0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/891/HypergeometricDistribution.java
Used ingredient: q = (q - 1) * (r - 1) * (s - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/892/HypergeometricDistribution.java
Used ingredient: return 2 * x - 3 * y - 4 * z + 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/893/HypergeometricDistribution.java
Used ingredient: for (int i = 0; i < N-1; i += (i == 0 ? 2 : 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/894/HypergeometricDistribution.java
Used ingredient: *  f(x) =   \           (-1)    (x - 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/895/HypergeometricDistribution.java
Used ingredient: final double ppc = ((2 * j + 1) * c * pc - j * pmc) / (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/896/HypergeometricDistribution.java
Used ingredient: return solve(maxEval, f, min, max, min + 0.5 * (max - min));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/897/HypergeometricDistribution.java
Used ingredient: return FastMath.exp(-0.5 * x1 * x1) / (shape * SQRT2PI * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/898/HypergeometricDistribution.java
Used ingredient: rb += (ya - za * ra - za * rb - zb * ra - zb * rb) * denomr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/899/HypergeometricDistribution.java
Used ingredient: rednew = sth * (angt * dredg - sredg - HALF * sth * temp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/900/HypergeometricDistribution.java
SuspiciousModificationPoint:         return FastMath.max(0,
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 308
Used ingredient: return FastMath.min(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/901/HypergeometricDistribution.java
Used ingredient: return FastMath.exp(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/902/HypergeometricDistribution.java
Used ingredient: return FastMath.max(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/903/HypergeometricDistribution.java
Used ingredient: return FastMath.tan(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/904/HypergeometricDistribution.java
Used ingredient: return FastMath.exp(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/905/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/906/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/907/HypergeometricDistribution.java
Used ingredient: return FastMath.max(dx, dy);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/908/HypergeometricDistribution.java
Used ingredient: return FastMath.max(U1, U2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/909/HypergeometricDistribution.java
Used ingredient: return FastMath.asin(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/910/HypergeometricDistribution.java
Used ingredient: return FastMath.exp(-x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/911/HypergeometricDistribution.java
Used ingredient: return FastMath.atan(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/912/HypergeometricDistribution.java
Used ingredient: return FastMath.tanh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/913/HypergeometricDistribution.java
Used ingredient: return FastMath.acos(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/914/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(dx);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/915/HypergeometricDistribution.java
Used ingredient: return FastMath.sin(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/916/HypergeometricDistribution.java
Used ingredient: return FastMath.log(n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/917/HypergeometricDistribution.java
Used ingredient: return FastMath.log(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/918/HypergeometricDistribution.java
Used ingredient: return FastMath.ulp(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/919/HypergeometricDistribution.java
Used ingredient: return FastMath.cos(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/920/HypergeometricDistribution.java
Used ingredient: return FastMath.min(k, m);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/921/HypergeometricDistribution.java
Used ingredient: return FastMath.min(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/922/HypergeometricDistribution.java
Used ingredient: return FastMath.PI;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/923/HypergeometricDistribution.java
Used ingredient: return FastMath.asinh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/924/HypergeometricDistribution.java
Used ingredient: return FastMath.expm1(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/925/HypergeometricDistribution.java
Used ingredient: return FastMath.atanh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/926/HypergeometricDistribution.java
Used ingredient: return FastMath.acosh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/927/HypergeometricDistribution.java
Used ingredient: return FastMath.sinh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/928/HypergeometricDistribution.java
Used ingredient: return FastMath.rint(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/929/HypergeometricDistribution.java
Used ingredient: return FastMath.ceil(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/930/HypergeometricDistribution.java
Used ingredient: return FastMath.cosh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/931/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/932/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/933/HypergeometricDistribution.java
Used ingredient: return FastMath.cbrt(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/934/HypergeometricDistribution.java
Used ingredient: return FastMath.signum(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/935/HypergeometricDistribution.java
Used ingredient: return FastMath.pow(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/936/HypergeometricDistribution.java
Used ingredient: return FastMath.pow(x, p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/937/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(real);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/938/HypergeometricDistribution.java
Used ingredient: return FastMath.floor(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/939/HypergeometricDistribution.java
Used ingredient: return FastMath.log10(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/940/HypergeometricDistribution.java
Used ingredient: return FastMath.log1p(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/941/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(d2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/942/HypergeometricDistribution.java
Used ingredient: return FastMath.atan2(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/943/HypergeometricDistribution.java
Used ingredient: return FastMath.atan2(y, x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/944/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(a + b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/945/HypergeometricDistribution.java
Used ingredient: return 2 * FastMath.acos(q0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/946/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(sum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/947/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(res);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/948/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(var);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/949/HypergeometricDistribution.java
Used ingredient: return FastMath.exp(-x * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/950/HypergeometricDistribution.java
Used ingredient: return FastMath.hypot(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/951/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(offset);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/952/HypergeometricDistribution.java
Used ingredient: return Math.random();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/953/HypergeometricDistribution.java
Used ingredient: return Math.asin(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/954/HypergeometricDistribution.java
Used ingredient: return Math.expm1(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/955/HypergeometricDistribution.java
Used ingredient: return Math.atan(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/956/HypergeometricDistribution.java
Used ingredient: return Math.tan(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/957/HypergeometricDistribution.java
Used ingredient: return Math.tanh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/958/HypergeometricDistribution.java
Used ingredient: return Math.pow(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/959/HypergeometricDistribution.java
Used ingredient: return Math.acos(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/960/HypergeometricDistribution.java
Used ingredient: return Math.exp(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/961/HypergeometricDistribution.java
Used ingredient: return Math.abs(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/962/HypergeometricDistribution.java
Used ingredient: return 2 * FastMath.acos(-q0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/963/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(sum2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/964/HypergeometricDistribution.java
Used ingredient: return FastMath.log(prod) +
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/965/HypergeometricDistribution.java
Used ingredient: return Math.atan2(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/966/HypergeometricDistribution.java
Used ingredient: return FastMath.max(0, m - (n - k));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/967/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(total);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/968/HypergeometricDistribution.java
Used ingredient: return FastMath.log(prod1) +
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/969/HypergeometricDistribution.java
Used ingredient: return FastMath.max(Wplus, Wminus);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/970/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(q0 * q0 +
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/971/HypergeometricDistribution.java
Used ingredient: return StrictMath.tan(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/972/HypergeometricDistribution.java
Used ingredient: return StrictMath.exp(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/973/HypergeometricDistribution.java
Used ingredient: return StrictMath.abs(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/974/HypergeometricDistribution.java
Used ingredient: return FastMath.exp(-0.5 * sum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/975/HypergeometricDistribution.java
Used ingredient: int targetIter = FastMath.max(1,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/976/HypergeometricDistribution.java
Used ingredient: return start.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/977/HypergeometricDistribution.java
Used ingredient: return Math.sin(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/978/HypergeometricDistribution.java
Used ingredient: return Math.sinh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/979/HypergeometricDistribution.java
Used ingredient: return super.getMax();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/980/HypergeometricDistribution.java
Used ingredient: return Math.log1p(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/981/HypergeometricDistribution.java
Used ingredient: return Math.log(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/982/HypergeometricDistribution.java
Used ingredient: return Math.log10(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/983/HypergeometricDistribution.java
Used ingredient: return Math.cos(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/984/HypergeometricDistribution.java
Used ingredient: return Math.cosh(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/985/HypergeometricDistribution.java
Used ingredient: return Math.sqrt(a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/986/HypergeometricDistribution.java
Used ingredient: return Math.cbrt(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/987/HypergeometricDistribution.java
Used ingredient: return Math.sqrt(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/988/HypergeometricDistribution.java
Used ingredient: return -Math.PI/2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/989/HypergeometricDistribution.java
Used ingredient: return this.max;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/990/HypergeometricDistribution.java
Used ingredient: return Math.PI/2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/991/HypergeometricDistribution.java
Used ingredient: ret = -FastMath.PI /
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/992/HypergeometricDistribution.java
Used ingredient: return FastMath.round(value);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/993/HypergeometricDistribution.java
Used ingredient: return Math.hypot(x, y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/994/HypergeometricDistribution.java
Used ingredient: return lower + FastMath.exp(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/995/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(imaginary);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/996/HypergeometricDistribution.java
Used ingredient: return FastMath.round(data[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/997/HypergeometricDistribution.java
Used ingredient: ret = n * FastMath.log(q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/998/HypergeometricDistribution.java
Used ingredient: ret = n * FastMath.log(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/999/HypergeometricDistribution.java
Used ingredient: return StrictMath.asin(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1000/HypergeometricDistribution.java
SuspiciousModificationPoint:         return FastMath.min(getNumberOfSuccesses(), getSampleSize());
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 321
Used ingredient: distribution.getNumberOfSuccesses(), distribution.getSampleSize());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1001/HypergeometricDistribution.java
Used ingredient: getSampleSize() + getNumberOfSuccesses() - getPopulationSize());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1002/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(getChiSquare() / getTargetSize());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1003/HypergeometricDistribution.java
Used ingredient: return FastMath.atan2(getImaginary(), getReal());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1004/HypergeometricDistribution.java
Used ingredient: return FastMath.exp(sumOfLogs.getResult() / sumOfLogs.getN());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1005/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(getNumberOfRegressors(), beta.length);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1006/HypergeometricDistribution.java
Used ingredient: this(new Well19937c(), populationSize, numberOfSuccesses, sampleSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1007/HypergeometricDistribution.java
Used ingredient: int[] domain = getDomain(populationSize, numberOfSuccesses, sampleSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1008/HypergeometricDistribution.java
Used ingredient: return FastMath.pow(numerator.doubleValue(),   exponent) /
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1009/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(r.dotProduct(getWeight().operate(r)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1010/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(3, dist.getNumberOfSuccesses());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1011/HypergeometricDistribution.java
Used ingredient: return delegate.nextHypergeometric(populationSize, numberOfSuccesses, sampleSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1012/HypergeometricDistribution.java
Used ingredient: return FastMath.min(-Precision.SAFE_MIN, FastMath.min(-g, +g));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1013/HypergeometricDistribution.java
Used ingredient: return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1014/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(d1.getSampleStats(), d2.getSampleStats());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1015/HypergeometricDistribution.java
Used ingredient: return (int) FastMath.min(nextPoisson(mean), Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1016/HypergeometricDistribution.java
Used ingredient: return FastMath.max(FastMath.abs(x), FastMath.abs(y));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1017/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(variance.evaluate(values, mean));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1018/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(r.dotProduct(weight.operate(r)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1019/HypergeometricDistribution.java
Used ingredient: return new Decimal64(FastMath.IEEEremainder(value, a.value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1020/HypergeometricDistribution.java
Used ingredient: return new DataTransferObject(getKey(), getValue());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1021/HypergeometricDistribution.java
Used ingredient: numberOfSuccesses, sampleSize).sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1022/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(variance.evaluate(values, begin, length));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1023/HypergeometricDistribution.java
Used ingredient: return lastMapper.getFirstIndex() + lastMapper.getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1024/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(getNumberOfRegressors(), variance.length);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1025/HypergeometricDistribution.java
Used ingredient: final int[] domain = getDomain(populationSize, numberOfSuccesses, sampleSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1026/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(variance.evaluate(values, mean, begin, length));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1027/HypergeometricDistribution.java
Used ingredient: return FastMath.log(binomialCoefficientDouble(n, k));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1028/HypergeometricDistribution.java
Used ingredient: return FastMath.asin(v3.getNorm() / normProduct);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1029/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(getMeanSquareError() / sumXX);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1030/HypergeometricDistribution.java
Used ingredient: return (FastMath.abs(z.getImaginary()) <= tolerance) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1031/HypergeometricDistribution.java
Used ingredient: return new Decimal64(FastMath.copySign(value, sign.value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1032/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals( FastMath.sin(x), y.getValue(), 3.5e-5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1033/HypergeometricDistribution.java
Used ingredient: return new Fraction(num.intValue(), den.intValue());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1034/HypergeometricDistribution.java
Used ingredient: return delegate.nextZipf(numberOfElements, exponent);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1035/HypergeometricDistribution.java
Used ingredient: return recurseFirstIntersection(getTree(true), point, line);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1036/HypergeometricDistribution.java
Used ingredient: return t(sampleStats.getMean(), mu, sampleStats.getVariance(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1037/HypergeometricDistribution.java
Used ingredient: return fit((new ParameterGuesser(getObservations())).guess());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1038/HypergeometricDistribution.java
Used ingredient: double range = FastMath.abs(pb.getFinalTime() - pb.getInitialTime());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1039/HypergeometricDistribution.java
Used ingredient: return new PascalDistribution(getRandomGenerator(), r, p).sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1040/HypergeometricDistribution.java
Used ingredient: return FastMath.max(+Precision.SAFE_MIN, FastMath.max(-g, +g));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1041/HypergeometricDistribution.java
Used ingredient: return FastMath.PI - FastMath.asin(v3.getNorm() / normProduct);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1042/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(getOffset(p));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1043/HypergeometricDistribution.java
Used ingredient: return FastMath.asin(z / getNorm());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1044/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(getOffset(p)) < 1.0e-10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1045/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(variance.evaluate(values));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1046/HypergeometricDistribution.java
Used ingredient: return new Decimal64(FastMath.IEEEremainder(value, a));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1047/HypergeometricDistribution.java
Used ingredient: return t(sampleStats1.getMean(), sampleStats2.getMean(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1048/HypergeometricDistribution.java
Used ingredient: return tTest(sampleStats1.getMean(), sampleStats2.getMean(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1049/HypergeometricDistribution.java
Used ingredient: protected abstract int getSampleSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1050/HypergeometricDistribution.java
Used ingredient: return (getFreeParameters() == rhs.getFreeParameters()) &&
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1051/HypergeometricDistribution.java
Used ingredient: return new FractionFormat(getDefaultNumberFormat(locale));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1052/HypergeometricDistribution.java
Used ingredient: d = FastMath.min(d, v.subtract(expectedV[k]).getNorm());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1053/HypergeometricDistribution.java
Used ingredient: return new BigFractionFormat(getDefaultNumberFormat(locale));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1054/HypergeometricDistribution.java
Used ingredient: final double sig = FastMath.sqrt(getNumericalVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1055/HypergeometricDistribution.java
Used ingredient: return hasIntercept ? getIntercept(getSlope()) : 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1056/HypergeometricDistribution.java
Used ingredient: FastMath.abs(getSlope()) / getSlopeStdErr()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1057/HypergeometricDistribution.java
Used ingredient: final double sigma = FastMath.sqrt(getNumericalVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1058/HypergeometricDistribution.java
Used ingredient: protected abstract int getNumberOfRegressors();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1059/HypergeometricDistribution.java
Used ingredient: return String.format("(%s,%s)", getFirst(), getSecond());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1060/HypergeometricDistribution.java
Used ingredient: return value(new DerivativeStructure(0, 0, x)).getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1061/HypergeometricDistribution.java
Used ingredient: sb.append(mathMethod.getReturnType().getSimpleName());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1062/HypergeometricDistribution.java
Used ingredient: FastMath.pow(probabilityOfSuccess, numberOfSuccesses) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1063/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(a.getFreeParameters(), b.getFreeParameters());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1064/HypergeometricDistribution.java
Used ingredient: Precision.equalsIncludingNaN(stat.getVariance(), getVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1065/HypergeometricDistribution.java
Used ingredient: public int nextHypergeometric(int populationSize, int numberOfSuccesses, int sampleSize)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1066/HypergeometricDistribution.java
Used ingredient: return new StatisticalSummaryValues(getMean(), getVariance(), getN(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1067/HypergeometricDistribution.java
Used ingredient: return Math.abs(x - y) <= EPS * Math.min(Math.abs(x), Math.abs(y));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1068/HypergeometricDistribution.java
Used ingredient: * size, number of successes in the population, and sample size.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1069/HypergeometricDistribution.java
Used ingredient: return FastMath.log(binomialCoefficient(n,k));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1070/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(variance.getResult());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1071/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(getChiSquare() / rows);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1072/HypergeometricDistribution.java
Used ingredient: return new Decimal64(FastMath.atan2(value, x.value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1073/HypergeometricDistribution.java
Used ingredient: return new Decimal64(FastMath.pow(value, e.value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1074/HypergeometricDistribution.java
Used ingredient: return FastMath.sqrt(cost * cost / target.length);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1075/HypergeometricDistribution.java
Used ingredient: return FastMath.abs(x) + FastMath.abs(y) + FastMath.abs(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1076/HypergeometricDistribution.java
Used ingredient: return new double[] { FastMath.cos(x), FastMath.sin(x) };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1077/HypergeometricDistribution.java
Used ingredient: return (FastMath.exp(ss) - 1) * FastMath.exp(2 * scale + ss);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1078/HypergeometricDistribution.java
Used ingredient: return new BigFraction(numerator.negate(), denominator);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1079/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(FastMath.sqrt(x), y.getValue(), 1.5e-4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1080/HypergeometricDistribution.java
Used ingredient: return combiner.value(f.value(x), g.value(x));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1081/HypergeometricDistribution.java
Used ingredient: return getRegressionSumSquares(getSlope());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1082/HypergeometricDistribution.java
Used ingredient: return new BigFraction(numerator, denominator.multiply(bg));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1083/HypergeometricDistribution.java
Used ingredient: return new DataTransferObject(v.getX(), v.getY(), v.getZ());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1084/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(4, dist.getSampleSize());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1085/HypergeometricDistribution.java
Used ingredient: return new Vector3D(x.getReal(), y.getReal(), z.getReal());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1086/HypergeometricDistribution.java
Used ingredient: d += FastMath.abs(e.getValue() - v.getEntry(e.getIndex()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1087/HypergeometricDistribution.java
Used ingredient: properFormat = FractionFormat.getProperInstance(getLocale());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1088/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(expected.getMessage(), e.getMessage());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1089/HypergeometricDistribution.java
Used ingredient: FastMath.abs(expected.abs() * solver.getRelativeAccuracy()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1090/HypergeometricDistribution.java
Used ingredient: Assert.assertEquals(2, space.getSubSpace().getDimension());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1091/HypergeometricDistribution.java
Used ingredient: return tTest(sampleStats.getMean(), mu, sampleStats.getVariance(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1092/HypergeometricDistribution.java
Used ingredient: return new PointValuePair(coefficients, f.getValue(coefficients));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1093/HypergeometricDistribution.java
Used ingredient: return (T[]) Array.newInstance(field.getRuntimeClass(), length);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1094/HypergeometricDistribution.java
Used ingredient: return new ProperFractionFormat(getDefaultNumberFormat(locale));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1095/HypergeometricDistribution.java
Used ingredient: return new GaussIntegrator(getRule(legendre, numberOfPoints));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1096/HypergeometricDistribution.java
Used ingredient: double maxStep = FastMath.abs(pb.getFinalTime() - pb.getInitialTime());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1097/HypergeometricDistribution.java
Used ingredient: return String.format("(f=%s %s)", getFitness(), getRepresentation());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1098/HypergeometricDistribution.java
Used ingredient: return new DerivativeStructure(getFreeParameters(), getOrder(), all);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1099/HypergeometricDistribution.java
Used ingredient: double delta = FastMath.abs(iter.value() - v.getEntry(iter.key()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1100/HypergeometricDistribution.java
SuspiciousModificationPoint:         return numberOfSuccesses;
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 161
Used ingredient: int numberOfSuccesses,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1101/HypergeometricDistribution.java
Used ingredient: return numberOfElements;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1102/HypergeometricDistribution.java
Used ingredient: int numberOfSucceses = 55;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1103/HypergeometricDistribution.java
Used ingredient: numberOfSuccesses, p, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1104/HypergeometricDistribution.java
Used ingredient: numberOfSuccesses = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1105/HypergeometricDistribution.java
Used ingredient: numberOfSuccesses);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1106/HypergeometricDistribution.java
Used ingredient: int numberOfSucceses = 101;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1107/HypergeometricDistribution.java
Used ingredient: return numberOfTrials;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1108/HypergeometricDistribution.java
Used ingredient: return new SumOfSquares();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1109/HypergeometricDistribution.java
Used ingredient: * @return the number of successes.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1110/HypergeometricDistribution.java
Used ingredient: numberOfSuccesses, x + 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1111/HypergeometricDistribution.java
Used ingredient: return probabilityOfSuccess;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1112/HypergeometricDistribution.java
Used ingredient: if (numberOfSuccesses < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1113/HypergeometricDistribution.java
Used ingredient: return numericalVariance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1114/HypergeometricDistribution.java
Used ingredient: return getNumberOfElements();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1115/HypergeometricDistribution.java
Used ingredient: private final int numberOfSuccesses;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1116/HypergeometricDistribution.java
Used ingredient: * @return number of elements
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1117/HypergeometricDistribution.java
Used ingredient: return numericalMean;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1118/HypergeometricDistribution.java
Used ingredient: return numParameters;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1119/HypergeometricDistribution.java
Used ingredient: return numObservations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1120/HypergeometricDistribution.java
Used ingredient: return numSlackVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1121/HypergeometricDistribution.java
Used ingredient: * @return nuber of calls
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1122/HypergeometricDistribution.java
Used ingredient: return numbers;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1123/HypergeometricDistribution.java
Used ingredient: return residualSumOfSquares;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1124/HypergeometricDistribution.java
Used ingredient: return numDecisionVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1125/HypergeometricDistribution.java
Used ingredient: * @return the number of clusters
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1126/HypergeometricDistribution.java
Used ingredient: return super.getValues();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1127/HypergeometricDistribution.java
Used ingredient: return parametersNames;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1128/HypergeometricDistribution.java
Used ingredient: return super.getSumsq();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1129/HypergeometricDistribution.java
Used ingredient: return sumOfLogs.getN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1130/HypergeometricDistribution.java
Used ingredient: return regression.getR();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1131/HypergeometricDistribution.java
Used ingredient: return singularValues[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1132/HypergeometricDistribution.java
Used ingredient: return vertices.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1133/HypergeometricDistribution.java
Used ingredient: return measurementNoise;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1134/HypergeometricDistribution.java
Used ingredient: return new SumOfLogs();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1135/HypergeometricDistribution.java
Used ingredient: return new Skewness();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1136/HypergeometricDistribution.java
Used ingredient: return degreesOfFreedom;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1137/HypergeometricDistribution.java
Used ingredient: return sumSquares;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1138/HypergeometricDistribution.java
Used ingredient: return numGenerations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1139/HypergeometricDistribution.java
Used ingredient: return baseSequence;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1140/HypergeometricDistribution.java
Used ingredient: return newCoefficients;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1141/HypergeometricDistribution.java
Used ingredient: return numElements;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1142/HypergeometricDistribution.java
Used ingredient: return number;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1143/HypergeometricDistribution.java
Used ingredient: return new badPercentile();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1144/HypergeometricDistribution.java
Used ingredient: * @return the number of values.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1145/HypergeometricDistribution.java
Used ingredient: * @param r Number of successes.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1146/HypergeometricDistribution.java
Used ingredient: /** The number of successes. */
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1147/HypergeometricDistribution.java
Used ingredient: * Access the number of successes.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1148/HypergeometricDistribution.java
Used ingredient: public int getNumberOfSuccesses() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1149/HypergeometricDistribution.java
Used ingredient: return (int)doubleValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1150/HypergeometricDistribution.java
Used ingredient: * @return cached rules set
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1151/HypergeometricDistribution.java
Used ingredient: return isCounterClockWise;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1152/HypergeometricDistribution.java
Used ingredient: return numerator.intValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1153/HypergeometricDistribution.java
Used ingredient: return cumulativeTestValues;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1154/HypergeometricDistribution.java
Used ingredient: * @return number of iterations
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1155/HypergeometricDistribution.java
Used ingredient: return numArtificialVariables;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1156/HypergeometricDistribution.java
Used ingredient: * @return the number of elements
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1157/HypergeometricDistribution.java
Used ingredient: * @return number of observations
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1158/HypergeometricDistribution.java
Used ingredient: return brightestSample;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1159/HypergeometricDistribution.java
Used ingredient: return super.getSumSq();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1160/HypergeometricDistribution.java
Used ingredient: return super.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1161/HypergeometricDistribution.java
Used ingredient: return super.getSum();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1162/HypergeometricDistribution.java
Used ingredient: return super.getSumLog();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1163/HypergeometricDistribution.java
Used ingredient: return geometricMeanImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1164/HypergeometricDistribution.java
Used ingredient: return super.getMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1165/HypergeometricDistribution.java
Used ingredient: return subtract(this, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1166/HypergeometricDistribution.java
Used ingredient: return newInstance(this);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1167/HypergeometricDistribution.java
Used ingredient: return getBarycenter();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1168/HypergeometricDistribution.java
Used ingredient: return interpolatedTime;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1169/HypergeometricDistribution.java
Used ingredient: return this.hasIntercept;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1170/HypergeometricDistribution.java
Used ingredient: return sumSqImpl.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1171/HypergeometricDistribution.java
Used ingredient: return this.percentile95;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1172/HypergeometricDistribution.java
Used ingredient: return measurementMatrix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1173/HypergeometricDistribution.java
Used ingredient: return new FirstMoment();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1174/HypergeometricDistribution.java
Used ingredient: return hasIntercept;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1175/HypergeometricDistribution.java
Used ingredient: return super.subtract(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1176/HypergeometricDistribution.java
Used ingredient: return maxMembership;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1177/HypergeometricDistribution.java
Used ingredient: return densityTestValues;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1178/HypergeometricDistribution.java
Used ingredient: return d.doubleValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1179/HypergeometricDistribution.java
Used ingredient: return v.outerProduct(w);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1180/HypergeometricDistribution.java
Used ingredient: return Fraction.class;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1181/HypergeometricDistribution.java
Used ingredient: return representation;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1182/HypergeometricDistribution.java
Used ingredient: return BigFraction.class;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1183/HypergeometricDistribution.java
Used ingredient: return super.hashCode();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1184/HypergeometricDistribution.java
Used ingredient: return new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1185/HypergeometricDistribution.java
Used ingredient: return instanceTree;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1186/HypergeometricDistribution.java
Used ingredient: return actualSequence;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1187/HypergeometricDistribution.java
Used ingredient: return absoluteThreshold;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1188/HypergeometricDistribution.java
Used ingredient: return Long.valueOf(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1189/HypergeometricDistribution.java
Used ingredient: return new Kurtosis();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1190/HypergeometricDistribution.java
Used ingredient: return new Product();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1191/HypergeometricDistribution.java
Used ingredient: return upper.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1192/HypergeometricDistribution.java
Used ingredient: return percentileImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1193/HypergeometricDistribution.java
Used ingredient: return missingEntries;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1194/HypergeometricDistribution.java
Used ingredient: return fit(guess);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1195/HypergeometricDistribution.java
Used ingredient: return numStartingPoints;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1196/HypergeometricDistribution.java
Used ingredient: return Double.valueOf(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1197/HypergeometricDistribution.java
Used ingredient: return timesAndResults;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1198/HypergeometricDistribution.java
Used ingredient: return mSolver.solve(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1199/HypergeometricDistribution.java
Used ingredient: return (Double) property;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1200/HypergeometricDistribution.java
SuspiciousModificationPoint:         return populationSize;
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 170
Used ingredient: return interpolation;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1201/HypergeometricDistribution.java
Used ingredient: int populationSize,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1202/HypergeometricDistribution.java
Used ingredient: return points.size();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1203/HypergeometricDistribution.java
Used ingredient: return boundarySize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1204/HypergeometricDistribution.java
Used ingredient: return optima.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1205/HypergeometricDistribution.java
Used ingredient: return mutationRate;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1206/HypergeometricDistribution.java
Used ingredient: return mutationPolicy;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1207/HypergeometricDistribution.java
Used ingredient: return relationship;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1208/HypergeometricDistribution.java
Used ingredient: return doOptimize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1209/HypergeometricDistribution.java
Used ingredient: populationSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1210/HypergeometricDistribution.java
Used ingredient: return this.populationLimit;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1211/HypergeometricDistribution.java
Used ingredient: * @return the population size.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1212/HypergeometricDistribution.java
Used ingredient: int getPopulationSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1213/HypergeometricDistribution.java
Used ingredient: int populationSize = 3456;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1214/HypergeometricDistribution.java
Used ingredient: return piSplit.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1215/HypergeometricDistribution.java
Used ingredient: return rankCorrelation;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1216/HypergeometricDistribution.java
Used ingredient: return Location.INSIDE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1217/HypergeometricDistribution.java
Used ingredient: return correlationMatrix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1218/HypergeometricDistribution.java
Used ingredient: return numGenerations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1219/HypergeometricDistribution.java
Used ingredient: return representation;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1220/HypergeometricDistribution.java
Used ingredient: return upper.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1221/HypergeometricDistribution.java
Used ingredient: return sampleSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1222/HypergeometricDistribution.java
Used ingredient: return eSplit.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1223/HypergeometricDistribution.java
Used ingredient: return completeState;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1224/HypergeometricDistribution.java
Used ingredient: return functionName;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1225/HypergeometricDistribution.java
Used ingredient: return observations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1226/HypergeometricDistribution.java
Used ingredient: return virtualSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1227/HypergeometricDistribution.java
Used ingredient: return interpolator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1228/HypergeometricDistribution.java
Used ingredient: return maxEvaluations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1229/HypergeometricDistribution.java
Used ingredient: return evaluations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1230/HypergeometricDistribution.java
Used ingredient: return points[index];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1231/HypergeometricDistribution.java
Used ingredient: return hyperplane;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1232/HypergeometricDistribution.java
Used ingredient: return windowSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1233/HypergeometricDistribution.java
Used ingredient: return objFunction;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1234/HypergeometricDistribution.java
Used ingredient: return totalSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1235/HypergeometricDistribution.java
Used ingredient: return pivot.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1236/HypergeometricDistribution.java
Used ingredient: return positions;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1237/HypergeometricDistribution.java
Used ingredient: return outline;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1238/HypergeometricDistribution.java
Used ingredient: return location;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1239/HypergeometricDistribution.java
Used ingredient: return position;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1240/HypergeometricDistribution.java
Used ingredient: int populationSize = 26896;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1241/HypergeometricDistribution.java
Used ingredient: return interpolatedTime;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1242/HypergeometricDistribution.java
Used ingredient: return Location.OUTSIDE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1243/HypergeometricDistribution.java
Used ingredient: return validDataSize[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1244/HypergeometricDistribution.java
Used ingredient: return totalEvaluations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1245/HypergeometricDistribution.java
Used ingredient: return numObservations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1246/HypergeometricDistribution.java
Used ingredient: return v.map(function);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1247/HypergeometricDistribution.java
Used ingredient: return selectionPolicy;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1248/HypergeometricDistribution.java
Used ingredient: return multIndirection;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1249/HypergeometricDistribution.java
Used ingredient: return compIndirection;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1250/HypergeometricDistribution.java
Used ingredient: * @return mutation rate
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1251/HypergeometricDistribution.java
Used ingredient: super(populationLimit);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1252/HypergeometricDistribution.java
Used ingredient: return r / points.size();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1253/HypergeometricDistribution.java
Used ingredient: return Fraction.class;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1254/HypergeometricDistribution.java
Used ingredient: return pseudoInverse;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1255/HypergeometricDistribution.java
Used ingredient: return plusOutside;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1256/HypergeometricDistribution.java
Used ingredient: return minReduction;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1257/HypergeometricDistribution.java
Used ingredient: return maxIterations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1258/HypergeometricDistribution.java
Used ingredient: return nextGeneration;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1259/HypergeometricDistribution.java
Used ingredient: return lower.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1260/HypergeometricDistribution.java
Used ingredient: return orthoTolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1261/HypergeometricDistribution.java
Used ingredient: return resultSet;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1262/HypergeometricDistribution.java
Used ingredient: return upper - lower;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1263/HypergeometricDistribution.java
Used ingredient: return boundaries;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1264/HypergeometricDistribution.java
Used ingredient: return tolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1265/HypergeometricDistribution.java
Used ingredient: return plusInside;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1266/HypergeometricDistribution.java
Used ingredient: return boundIsAllowed;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1267/HypergeometricDistribution.java
Used ingredient: return start.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1268/HypergeometricDistribution.java
Used ingredient: return target.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1269/HypergeometricDistribution.java
Used ingredient: return getQuantile();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1270/HypergeometricDistribution.java
Used ingredient: return getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1271/HypergeometricDistribution.java
Used ingredient: return simplex[index];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1272/HypergeometricDistribution.java
Used ingredient: return stepSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1273/HypergeometricDistribution.java
Used ingredient: return points.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1274/HypergeometricDistribution.java
Used ingredient: return wrong.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1275/HypergeometricDistribution.java
Used ingredient: return nonNegative;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1276/HypergeometricDistribution.java
Used ingredient: return normalized;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1277/HypergeometricDistribution.java
Used ingredient: return operate(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1278/HypergeometricDistribution.java
Used ingredient: return lastSeen;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1279/HypergeometricDistribution.java
Used ingredient: return iterations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1280/HypergeometricDistribution.java
Used ingredient: return complete;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1281/HypergeometricDistribution.java
Used ingredient: return quantiles;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1282/HypergeometricDistribution.java
Used ingredient: return function;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1283/HypergeometricDistribution.java
Used ingredient: return rowSeparator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1284/HypergeometricDistribution.java
Used ingredient: return polynomials;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1285/HypergeometricDistribution.java
Used ingredient: return correlated;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1286/HypergeometricDistribution.java
Used ingredient: return roundingMode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1287/HypergeometricDistribution.java
Used ingredient: return data.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1288/HypergeometricDistribution.java
Used ingredient: return stateVariation;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1289/HypergeometricDistribution.java
Used ingredient: return apply(minImpl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1290/HypergeometricDistribution.java
Used ingredient: return distribution;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1291/HypergeometricDistribution.java
Used ingredient: return controlMatrix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1292/HypergeometricDistribution.java
Used ingredient: return outMatrix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1293/HypergeometricDistribution.java
Used ingredient: return Fraction.ONE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1294/HypergeometricDistribution.java
Used ingredient: return data[index];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1295/HypergeometricDistribution.java
Used ingredient: return lastTime;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1296/HypergeometricDistribution.java
Used ingredient: return Fraction.ZERO;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1297/HypergeometricDistribution.java
Used ingredient: * @return new equation
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1298/HypergeometricDistribution.java
Used ingredient: return quantile;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1299/HypergeometricDistribution.java
Used ingredient: return Action.STOP;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1300/HypergeometricDistribution.java
SuspiciousModificationPoint:         return sampleSize;
At: HypergeometricDistribution.java org.apache.commons.math3.distribution.HypergeometricDistribution
Line number: 179
Used ingredient: return sampleStats;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1301/HypergeometricDistribution.java
Used ingredient: return totalSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1302/HypergeometricDistribution.java
Used ingredient: return stepSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1303/HypergeometricDistribution.java
Used ingredient: return samples;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1304/HypergeometricDistribution.java
Used ingredient: return virtualSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1305/HypergeometricDistribution.java
Used ingredient: return getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1306/HypergeometricDistribution.java
Used ingredient: return normalized;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1307/HypergeometricDistribution.java
Used ingredient: return complete;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1308/HypergeometricDistribution.java
Used ingredient: return splitVertex;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1309/HypergeometricDistribution.java
Used ingredient: return simplex[index];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1310/HypergeometricDistribution.java
Used ingredient: return completeState;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1311/HypergeometricDistribution.java
Used ingredient: return windowSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1312/HypergeometricDistribution.java
Used ingredient: return resultSet;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1313/HypergeometricDistribution.java
Used ingredient: return plusInside;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1314/HypergeometricDistribution.java
Used ingredient: return parameters;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1315/HypergeometricDistribution.java
Used ingredient: return finalTime;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1316/HypergeometricDistribution.java
Used ingredient: return lastValue;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1317/HypergeometricDistribution.java
Used ingredient: return sumSquares;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1318/HypergeometricDistribution.java
Used ingredient: return unscaled;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1319/HypergeometricDistribution.java
Used ingredient: return sizes;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1320/HypergeometricDistribution.java
Used ingredient: return sumLogImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1321/HypergeometricDistribution.java
Used ingredient: return Locale.US;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1322/HypergeometricDistribution.java
Used ingredient: return size;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1323/HypergeometricDistribution.java
Used ingredient: return split(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1324/HypergeometricDistribution.java
Used ingredient: return split;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1325/HypergeometricDistribution.java
Used ingredient: return sumsqImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1326/HypergeometricDistribution.java
Used ingredient: return meanImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1327/HypergeometricDistribution.java
Used ingredient: return sumImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1328/HypergeometricDistribution.java
Used ingredient: return scale * x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1329/HypergeometricDistribution.java
Used ingredient: return shape;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1330/HypergeometricDistribution.java
Used ingredient: return scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1331/HypergeometricDistribution.java
Used ingredient: return maxImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1332/HypergeometricDistribution.java
Used ingredient: int sampleSize)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1333/HypergeometricDistribution.java
Used ingredient: return boundarySize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1334/HypergeometricDistribution.java
Used ingredient: return map.keySet();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1335/HypergeometricDistribution.java
Used ingredient: return simplex.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1336/HypergeometricDistribution.java
Used ingredient: return populationSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1337/HypergeometricDistribution.java
Used ingredient: return plusOutside;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1338/HypergeometricDistribution.java
Used ingredient: return stringValue;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1339/HypergeometricDistribution.java
Used ingredient: return initialTime;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1340/HypergeometricDistribution.java
Used ingredient: return initialStep;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1341/HypergeometricDistribution.java
Used ingredient: return Complex.ONE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1342/HypergeometricDistribution.java
Used ingredient: return numElements;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1343/HypergeometricDistribution.java
Used ingredient: return this.median;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1344/HypergeometricDistribution.java
Used ingredient: return geoMeanImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1345/HypergeometricDistribution.java
Used ingredient: * @return step size
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1346/HypergeometricDistribution.java
Used ingredient: return values[index];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1347/HypergeometricDistribution.java
Used ingredient: return isEmpty(tree);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1348/HypergeometricDistribution.java
Used ingredient: return valuesFileURL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1349/HypergeometricDistribution.java
Used ingredient: return shape * scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1350/HypergeometricDistribution.java
Used ingredient: * @return the sample.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1351/HypergeometricDistribution.java
Used ingredient: int sampleSize = 789;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1352/HypergeometricDistribution.java
Used ingredient: int sampleSize = 895;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1353/HypergeometricDistribution.java
Used ingredient: * @return the sample size.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1354/HypergeometricDistribution.java
Used ingredient: return hyperplane;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1355/HypergeometricDistribution.java
Used ingredient: return outline;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1356/HypergeometricDistribution.java
Used ingredient: return boundaries;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1357/HypergeometricDistribution.java
Used ingredient: return tolerance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1358/HypergeometricDistribution.java
Used ingredient: return operate(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1359/HypergeometricDistribution.java
Used ingredient: return lastSeen;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1360/HypergeometricDistribution.java
Used ingredient: return quantiles;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1361/HypergeometricDistribution.java
Used ingredient: return lastTime;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1362/HypergeometricDistribution.java
Used ingredient: return quantile;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1363/HypergeometricDistribution.java
Used ingredient: return plane;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1364/HypergeometricDistribution.java
Used ingredient: return attribute;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1365/HypergeometricDistribution.java
Used ingredient: return subMatrix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1366/HypergeometricDistribution.java
Used ingredient: return minStep;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1367/HypergeometricDistribution.java
Used ingredient: return magnitude;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1368/HypergeometricDistribution.java
Used ingredient: return isInfinite;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1369/HypergeometricDistribution.java
Used ingredient: return expandable;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1370/HypergeometricDistribution.java
Used ingredient: return variance;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1371/HypergeometricDistribution.java
Used ingredient: return delegate;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1372/HypergeometricDistribution.java
Used ingredient: return repaired;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1373/HypergeometricDistribution.java
Used ingredient: return combined;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1374/HypergeometricDistribution.java
Used ingredient: return projected;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1375/HypergeometricDistribution.java
Used ingredient: return startIndex;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1376/HypergeometricDistribution.java
Used ingredient: return candidate;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1377/HypergeometricDistribution.java
Used ingredient: return copied;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1378/HypergeometricDistribution.java
Used ingredient: return problem;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1379/HypergeometricDistribution.java
Used ingredient: return line1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1380/HypergeometricDistribution.java
Used ingredient: return line;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1381/HypergeometricDistribution.java
Used ingredient: return errorScale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1382/HypergeometricDistribution.java
Used ingredient: return barycenter;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1383/HypergeometricDistribution.java
Used ingredient: return cumValues;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1384/HypergeometricDistribution.java
Used ingredient: return minCluster;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1385/HypergeometricDistribution.java
Used ingredient: return new Sinc();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1386/HypergeometricDistribution.java
Used ingredient: return clusterer;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1387/HypergeometricDistribution.java
Used ingredient: return entries;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1388/HypergeometricDistribution.java
Used ingredient: return mappers;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1389/HypergeometricDistribution.java
Used ingredient: return this.sumSq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1390/HypergeometricDistribution.java
Used ingredient: return new Sinh();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1391/HypergeometricDistribution.java
Used ingredient: return new Sin();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1392/HypergeometricDistribution.java
Used ingredient: return searchMin;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1393/HypergeometricDistribution.java
Used ingredient: return gradients;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1394/HypergeometricDistribution.java
Used ingredient: return dimension;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1395/HypergeometricDistribution.java
Used ingredient: return filteredH;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1396/HypergeometricDistribution.java
Used ingredient: return maxColSum;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1397/HypergeometricDistribution.java
Used ingredient: return maxStep;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1398/HypergeometricDistribution.java
Used ingredient: return handler;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1399/HypergeometricDistribution.java
Used ingredient: return previous;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1400/HypergeometricDistribution.java
SuspiciousModificationPoint:         return inverseCumulativeProbability(random.nextDouble());
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 193
Used ingredient: return solveInverseCumulativeProbability(p, lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1401/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(final double p)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1402/AbstractIntegerDistribution.java
Used ingredient: double result = f.inverseCumulativeProbability(prob);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1403/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(double p)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1404/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(double p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1405/AbstractIntegerDistribution.java
Used ingredient: return distribution.inverseCumulativeProbability(nextUniform(0, 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1406/AbstractIntegerDistribution.java
Used ingredient: upper, distribution.inverseCumulativeProbability(1.0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1407/AbstractIntegerDistribution.java
Used ingredient: lower, distribution.inverseCumulativeProbability(0.0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1408/AbstractIntegerDistribution.java
Used ingredient: ret = innerCumulativeProbability(domain[0], x, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1409/AbstractIntegerDistribution.java
Used ingredient: ret = innerCumulativeProbability(domain[1], x, -1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1410/AbstractIntegerDistribution.java
Used ingredient: int ret = dist.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1411/AbstractIntegerDistribution.java
Used ingredient: public void testInverseCumulativeProbabilityExtremes() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1412/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0, dist.inverseCumulativeProbability(0d));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1413/AbstractIntegerDistribution.java
Used ingredient: distribution.inverseCumulativeProbability(1d - alpha / 2d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1414/AbstractIntegerDistribution.java
Used ingredient: // cf. AbstractRealDistribution.inverseCumulativeProbability(double)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1415/AbstractIntegerDistribution.java
Used ingredient: return 1.0 - fdist.cumulativeProbability(a.F);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1416/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(p <= dist.cumulativeProbability(ret));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1417/AbstractIntegerDistribution.java
Used ingredient: distribution.inverseCumulativeProbability(2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1418/AbstractIntegerDistribution.java
Used ingredient: protected void verifyInverseCumulativeProbabilities() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1419/AbstractIntegerDistribution.java
Used ingredient: distribution.inverseCumulativeProbability(-1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1420/AbstractIntegerDistribution.java
Used ingredient: // verify cumulativeProbability(double, double)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1421/AbstractIntegerDistribution.java
Used ingredient: int p = dist.inverseCumulativeProbability(0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1422/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(double x0, double x1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1423/AbstractIntegerDistribution.java
Used ingredient: return cumulativeProbability(x1) - cumulativeProbability(x0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1424/AbstractIntegerDistribution.java
Used ingredient: double actual = distribution.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1425/AbstractIntegerDistribution.java
Used ingredient: return kernel.inverseCumulativeProbability(kBminus + pCrit * kB / pB);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1426/AbstractIntegerDistribution.java
Used ingredient: return normal.cumulativeProbability(x + 0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1427/AbstractIntegerDistribution.java
Used ingredient: verifyInverseCumulativeProbabilities();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1428/AbstractIntegerDistribution.java
Used ingredient: return 2.0 * distribution.cumulativeProbability(-t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1429/AbstractIntegerDistribution.java
Used ingredient: double x = fd.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1430/AbstractIntegerDistribution.java
Used ingredient: private double checkedCumulativeProbability(int argument)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1431/AbstractIntegerDistribution.java
Used ingredient: public void testLargeMeanInverseCumulativeProbability() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1432/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(p > dist.cumulativeProbability(ret - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1433/AbstractIntegerDistribution.java
Used ingredient: quantiles[1] = distribution.inverseCumulativeProbability(0.5d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1434/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(2.0, dist.inverseCumulativeProbability(0.1), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1435/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(2.0, dist.inverseCumulativeProbability(0.2), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1436/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(5.0, dist.inverseCumulativeProbability(0.3), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1437/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(5.0, dist.inverseCumulativeProbability(0.4), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1438/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(8.0, dist.inverseCumulativeProbability(0.5), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1439/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(8.0, dist.inverseCumulativeProbability(0.6), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1440/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(3.0, dist.inverseCumulativeProbability(0.2), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1441/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(6.0, dist.inverseCumulativeProbability(0.4), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1442/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(9.0, dist.inverseCumulativeProbability(0.6), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1443/AbstractIntegerDistribution.java
Used ingredient: return 1 - distribution.cumulativeProbability(chiSquare(counts));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1444/AbstractIntegerDistribution.java
Used ingredient: return i == 0 ? kernel.cumulativeProbability(min, binBounds[0]) :
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1445/AbstractIntegerDistribution.java
Used ingredient: result = normal.inverseCumulativeProbability(0.841344746068543);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1446/AbstractIntegerDistribution.java
Used ingredient: quantiles[0] = distribution.inverseCumulativeProbability(0.25d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1447/AbstractIntegerDistribution.java
Used ingredient: quantiles[2] = distribution.inverseCumulativeProbability(0.75d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1448/AbstractIntegerDistribution.java
Used ingredient: return 2*standardNormal.cumulativeProbability(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1449/AbstractIntegerDistribution.java
Used ingredient: return 2 * standardNormal.cumulativeProbability(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1450/AbstractIntegerDistribution.java
Used ingredient: // verify cumulativeProbability(double)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1451/AbstractIntegerDistribution.java
Used ingredient: x = fd.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1452/AbstractIntegerDistribution.java
Used ingredient: setInverseCumulativeTestPoints(new double[] {0, 1});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1453/AbstractIntegerDistribution.java
Used ingredient: double actualCdf1 = dist.upperCumulativeProbability(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1454/AbstractIntegerDistribution.java
Used ingredient: public void testInverseCumulativeProbabilities() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1455/AbstractIntegerDistribution.java
Used ingredient: setInverseCumulativeTestPoints(new double[] {0.0, 1.0});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1456/AbstractIntegerDistribution.java
Used ingredient: * Default inverse cumulative probability accuracy.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1457/AbstractIntegerDistribution.java
Used ingredient: /** Default inverse cumulative probability accuracy.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1458/AbstractIntegerDistribution.java
Used ingredient: /** Default inverse cumulative probability accuracy. */
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1459/AbstractIntegerDistribution.java
Used ingredient: public void testCumulativeProbabilitiesRangeArguments() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1460/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(final double x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1461/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(0), Double.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1462/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(i), Double.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1463/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(7), Double.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1464/AbstractIntegerDistribution.java
Used ingredient: int inverseCumulativeProbability(double p) throws OutOfRangeException;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1465/AbstractIntegerDistribution.java
Used ingredient: result = normal.inverseCumulativeProbability(0.9999683287581673);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1466/AbstractIntegerDistribution.java
Used ingredient: result = normal.inverseCumulativeProbability(0.9772498680518209);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1467/AbstractIntegerDistribution.java
Used ingredient: setInverseCumulativeTestPoints(getCumulativeTestValues());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1468/AbstractIntegerDistribution.java
Used ingredient: setInverseCumulativeTestPoints(new double[] {0.1d, 0.5d});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1469/AbstractIntegerDistribution.java
Used ingredient: public void testDegenerateInverseCumulativeProbability() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1470/AbstractIntegerDistribution.java
Used ingredient: * {@link #inverseCumulativeProbability(double)} (no solver is invoked).
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1471/AbstractIntegerDistribution.java
Used ingredient: return gamma.cumulativeProbability(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1472/AbstractIntegerDistribution.java
Used ingredient: return cumulativeProbability(x) - p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1473/AbstractIntegerDistribution.java
Used ingredient: return inverse.multiply(XT).multiply(OI).operate(getY());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1474/AbstractIntegerDistribution.java
Used ingredient: result = cumulativeProbability(argument);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1475/AbstractIntegerDistribution.java
Used ingredient: double cumulativeProbability(double x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1476/AbstractIntegerDistribution.java
Used ingredient: protected void verifyCumulativeProbabilities() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1477/AbstractIntegerDistribution.java
Used ingredient: * Default inverse cumulative probability accuracy
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1478/AbstractIntegerDistribution.java
Used ingredient: public void testCumulativeProbabilityExtremes() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1479/AbstractIntegerDistribution.java
Used ingredient: * and inverse cumulative probability accuracy.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1480/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(double x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1481/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(double x)  {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1482/AbstractIntegerDistribution.java
Used ingredient: final double kBminus = kernel.cumulativeProbability(lower);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1483/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.0, dist.cumulativeProbability(1), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1484/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.2, dist.cumulativeProbability(2), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1485/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.1, dist.cumulativeProbability(2), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1486/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(lower, upper), 1E-12);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1487/AbstractIntegerDistribution.java
Used ingredient: public void testCumulativeProbabilitiesSingleArguments() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1488/AbstractIntegerDistribution.java
Used ingredient: double inverseCumulativeProbability(double p) throws OutOfRangeException;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1489/AbstractIntegerDistribution.java
Used ingredient: setInverseCumulativeTestPoints(new double[] { 0.1d, 0.5d });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1490/AbstractIntegerDistribution.java
Used ingredient: distribution.inverseCumulativeProbability(inverseCumulativeTestPoints[i]));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1491/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.6, dist.cumulativeProbability(10), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1492/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.8, dist.cumulativeProbability(12), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1493/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.8, dist.cumulativeProbability(13), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1494/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(1.0, dist.cumulativeProbability(15), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1495/AbstractIntegerDistribution.java
Used ingredient: * Creates the default inverse cumulative probability test expected
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1496/AbstractIntegerDistribution.java
Used ingredient: * <li>{@link #solveInverseCumulativeProbability(double, int, int)} for
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1497/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(x[i], d.inverseCumulativeProbability(cumes[i]), 1e-5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1498/AbstractIntegerDistribution.java
Used ingredient: return inverseCumulativeTestPoints;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1499/AbstractIntegerDistribution.java
Used ingredient: return 1 - distribution.cumulativeProbability(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1500/AbstractIntegerDistribution.java
SuspiciousModificationPoint:             double k = FastMath.sqrt((1.0 - p) / p);
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 130
Used ingredient: double t = FastMath.sqrt(1 + q * q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1501/AbstractIntegerDistribution.java
Used ingredient: double h = FastMath.sqrt(3.0) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1502/AbstractIntegerDistribution.java
Used ingredient: final double s = FastMath.sqrt(2 / jp1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1503/AbstractIntegerDistribution.java
Used ingredient: final double sm = FastMath.sqrt(j / jp1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1504/AbstractIntegerDistribution.java
Used ingredient: final double s14 = FastMath.sqrt(14.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1505/AbstractIntegerDistribution.java
Used ingredient: final double s17 = FastMath.sqrt(17.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1506/AbstractIntegerDistribution.java
Used ingredient: double sqrt = FastMath.sqrt(2) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1507/AbstractIntegerDistribution.java
Used ingredient: double f0 = FastMath.sqrt(x / y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1508/AbstractIntegerDistribution.java
Used ingredient: double cosDelta = FastMath.sqrt(2) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1509/AbstractIntegerDistribution.java
Used ingredient: double sinAlpha = FastMath.sqrt(3) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1510/AbstractIntegerDistribution.java
Used ingredient: double isqrt3 = 1/FastMath.sqrt(3.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1511/AbstractIntegerDistribution.java
Used ingredient: double isqrt2 = 1/FastMath.sqrt(2.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1512/AbstractIntegerDistribution.java
Used ingredient: double isqrt6 = 1/FastMath.sqrt(6.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1513/AbstractIntegerDistribution.java
Used ingredient: final double s3  = FastMath.sqrt(3.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1514/AbstractIntegerDistribution.java
Used ingredient: double r = FastMath.sqrt(2) /2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1515/AbstractIntegerDistribution.java
Used ingredient: double sqrt3 = FastMath.sqrt(3.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1516/AbstractIntegerDistribution.java
Used ingredient: double dfdx = FastMath.cos(x / a) / a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1517/AbstractIntegerDistribution.java
Used ingredient: double x = 1.960 / FastMath.sqrt(2.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1518/AbstractIntegerDistribution.java
Used ingredient: double x = 2.576 / FastMath.sqrt(2.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1519/AbstractIntegerDistribution.java
Used ingredient: double x = 2.807 / FastMath.sqrt(2.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1520/AbstractIntegerDistribution.java
Used ingredient: double x = 3.291 / FastMath.sqrt(2.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1521/AbstractIntegerDistribution.java
Used ingredient: double sinDelta = -FastMath.sqrt(2) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1522/AbstractIntegerDistribution.java
Used ingredient: double n = (int) FastMath.floor((t1 - t0) / h);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1523/AbstractIntegerDistribution.java
Used ingredient: double t = FastMath.abs(t(m, mu, v, n));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1524/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = FastMath.sqrt(tmpSquare);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1525/AbstractIntegerDistribution.java
Used ingredient: double r = FastMath.sqrt(14);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1526/AbstractIntegerDistribution.java
Used ingredient: final double s1553 = FastMath.sqrt(1553.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1527/AbstractIntegerDistribution.java
Used ingredient: double f1 = 1 / (2 * FastMath.sqrt(x * y));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1528/AbstractIntegerDistribution.java
Used ingredient: final double r = FastMath.sqrt(p * p + q * q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1529/AbstractIntegerDistribution.java
Used ingredient: double z = FastMath.sqrt(FastMath.abs(q));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1530/AbstractIntegerDistribution.java
Used ingredient: final double s = FastMath.sqrt(2.0 / f.length);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1531/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = FastMath.sqrt(x1 * x1 + x2 * x2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1532/AbstractIntegerDistribution.java
Used ingredient: double halfStep = FastMath.abs(tB - tA) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1533/AbstractIntegerDistribution.java
Used ingredient: final double dz = FastMath.abs(v3.z - z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1534/AbstractIntegerDistribution.java
Used ingredient: final double dx = FastMath.abs(p3.x - x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1535/AbstractIntegerDistribution.java
Used ingredient: final double dy = FastMath.abs(p3.y - y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1536/AbstractIntegerDistribution.java
Used ingredient: final double dx = FastMath.abs(v3.x - x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1537/AbstractIntegerDistribution.java
Used ingredient: final double dy = FastMath.abs(v3.y - y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1538/AbstractIntegerDistribution.java
Used ingredient: double w = - FastMath.log((1.0 - x) * (1.0 + x));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1539/AbstractIntegerDistribution.java
Used ingredient: double step  = FastMath.pow(2.0, -(i + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1540/AbstractIntegerDistribution.java
Used ingredient: return 1 / FastMath.sqrt(1 - x * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1541/AbstractIntegerDistribution.java
Used ingredient: private double std = FastMath.sqrt(var);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1542/AbstractIntegerDistribution.java
Used ingredient: final double rho  = FastMath.sqrt(rho2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1543/AbstractIntegerDistribution.java
Used ingredient: final double sqrtTwo = FastMath.sqrt(2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1544/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = FastMath.exp(-temp * x4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1545/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = FastMath.exp(-temp * x5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1546/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = FastMath.exp(-x05 * temp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1547/AbstractIntegerDistribution.java
Used ingredient: double xk  = inv / FastMath.log(10.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1548/AbstractIntegerDistribution.java
Used ingredient: double dplus = b + FastMath.sqrt(delta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1549/AbstractIntegerDistribution.java
Used ingredient: final double sqrtX = FastMath.sqrt(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1550/AbstractIntegerDistribution.java
Used ingredient: double sigma = FastMath.sqrt(mean);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1551/AbstractIntegerDistribution.java
Used ingredient: double gNorm = FastMath.sqrt(sum2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1552/AbstractIntegerDistribution.java
Used ingredient: double sPar = FastMath.sqrt(lmPar);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1553/AbstractIntegerDistribution.java
Used ingredient: double diff = FastMath.abs(a - b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1554/AbstractIntegerDistribution.java
Used ingredient: double sqrt = FastMath.sqrt(llr);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1555/AbstractIntegerDistribution.java
Used ingredient: double c = FastMath.exp (t0 - t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1556/AbstractIntegerDistribution.java
Used ingredient: double n        = FastMath.sqrt(n2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1557/AbstractIntegerDistribution.java
Used ingredient: double coeff = FastMath.sqrt(f);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1558/AbstractIntegerDistribution.java
Used ingredient: double s = 1 / FastMath.sqrt(3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1559/AbstractIntegerDistribution.java
Used ingredient: double f0 = FastMath.sin(x / a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1560/AbstractIntegerDistribution.java
Used ingredient: double s = FastMath.sqrt(p * p + q * q + r * r);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1561/AbstractIntegerDistribution.java
Used ingredient: double result = FastMath.sqrt(getRSquare());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1562/AbstractIntegerDistribution.java
Used ingredient: lowerBound = mu - sig * FastMath.sqrt((1. - p) / p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1563/AbstractIntegerDistribution.java
Used ingredient: double dminus = b - FastMath.sqrt(delta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1564/AbstractIntegerDistribution.java
Used ingredient: double scale    = FastMath.scalb(1.0, 100);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1565/AbstractIntegerDistribution.java
Used ingredient: cos = 1.0 / FastMath.sqrt(1.0 + tan * tan);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1566/AbstractIntegerDistribution.java
Used ingredient: double twoK = FastMath.rint((a - c) / FastMath.PI);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1567/AbstractIntegerDistribution.java
Used ingredient: double sin = FastMath.sin(omega * t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1568/AbstractIntegerDistribution.java
Used ingredient: double cos = FastMath.cos(omega * t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1569/AbstractIntegerDistribution.java
Used ingredient: double sin = FastMath.sin(t + a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1570/AbstractIntegerDistribution.java
Used ingredient: double den = 1 + FastMath.pow(x / c, b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1571/AbstractIntegerDistribution.java
Used ingredient: double cos = FastMath.cos(t + a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1572/AbstractIntegerDistribution.java
Used ingredient: s = FastMath.sqrt(2.0 / (n - 1.0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1573/AbstractIntegerDistribution.java
Used ingredient: double xk = FastMath.pow(inv, -n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1574/AbstractIntegerDistribution.java
Used ingredient: y[1] = FastMath.sqrt(1 - e * e) * sinE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1575/AbstractIntegerDistribution.java
Used ingredient: x += FastMath.sqrt(100 * i * F1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1576/AbstractIntegerDistribution.java
Used ingredient: final double sqrtTol = FastMath.sqrt(tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1577/AbstractIntegerDistribution.java
Used ingredient: protected double std = FastMath.sqrt(var);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1578/AbstractIntegerDistribution.java
Used ingredient: final double anorm = FastMath.sqrt(tnorm);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1579/AbstractIntegerDistribution.java
Used ingredient: final double rho    = FastMath.sqrt(rho2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1580/AbstractIntegerDistribution.java
Used ingredient: final double expected = FastMath.sqrt(84);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1581/AbstractIntegerDistribution.java
Used ingredient: double invR3 = 1 / (r2 * FastMath.sqrt(r2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1582/AbstractIntegerDistribution.java
Used ingredient: final double c = 1 / (3 * FastMath.sqrt(d));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1583/AbstractIntegerDistribution.java
Used ingredient: final double x = FastMath.pow(p, 1 / shape);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1584/AbstractIntegerDistribution.java
Used ingredient: double h = FastMath.copySign(0.05, t1 - t0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1585/AbstractIntegerDistribution.java
Used ingredient: double ref = FastMath.atan2(y0 + dy, x0 + dx);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1586/AbstractIntegerDistribution.java
Used ingredient: final double ynorm = FastMath.sqrt(ynorm2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1587/AbstractIntegerDistribution.java
Used ingredient: final double f = 1 / FastMath.sqrt(normSq);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1588/AbstractIntegerDistribution.java
Used ingredient: final double dist = FastMath.abs(z - x[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1589/AbstractIntegerDistribution.java
Used ingredient: final double u = d * FastMath.log1p(a / b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1590/AbstractIntegerDistribution.java
Used ingredient: final double s = FastMath.sqrt(2.0 / (f.length - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1591/AbstractIntegerDistribution.java
Used ingredient: final double b = FastMath.max(p, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1592/AbstractIntegerDistribution.java
Used ingredient: double subd = adelt / Math.sqrt(distsq);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1593/AbstractIntegerDistribution.java
Used ingredient: final double d = FastMath.hypot(dx, dy);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1594/AbstractIntegerDistribution.java
Used ingredient: double ti   = FastMath.sin(temp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1595/AbstractIntegerDistribution.java
Used ingredient: ret = FastMath.pow(1 - p, x) * p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1596/AbstractIntegerDistribution.java
Used ingredient: double t = FastMath.hypot(f, g);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1597/AbstractIntegerDistribution.java
Used ingredient: final double p = FastMath.abs(period);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1598/AbstractIntegerDistribution.java
Used ingredient: final double a = FastMath.min(p, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1599/AbstractIntegerDistribution.java
Used ingredient: double tst = FastMath.atan2(y, x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1600/AbstractIntegerDistribution.java
SuspiciousModificationPoint:             double tmp = mu - k * sigma;
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 131
Used ingredient: tmp = mu + k * sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1601/AbstractIntegerDistribution.java
Used ingredient: double t  = 1 + 2 * sum / m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1602/AbstractIntegerDistribution.java
Used ingredient: double temp= 2 * div * s2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1603/AbstractIntegerDistribution.java
Used ingredient: double x = min + 0.5 * spacing;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1604/AbstractIntegerDistribution.java
Used ingredient: double temp = (i + 1) / 5.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1605/AbstractIntegerDistribution.java
Used ingredient: double tmp = (i + 1) / 10.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1606/AbstractIntegerDistribution.java
Used ingredient: double temp = tempA + tempB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1607/AbstractIntegerDistribution.java
Used ingredient: double temp = 10.0 * i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1608/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = 15 - i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1609/AbstractIntegerDistribution.java
Used ingredient: double temp = 2 * tmp2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1610/AbstractIntegerDistribution.java
Used ingredient: double temp = fX - fVal - delta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1611/AbstractIntegerDistribution.java
Used ingredient: final double temp = suma * sumb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1612/AbstractIntegerDistribution.java
Used ingredient: final double s = m * diff / sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1613/AbstractIntegerDistribution.java
Used ingredient: double tmp3 = x1 * tmp2 / temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1614/AbstractIntegerDistribution.java
Used ingredient: double t = 18 * FastMath.PI;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1615/AbstractIntegerDistribution.java
Used ingredient: double b = -(a - pi2a + xa);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1616/AbstractIntegerDistribution.java
Used ingredient: double nb = -(na - xs + za);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1617/AbstractIntegerDistribution.java
Used ingredient: double t = t0 + i * h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1618/AbstractIntegerDistribution.java
Used ingredient: double c = x[1] - 2 * x[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1619/AbstractIntegerDistribution.java
Used ingredient: double hDouble = k - n * d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1620/AbstractIntegerDistribution.java
Used ingredient: double estb =  est - esta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1621/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = x2 / temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1622/AbstractIntegerDistribution.java
Used ingredient: double fp = dxNorm - delta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1623/AbstractIntegerDistribution.java
Used ingredient: double temp = epsA + epsB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1624/AbstractIntegerDistribution.java
Used ingredient: double sum = -HALF * xoptsq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1625/AbstractIntegerDistribution.java
Used ingredient: double p = 2 * y[0] * y[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1626/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = i  + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1627/AbstractIntegerDistribution.java
Used ingredient: double temp2 = za + temp - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1628/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = lna + tmp1 - tmp1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1629/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = twoPi * tmpSquare;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1630/AbstractIntegerDistribution.java
Used ingredient: double zb = -(za - 1.0 - ya);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1631/AbstractIntegerDistribution.java
Used ingredient: double db = -(da - 1.0 - ya);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1632/AbstractIntegerDistribution.java
Used ingredient: double db = -(da - 2.0 - ya);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1633/AbstractIntegerDistribution.java
Used ingredient: double n = upper - lower + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1634/AbstractIntegerDistribution.java
Used ingredient: double tmp4 = x2 * tmp2 + x3 * tmp3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1635/AbstractIntegerDistribution.java
Used ingredient: final double sigma2 = sigma * sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1636/AbstractIntegerDistribution.java
Used ingredient: double t = (x * s - z * r) / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1637/AbstractIntegerDistribution.java
Used ingredient: double ti = temp * tmp2 - tmp1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1638/AbstractIntegerDistribution.java
Used ingredient: final double n = 1 - cos * cos;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1639/AbstractIntegerDistribution.java
Used ingredient: final double w = 1 - arg * arg;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1640/AbstractIntegerDistribution.java
Used ingredient: double tmp = result[0] + zs[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1641/AbstractIntegerDistribution.java
Used ingredient: final double tmp = wxi * xi / di;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1642/AbstractIntegerDistribution.java
Used ingredient: double r1 = 1.0 / (r0 - a0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1643/AbstractIntegerDistribution.java
Used ingredient: double ra = r + temp - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1644/AbstractIntegerDistribution.java
Used ingredient: double d = -(c - a - t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1645/AbstractIntegerDistribution.java
Used ingredient: double aa = xa + tmp - tmp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1646/AbstractIntegerDistribution.java
Used ingredient: double inv = 1 / (x * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1647/AbstractIntegerDistribution.java
Used ingredient: double f2 = -f1 / (2 * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1648/AbstractIntegerDistribution.java
Used ingredient: double xm = 0.5 * (x0 + x2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1649/AbstractIntegerDistribution.java
Used ingredient: double ej = 2.0 * x * v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1650/AbstractIntegerDistribution.java
Used ingredient: double xb = xa - x + 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1651/AbstractIntegerDistribution.java
Used ingredient: double val = tmp2 - tmp1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1652/AbstractIntegerDistribution.java
Used ingredient: double sumA = tmpA + tmpB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1653/AbstractIntegerDistribution.java
Used ingredient: double v = d / (x + mu);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1654/AbstractIntegerDistribution.java
Used ingredient: double dN = a + b * dPrev;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1655/AbstractIntegerDistribution.java
Used ingredient: double[] c = { -2, -3, 2 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1656/AbstractIntegerDistribution.java
Used ingredient: double a = x[0] + 10 * x[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1657/AbstractIntegerDistribution.java
Used ingredient: double rNorm    = lastNorm;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1658/AbstractIntegerDistribution.java
Used ingredient: double offset = t - middle;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1659/AbstractIntegerDistribution.java
Used ingredient: double paru = gNorm / delta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1660/AbstractIntegerDistribution.java
Used ingredient: double q = real / imaginary;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1661/AbstractIntegerDistribution.java
Used ingredient: double range = max - min;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1662/AbstractIntegerDistribution.java
Used ingredient: double rangeX = maxX - minX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1663/AbstractIntegerDistribution.java
Used ingredient: double rangeY = maxY - minY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1664/AbstractIntegerDistribution.java
Used ingredient: double yb = xb + xa - ya;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1665/AbstractIntegerDistribution.java
Used ingredient: double t2 = t  * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1666/AbstractIntegerDistribution.java
Used ingredient: double f = 2 * d - ninv;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1667/AbstractIntegerDistribution.java
Used ingredient: double[] p1 = { 2.5,  0.0 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1668/AbstractIntegerDistribution.java
Used ingredient: double[] p2 = { -0.5, 4.0 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1669/AbstractIntegerDistribution.java
Used ingredient: double ratio = ya * denomr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1670/AbstractIntegerDistribution.java
Used ingredient: double temp = variables[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1671/AbstractIntegerDistribution.java
Used ingredient: final double x0 = x - mean;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1672/AbstractIntegerDistribution.java
Used ingredient: final double dev = x - mean;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1673/AbstractIntegerDistribution.java
Used ingredient: final double temp = ra + rb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1674/AbstractIntegerDistribution.java
Used ingredient: final double eps = s * beta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1675/AbstractIntegerDistribution.java
Used ingredient: final double delta = x - mu;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1676/AbstractIntegerDistribution.java
Used ingredient: double[] tmp1 = qrt[minor];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1677/AbstractIntegerDistribution.java
Used ingredient: double zb = denom - za;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1678/AbstractIntegerDistribution.java
Used ingredient: double minStep      = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1679/AbstractIntegerDistribution.java
Used ingredient: double minStep        = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1680/AbstractIntegerDistribution.java
Used ingredient: double temp = na + yb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1681/AbstractIntegerDistribution.java
Used ingredient: double temp = da + yb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1682/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1683/AbstractIntegerDistribution.java
Used ingredient: double p = s * e[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1684/AbstractIntegerDistribution.java
Used ingredient: double temp = za + zb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1685/AbstractIntegerDistribution.java
Used ingredient: double temp = i / 10.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1686/AbstractIntegerDistribution.java
Used ingredient: double temp = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1687/AbstractIntegerDistribution.java
Used ingredient: final double tmp = work[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1688/AbstractIntegerDistribution.java
Used ingredient: double t0 = 0.5 * FastMath.PI;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1689/AbstractIntegerDistribution.java
Used ingredient: double a = x[1] - x[0] * x[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1690/AbstractIntegerDistribution.java
Used ingredient: double divident = 2 * (x - a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1691/AbstractIntegerDistribution.java
Used ingredient: final double a = min + i * step;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1692/AbstractIntegerDistribution.java
Used ingredient: double tmp = x + LANCZOS_G + .5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1693/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = (xB - xA) * (fB - fC);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1694/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = (xB - xC) * (fB - fA);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1695/AbstractIntegerDistribution.java
Used ingredient: double nb = -(na + 1.0 - ya);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1696/AbstractIntegerDistribution.java
Used ingredient: double ya = xa + temp - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1697/AbstractIntegerDistribution.java
Used ingredient: double d = (i + 1) * 1.1 / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1698/AbstractIntegerDistribution.java
Used ingredient: double min = -1.0, max = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1699/AbstractIntegerDistribution.java
Used ingredient: final double w = 2 / (d * d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1700/AbstractIntegerDistribution.java
SuspiciousModificationPoint:             if (tmp > lower) {
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 132
Used ingredient: if (tmp < upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1701/AbstractIntegerDistribution.java
Used ingredient: if (x <= lower) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1702/AbstractIntegerDistribution.java
Used ingredient: if (x < lower) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1703/AbstractIntegerDistribution.java
Used ingredient: if (tmp1 > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1704/AbstractIntegerDistribution.java
Used ingredient: if (temp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1705/AbstractIntegerDistribution.java
Used ingredient: if (tmp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1706/AbstractIntegerDistribution.java
Used ingredient: if (r >= lower &&
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1707/AbstractIntegerDistribution.java
Used ingredient: if (temp < stplen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1708/AbstractIntegerDistribution.java
Used ingredient: if (column > row) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1709/AbstractIntegerDistribution.java
Used ingredient: if (temp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1710/AbstractIntegerDistribution.java
Used ingredient: if (top == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1711/AbstractIntegerDistribution.java
Used ingredient: if (comp >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1712/AbstractIntegerDistribution.java
Used ingredient: if (term[0] > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1713/AbstractIntegerDistribution.java
Used ingredient: if (dnorm > rho) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1714/AbstractIntegerDistribution.java
Used ingredient: if (x >= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1715/AbstractIntegerDistribution.java
Used ingredient: if (sum >= r) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1716/AbstractIntegerDistribution.java
Used ingredient: if (min > m[r]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1717/AbstractIntegerDistribution.java
Used ingredient: if (comp > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1718/AbstractIntegerDistribution.java
Used ingredient: if (x > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1719/AbstractIntegerDistribution.java
Used ingredient: if (lower < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1720/AbstractIntegerDistribution.java
Used ingredient: if (index < low) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1721/AbstractIntegerDistribution.java
Used ingredient: if (min > e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1722/AbstractIntegerDistribution.java
Used ingredient: if (k > len) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1723/AbstractIntegerDistribution.java
Used ingredient: if (this == other) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1724/AbstractIntegerDistribution.java
Used ingredient: if (stplen < blen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1725/AbstractIntegerDistribution.java
Used ingredient: if (a0 > overflow) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1726/AbstractIntegerDistribution.java
Used ingredient: if (termJ[0] > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1727/AbstractIntegerDistribution.java
Used ingredient: if (t < extremeT) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1728/AbstractIntegerDistribution.java
Used ingredient: if (column < row) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1729/AbstractIntegerDistribution.java
Used ingredient: if (n != other.n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1730/AbstractIntegerDistribution.java
Used ingredient: if (this == other){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1731/AbstractIntegerDistribution.java
Used ingredient: if (step > maxStep) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1732/AbstractIntegerDistribution.java
Used ingredient: while (im >= il) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1733/AbstractIntegerDistribution.java
Used ingredient: if (delta > max) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1734/AbstractIntegerDistribution.java
Used ingredient: if (dot >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1735/AbstractIntegerDistribution.java
Used ingredient: if (ret != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1736/AbstractIntegerDistribution.java
Used ingredient: if (min >= max) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1737/AbstractIntegerDistribution.java
Used ingredient: if (p1 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1738/AbstractIntegerDistribution.java
Used ingredient: if (cmp0 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1739/AbstractIntegerDistribution.java
Used ingredient: if (cmp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1740/AbstractIntegerDistribution.java
Used ingredient: if (num == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1741/AbstractIntegerDistribution.java
Used ingredient: if (cut != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1742/AbstractIntegerDistribution.java
Used ingredient: if (cut == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1743/AbstractIntegerDistribution.java
Used ingredient: if (t == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1744/AbstractIntegerDistribution.java
Used ingredient: if (im == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1745/AbstractIntegerDistribution.java
Used ingredient: if (m != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1746/AbstractIntegerDistribution.java
Used ingredient: if (m == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1747/AbstractIntegerDistribution.java
Used ingredient: if (pc3 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1748/AbstractIntegerDistribution.java
Used ingredient: if (p2 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1749/AbstractIntegerDistribution.java
Used ingredient: if (x <= scale) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1750/AbstractIntegerDistribution.java
Used ingredient: if (itest >= 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1751/AbstractIntegerDistribution.java
Used ingredient: if (this == obj) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1752/AbstractIntegerDistribution.java
Used ingredient: if (this == o) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1753/AbstractIntegerDistribution.java
Used ingredient: if (from == to) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1754/AbstractIntegerDistribution.java
Used ingredient: if (idxStep < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1755/AbstractIntegerDistribution.java
Used ingredient: if (nSteps < 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1756/AbstractIntegerDistribution.java
Used ingredient: if (nSteps < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1757/AbstractIntegerDistribution.java
Used ingredient: if (column > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1758/AbstractIntegerDistribution.java
Used ingredient: if (offset > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1759/AbstractIntegerDistribution.java
Used ingredient: if (swapR != r) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1760/AbstractIntegerDistribution.java
Used ingredient: if (iact >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1761/AbstractIntegerDistribution.java
Used ingredient: if (mu >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1762/AbstractIntegerDistribution.java
Used ingredient: if ((m^s) >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1763/AbstractIntegerDistribution.java
Used ingredient: if (pm >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1764/AbstractIntegerDistribution.java
Used ingredient: if (p >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1765/AbstractIntegerDistribution.java
Used ingredient: if (max != col) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1766/AbstractIntegerDistribution.java
Used ingredient: if (norm2 > ak2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1767/AbstractIntegerDistribution.java
Used ingredient: if (minadj >= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1768/AbstractIntegerDistribution.java
Used ingredient: if (im == il) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1769/AbstractIntegerDistribution.java
Used ingredient: if (max < m[r]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1770/AbstractIntegerDistribution.java
Used ingredient: if (pos >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1771/AbstractIntegerDistribution.java
Used ingredient: if (mu > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1772/AbstractIntegerDistribution.java
Used ingredient: if (mu > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1773/AbstractIntegerDistribution.java
Used ingredient: if (mu > 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1774/AbstractIntegerDistribution.java
Used ingredient: if (m >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1775/AbstractIntegerDistribution.java
Used ingredient: if (ntrits > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1776/AbstractIntegerDistribution.java
Used ingredient: if (q == offset) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1777/AbstractIntegerDistribution.java
Used ingredient: if (trial > a) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1778/AbstractIntegerDistribution.java
Used ingredient: if (getN() > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1779/AbstractIntegerDistribution.java
Used ingredient: if (getN() > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1780/AbstractIntegerDistribution.java
Used ingredient: if (sumyy > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1781/AbstractIntegerDistribution.java
Used ingredient: if (x < scale) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1782/AbstractIntegerDistribution.java
Used ingredient: if (sumxx > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1783/AbstractIntegerDistribution.java
Used ingredient: if (from < to) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1784/AbstractIntegerDistribution.java
Used ingredient: if (max < e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1785/AbstractIntegerDistribution.java
Used ingredient: if (ipt > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1786/AbstractIntegerDistribution.java
Used ingredient: if (remA > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1787/AbstractIntegerDistribution.java
Used ingredient: if (t > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1788/AbstractIntegerDistribution.java
Used ingredient: if (m > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1789/AbstractIntegerDistribution.java
Used ingredient: if (fp > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1790/AbstractIntegerDistribution.java
Used ingredient: if (p > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1791/AbstractIntegerDistribution.java
Used ingredient: if (!transposed) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1792/AbstractIntegerDistribution.java
Used ingredient: if (_a > eps) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1793/AbstractIntegerDistribution.java
Used ingredient: if (_b > eps) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1794/AbstractIntegerDistribution.java
Used ingredient: if (v > qr) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1795/AbstractIntegerDistribution.java
Used ingredient: if (v < lo) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1796/AbstractIntegerDistribution.java
Used ingredient: if (! forward) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1797/AbstractIntegerDistribution.java
Used ingredient: if (steps == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1798/AbstractIntegerDistribution.java
Used ingredient: if (tempa <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1799/AbstractIntegerDistribution.java
Used ingredient: if (++count < len) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1800/AbstractIntegerDistribution.java
SuspiciousModificationPoint:             k = 1.0 / k;
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 135
Used ingredient: d = 1.0 / d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1801/AbstractIntegerDistribution.java
Used ingredient: s = 1.0 / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1802/AbstractIntegerDistribution.java
Used ingredient: c = 1.0 / t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1803/AbstractIntegerDistribution.java
Used ingredient: s = 1.0 / t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1804/AbstractIntegerDistribution.java
Used ingredient: s = 2.0 / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1805/AbstractIntegerDistribution.java
Used ingredient: dx = 1.0 / div;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1806/AbstractIntegerDistribution.java
Used ingredient: dN = 1 / dN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1807/AbstractIntegerDistribution.java
Used ingredient: dk = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1808/AbstractIntegerDistribution.java
Used ingredient: rnk += 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1809/AbstractIntegerDistribution.java
Used ingredient: dy[0] = 1.0 / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1810/AbstractIntegerDistribution.java
Used ingredient: r[m1] = 1.0 / X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1811/AbstractIntegerDistribution.java
Used ingredient: p = p / r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1812/AbstractIntegerDistribution.java
Used ingredient: f = f / h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1813/AbstractIntegerDistribution.java
Used ingredient: t = t - 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1814/AbstractIntegerDistribution.java
Used ingredient: q = 1 - s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1815/AbstractIntegerDistribution.java
Used ingredient: k = k + m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1816/AbstractIntegerDistribution.java
Used ingredient: p = x / s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1817/AbstractIntegerDistribution.java
Used ingredient: d = p / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1818/AbstractIntegerDistribution.java
Used ingredient: t = t + 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1819/AbstractIntegerDistribution.java
Used ingredient: p = p / 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1820/AbstractIntegerDistribution.java
Used ingredient: m = n / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1821/AbstractIntegerDistribution.java
Used ingredient: q = z / s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1822/AbstractIntegerDistribution.java
Used ingredient: hc = H1 * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1823/AbstractIntegerDistribution.java
Used ingredient: r = r / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1824/AbstractIntegerDistribution.java
Used ingredient: c = q / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1825/AbstractIntegerDistribution.java
Used ingredient: q = q / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1826/AbstractIntegerDistribution.java
Used ingredient: n = n / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1827/AbstractIntegerDistribution.java
Used ingredient: q = fa / fc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1828/AbstractIntegerDistribution.java
Used ingredient: q = q / r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1829/AbstractIntegerDistribution.java
Used ingredient: s = p / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1830/AbstractIntegerDistribution.java
Used ingredient: n = n + 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1831/AbstractIntegerDistribution.java
Used ingredient: n = n / f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1832/AbstractIntegerDistribution.java
Used ingredient: sn = g / t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1833/AbstractIntegerDistribution.java
Used ingredient: cs = f / t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1834/AbstractIntegerDistribution.java
Used ingredient: ret = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1835/AbstractIntegerDistribution.java
Used ingredient: y[0] =  1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1836/AbstractIntegerDistribution.java
Used ingredient: 1.0,  1.0 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1837/AbstractIntegerDistribution.java
Used ingredient: bred -= 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1838/AbstractIntegerDistribution.java
Used ingredient: den = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1839/AbstractIntegerDistribution.java
Used ingredient: ared -= 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1840/AbstractIntegerDistribution.java
Used ingredient: dy[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1841/AbstractIntegerDistribution.java
Used ingredient: c[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1842/AbstractIntegerDistribution.java
Used ingredient: s = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1843/AbstractIntegerDistribution.java
Used ingredient: s[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1844/AbstractIntegerDistribution.java
Used ingredient: y[0] += 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1845/AbstractIntegerDistribution.java
Used ingredient: y += 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1846/AbstractIntegerDistribution.java
Used ingredient: x[0] += 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1847/AbstractIntegerDistribution.java
Used ingredient: b = 1.0 + t * b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1848/AbstractIntegerDistribution.java
Used ingredient: q = 1.0 + t * q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1849/AbstractIntegerDistribution.java
Used ingredient: tmp[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1850/AbstractIntegerDistribution.java
Used ingredient: e[k - 1] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1851/AbstractIntegerDistribution.java
Used ingredient: { 1.0 / 2.0 }
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1852/AbstractIntegerDistribution.java
Used ingredient: dot[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1853/AbstractIntegerDistribution.java
Used ingredient: mean *= 10.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1854/AbstractIntegerDistribution.java
Used ingredient: {  1.0 / 3.0 },
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1855/AbstractIntegerDistribution.java
Used ingredient: exp = -1.0 / order;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1856/AbstractIntegerDistribution.java
Used ingredient: m = (n - 1.0) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1857/AbstractIntegerDistribution.java
Used ingredient: int j = n - k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1858/AbstractIntegerDistribution.java
Used ingredient: mp1 = m + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1859/AbstractIntegerDistribution.java
Used ingredient: m = m >> 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1860/AbstractIntegerDistribution.java
Used ingredient: i = -i - 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1861/AbstractIntegerDistribution.java
Used ingredient: int rnk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1862/AbstractIntegerDistribution.java
Used ingredient: int k = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1863/AbstractIntegerDistribution.java
Used ingredient: int k = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1864/AbstractIntegerDistribution.java
Used ingredient: e[k] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1865/AbstractIntegerDistribution.java
Used ingredient: b <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1866/AbstractIntegerDistribution.java
Used ingredient: int n = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1867/AbstractIntegerDistribution.java
Used ingredient: ret = a - b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1868/AbstractIntegerDistribution.java
Used ingredient: ret = a * b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1869/AbstractIntegerDistribution.java
Used ingredient: ret = 0.5 * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1870/AbstractIntegerDistribution.java
Used ingredient: u += u - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1871/AbstractIntegerDistribution.java
Used ingredient: d = b - a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1872/AbstractIntegerDistribution.java
Used ingredient: yb = y - ya;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1873/AbstractIntegerDistribution.java
Used ingredient: ret = x * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1874/AbstractIntegerDistribution.java
Used ingredient: e = a - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1875/AbstractIntegerDistribution.java
Used ingredient: ret = a + b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1876/AbstractIntegerDistribution.java
Used ingredient: u = s * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1877/AbstractIntegerDistribution.java
Used ingredient: e = b - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1878/AbstractIntegerDistribution.java
Used ingredient: ad = a * d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1879/AbstractIntegerDistribution.java
Used ingredient: bd = b * d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1880/AbstractIntegerDistribution.java
Used ingredient: p = p + s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1881/AbstractIntegerDistribution.java
Used ingredient: bc = b * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1882/AbstractIntegerDistribution.java
Used ingredient: d2 += x * x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1883/AbstractIntegerDistribution.java
Used ingredient: c = c * s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1884/AbstractIntegerDistribution.java
Used ingredient: ae = ae % p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1885/AbstractIntegerDistribution.java
Used ingredient: dy[1] = x / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1886/AbstractIntegerDistribution.java
Used ingredient: r = r * rnd;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1887/AbstractIntegerDistribution.java
Used ingredient: e = e >> 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1888/AbstractIntegerDistribution.java
Used ingredient: s1 += r * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1889/AbstractIntegerDistribution.java
Used ingredient: s3 += r * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1890/AbstractIntegerDistribution.java
Used ingredient: u = x + d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1891/AbstractIntegerDistribution.java
Used ingredient: b = b + d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1892/AbstractIntegerDistribution.java
Used ingredient: pos = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1893/AbstractIntegerDistribution.java
Used ingredient: ac = a * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1894/AbstractIntegerDistribution.java
Used ingredient: s = s * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1895/AbstractIntegerDistribution.java
Used ingredient: z = p - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1896/AbstractIntegerDistribution.java
Used ingredient: z = z * lnb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1897/AbstractIntegerDistribution.java
Used ingredient: r = 2 * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1898/AbstractIntegerDistribution.java
Used ingredient: v = v * v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1899/AbstractIntegerDistribution.java
Used ingredient: e[k + 1] += 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1900/AbstractIntegerDistribution.java
SuspiciousModificationPoint:             tmp = mu + k * sigma;
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 136
Used ingredient: double tmp = mu - k * sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1901/AbstractIntegerDistribution.java
Used ingredient: mu + 5 * sigma});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1902/AbstractIntegerDistribution.java
Used ingredient: mu + 5 * sigma });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1903/AbstractIntegerDistribution.java
Used ingredient: temp = ya + za * baseB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1904/AbstractIntegerDistribution.java
Used ingredient: temp = ya + zb * baseA;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1905/AbstractIntegerDistribution.java
Used ingredient: temp = ya + zb * baseB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1906/AbstractIntegerDistribution.java
Used ingredient: this.is   = 1 / sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1907/AbstractIntegerDistribution.java
Used ingredient: temp = ssq - d1 * d1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1908/AbstractIntegerDistribution.java
Used ingredient: temp = ya + recipa;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1909/AbstractIntegerDistribution.java
Used ingredient: * F(mu + k * sig) >= p,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1910/AbstractIntegerDistribution.java
Used ingredient: temp = za + temp - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1911/AbstractIntegerDistribution.java
Used ingredient: mu + 3 * sigma,mu + 4 * sigma,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1912/AbstractIntegerDistribution.java
Used ingredient: p = 2 * m * s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1913/AbstractIntegerDistribution.java
Used ingredient: temp = ya + ra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1914/AbstractIntegerDistribution.java
Used ingredient: temp = ya + za;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1915/AbstractIntegerDistribution.java
Used ingredient: int m = 2 * k - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1916/AbstractIntegerDistribution.java
Used ingredient: temp = za + temp2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1917/AbstractIntegerDistribution.java
Used ingredient: temp = ya + baseA;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1918/AbstractIntegerDistribution.java
Used ingredient: temp = ya + baseB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1919/AbstractIntegerDistribution.java
Used ingredient: beta -= sum * sum;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1920/AbstractIntegerDistribution.java
Used ingredient: sum2 += sum * sum;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1921/AbstractIntegerDistribution.java
Used ingredient: temp = ya + recipb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1922/AbstractIntegerDistribution.java
Used ingredient: this.sigma = sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1923/AbstractIntegerDistribution.java
Used ingredient: * F(mu - k * sig) <= p,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1924/AbstractIntegerDistribution.java
Used ingredient: mu, mu + sigma, mu + 2 * sigma,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1925/AbstractIntegerDistribution.java
Used ingredient: mu + 2 * sigma, mu + 3 * sigma,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1926/AbstractIntegerDistribution.java
Used ingredient: mask  = mask >> scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1927/AbstractIntegerDistribution.java
Used ingredient: double t = t0 + i * h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1928/AbstractIntegerDistribution.java
Used ingredient: tmp = result[0] + zs[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1929/AbstractIntegerDistribution.java
Used ingredient: tmp = result[0] + zs[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1930/AbstractIntegerDistribution.java
Used ingredient: m2 = m1 + nvars - m - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1931/AbstractIntegerDistribution.java
Used ingredient: r[m2] = Y - X * r[m2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1932/AbstractIntegerDistribution.java
Used ingredient: mu + 4 * sigma, mu + 5 * sigma });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1933/AbstractIntegerDistribution.java
Used ingredient: if (x > mean - 2 * sigma) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1934/AbstractIntegerDistribution.java
Used ingredient: mu,             mu + sigma,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1935/AbstractIntegerDistribution.java
Used ingredient: f[i] = (i + 1) * sum - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1936/AbstractIntegerDistribution.java
Used ingredient: tmp[1] = tmp[0] * tmp[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1937/AbstractIntegerDistribution.java
Used ingredient: tmp[2] = tmp[0] * tmp[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1938/AbstractIntegerDistribution.java
Used ingredient: tmp[3] = tmp[0] * tmp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1939/AbstractIntegerDistribution.java
Used ingredient: tmp[4] = tmp[0] * tmp[3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1940/AbstractIntegerDistribution.java
Used ingredient: tmp[5] = tmp[0] * tmp[4];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1941/AbstractIntegerDistribution.java
Used ingredient: tmp[6] = tmp[0] * tmp[5];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1942/AbstractIntegerDistribution.java
Used ingredient: tmp[7] = tmp[0] * tmp[6];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1943/AbstractIntegerDistribution.java
Used ingredient: tmp[8] = tmp[0] * tmp[7];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1944/AbstractIntegerDistribution.java
Used ingredient: tmp[9] = tmp[0] * tmp[8];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1945/AbstractIntegerDistribution.java
Used ingredient: double temp = 10.0 * i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1946/AbstractIntegerDistribution.java
Used ingredient: double temp = 2 * tmp2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1947/AbstractIntegerDistribution.java
Used ingredient: split[0] = (d + a) - a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1948/AbstractIntegerDistribution.java
Used ingredient: omega2 = omega * omega;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1949/AbstractIntegerDistribution.java
Used ingredient: return tmp * tmp * tmp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1950/AbstractIntegerDistribution.java
Used ingredient: b = 1.0 + t * b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1951/AbstractIntegerDistribution.java
Used ingredient: q = 1.0 + t * q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1952/AbstractIntegerDistribution.java
Used ingredient: mp1 = m + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1953/AbstractIntegerDistribution.java
Used ingredient: ret = 1.0 - 0.5 * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1954/AbstractIntegerDistribution.java
Used ingredient: actRed = 1.0 - r * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1955/AbstractIntegerDistribution.java
Used ingredient: temp = ra + rb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1956/AbstractIntegerDistribution.java
Used ingredient: temp = ya + zb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1957/AbstractIntegerDistribution.java
Used ingredient: temp = za + yb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1958/AbstractIntegerDistribution.java
Used ingredient: temp = ya + rb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1959/AbstractIntegerDistribution.java
Used ingredient: temp = da + yb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1960/AbstractIntegerDistribution.java
Used ingredient: temp = ya + yb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1961/AbstractIntegerDistribution.java
Used ingredient: d.exp = (e + 1) / 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1962/AbstractIntegerDistribution.java
Used ingredient: p = p * x2 * x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1963/AbstractIntegerDistribution.java
Used ingredient: sum = sum + an;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1964/AbstractIntegerDistribution.java
Used ingredient: int i = n - k + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1965/AbstractIntegerDistribution.java
Used ingredient: d[m] = d1 * X * X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1966/AbstractIntegerDistribution.java
Used ingredient: xNorm  += xk * xk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1967/AbstractIntegerDistribution.java
Used ingredient: t = -t / V[k + 1][k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1968/AbstractIntegerDistribution.java
Used ingredient: m3 = m2 = m1 = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1969/AbstractIntegerDistribution.java
Used ingredient: norm2 += aki * aki;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1970/AbstractIntegerDistribution.java
Used ingredient: norm2 += akk * akk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1971/AbstractIntegerDistribution.java
Used ingredient: t *= temp * temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1972/AbstractIntegerDistribution.java
Used ingredient: lmNorm  += s * s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1973/AbstractIntegerDistribution.java
Used ingredient: y = yMax + small;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1974/AbstractIntegerDistribution.java
Used ingredient: temp = shs / stepsq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1975/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = 15 - i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1976/AbstractIntegerDistribution.java
Used ingredient: ya = y + tmp1 - tmp1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1977/AbstractIntegerDistribution.java
Used ingredient: gisq += sum * sum;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1978/AbstractIntegerDistribution.java
Used ingredient: beta[pk]     = betak;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1979/AbstractIntegerDistribution.java
Used ingredient: pos2 += nreq - k - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1980/AbstractIntegerDistribution.java
Used ingredient: h = h - ort[m] * g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1981/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1982/AbstractIntegerDistribution.java
Used ingredient: double temp = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1983/AbstractIntegerDistribution.java
Used ingredient: ort[m] = ort[m] - g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1984/AbstractIntegerDistribution.java
Used ingredient: distsq += tmp * tmp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1985/AbstractIntegerDistribution.java
Used ingredient: ya = aa + tmp - tmp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1986/AbstractIntegerDistribution.java
Used ingredient: t = costA * sinEpsA;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1987/AbstractIntegerDistribution.java
Used ingredient: accum3 += d * d * d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1988/AbstractIntegerDistribution.java
Used ingredient: s = s * s + shift.w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1989/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = i  + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1990/AbstractIntegerDistribution.java
Used ingredient: ya = y + temp - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1991/AbstractIntegerDistribution.java
Used ingredient: sum += value * value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1992/AbstractIntegerDistribution.java
Used ingredient: this.sign    = sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1993/AbstractIntegerDistribution.java
Used ingredient: return x * x + y * y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1994/AbstractIntegerDistribution.java
Used ingredient: //   N(x, mu, sigma)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1995/AbstractIntegerDistribution.java
Used ingredient: private double sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1996/AbstractIntegerDistribution.java
Used ingredient: double t  = 1 + 2 * sum / m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1997/AbstractIntegerDistribution.java
Used ingredient: rhs[mp1] = Y - X * rhs[mp1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1998/AbstractIntegerDistribution.java
Used ingredient: double temp= 2 * div * s2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/1999/AbstractIntegerDistribution.java
Used ingredient: m1 + sep + m2 + sep + m3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2000/AbstractIntegerDistribution.java
SuspiciousModificationPoint:             if (tmp < upper) {
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 137
Used ingredient: if (tmp > lower) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2001/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2001
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2001/AbstractIntegerDistribution.java
Used ingredient: if (x >= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2002/AbstractIntegerDistribution.java
Used ingredient: if (x > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2003/AbstractIntegerDistribution.java
Used ingredient: if (temp < stplen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2004/AbstractIntegerDistribution.java
Used ingredient: if (t < extremeT) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2005/AbstractIntegerDistribution.java
Used ingredient: if (temp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2006/AbstractIntegerDistribution.java
Used ingredient: if (top == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2007/AbstractIntegerDistribution.java
Used ingredient: if (nrt + 1 < p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2008/AbstractIntegerDistribution.java
Used ingredient: if (tmp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2009/AbstractIntegerDistribution.java
Used ingredient: if (tmp1 > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2010/AbstractIntegerDistribution.java
Used ingredient: if (temp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2011/AbstractIntegerDistribution.java
Used ingredient: if (m < p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2012/AbstractIntegerDistribution.java
Used ingredient: if (max < e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2013/AbstractIntegerDistribution.java
Used ingredient: if (nSteps < 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2014/AbstractIntegerDistribution.java
Used ingredient: if (nSteps < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2015/AbstractIntegerDistribution.java
Used ingredient: if (max < m[r]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2016/AbstractIntegerDistribution.java
Used ingredient: if (idxStep < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2017/AbstractIntegerDistribution.java
Used ingredient: if (lower >= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2018/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2018
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2018/AbstractIntegerDistribution.java
Used ingredient: if (x < lower) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2019/AbstractIntegerDistribution.java
Used ingredient: if (x <= lower) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2020/AbstractIntegerDistribution.java
Used ingredient: if (tempa <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2021/AbstractIntegerDistribution.java
Used ingredient: if (stplen < blen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2022/AbstractIntegerDistribution.java
Used ingredient: if (t <= updates[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2023/AbstractIntegerDistribution.java
Used ingredient: if (column < row) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2024/AbstractIntegerDistribution.java
Used ingredient: if (extremeT < t) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2025/AbstractIntegerDistribution.java
Used ingredient: if (step < minStep) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2026/AbstractIntegerDistribution.java
Used ingredient: if (cmp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2027/AbstractIntegerDistribution.java
Used ingredient: if (comp >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2028/AbstractIntegerDistribution.java
Used ingredient: if (cmp0 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2029/AbstractIntegerDistribution.java
Used ingredient: if (mu < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2030/AbstractIntegerDistribution.java
Used ingredient: if (sigma <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2031/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2031
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2031/AbstractIntegerDistribution.java
Used ingredient: if (u > p1 + p2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2032/AbstractIntegerDistribution.java
Used ingredient: if (t == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2033/AbstractIntegerDistribution.java
Used ingredient: if (m != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2034/AbstractIntegerDistribution.java
Used ingredient: if (m == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2035/AbstractIntegerDistribution.java
Used ingredient: if (p1 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2036/AbstractIntegerDistribution.java
Used ingredient: if (im == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2037/AbstractIntegerDistribution.java
Used ingredient: if (p2 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2038/AbstractIntegerDistribution.java
Used ingredient: if (ret != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2039/AbstractIntegerDistribution.java
Used ingredient: if (num == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2040/AbstractIntegerDistribution.java
Used ingredient: if (cut != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2041/AbstractIntegerDistribution.java
Used ingredient: if (cut == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2042/AbstractIntegerDistribution.java
Used ingredient: if (pc3 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2043/AbstractIntegerDistribution.java
Used ingredient: if (p <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2044/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2044
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2044/AbstractIntegerDistribution.java
Used ingredient: if (p <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2045/AbstractIntegerDistribution.java
Used ingredient: if (tS <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2046/AbstractIntegerDistribution.java
Used ingredient: if (u <= p1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2047/AbstractIntegerDistribution.java
Used ingredient: if (max <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2048/AbstractIntegerDistribution.java
Used ingredient: if (im < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2049/AbstractIntegerDistribution.java
Used ingredient: if (m < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2050/AbstractIntegerDistribution.java
Used ingredient: if (beta <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2051/AbstractIntegerDistribution.java
Used ingredient: if (mean <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2052/AbstractIntegerDistribution.java
Used ingredient: if (x < mu) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2053/AbstractIntegerDistribution.java
Used ingredient: r <= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2054/AbstractIntegerDistribution.java
Used ingredient: if (pCrit <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2055/AbstractIntegerDistribution.java
Used ingredient: if (shape <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2056/AbstractIntegerDistribution.java
Used ingredient: if (shape <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2057/AbstractIntegerDistribution.java
Used ingredient: if (alpha <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2058/AbstractIntegerDistribution.java
Used ingredient: if (min > e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2059/AbstractIntegerDistribution.java
Used ingredient: if (pm >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2060/AbstractIntegerDistribution.java
Used ingredient: if (sum < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2061/AbstractIntegerDistribution.java
Used ingredient: if (lambda <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2062/AbstractIntegerDistribution.java
Used ingredient: if (sum >= r) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2063/AbstractIntegerDistribution.java
Used ingredient: if (comp > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2064/AbstractIntegerDistribution.java
Used ingredient: if (x < scale) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2065/AbstractIntegerDistribution.java
Used ingredient: if (from < to) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2066/AbstractIntegerDistribution.java
Used ingredient: if (count < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2067/AbstractIntegerDistribution.java
Used ingredient: if (u2 < umin) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2068/AbstractIntegerDistribution.java
Used ingredient: if (min > m[r]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2069/AbstractIntegerDistribution.java
Used ingredient: if (x <= scale) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2070/AbstractIntegerDistribution.java
Used ingredient: if (swapR != r) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2071/AbstractIntegerDistribution.java
Used ingredient: if (shape <= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2072/AbstractIntegerDistribution.java
Used ingredient: if (minPts < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2073/AbstractIntegerDistribution.java
Used ingredient: if (term[0] > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2074/AbstractIntegerDistribution.java
Used ingredient: if (dnorm > rho) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2075/AbstractIntegerDistribution.java
Used ingredient: if (current < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2076/AbstractIntegerDistribution.java
Used ingredient: if (columns < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2077/AbstractIntegerDistribution.java
Used ingredient: if (maxTime < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2078/AbstractIntegerDistribution.java
Used ingredient: if (end < start) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2079/AbstractIntegerDistribution.java
Used ingredient: if (endTime < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2080/AbstractIntegerDistribution.java
Used ingredient: if (p < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2081/AbstractIntegerDistribution.java
Used ingredient: if (t < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2082/AbstractIntegerDistribution.java
Used ingredient: if (p < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2083/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2083
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2083/AbstractIntegerDistribution.java
Used ingredient: if (p < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2084/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2084
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2084/AbstractIntegerDistribution.java
Used ingredient: if (det < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2085/AbstractIntegerDistribution.java
Used ingredient: if (eps < 0.0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2086/AbstractIntegerDistribution.java
Used ingredient: if (p < 0.1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2087/AbstractIntegerDistribution.java
Used ingredient: if (nct < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2088/AbstractIntegerDistribution.java
Used ingredient: if (exp < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2089/AbstractIntegerDistribution.java
Used ingredient: if (pos < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2090/AbstractIntegerDistribution.java
Used ingredient: if (k < nrt) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2091/AbstractIntegerDistribution.java
Used ingredient: if (i < npt) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2092/AbstractIntegerDistribution.java
Used ingredient: if (beta < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2093/AbstractIntegerDistribution.java
Used ingredient: if (t < -0.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2094/AbstractIntegerDistribution.java
Used ingredient: if (bits < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2095/AbstractIntegerDistribution.java
Used ingredient: if (xInt < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2096/AbstractIntegerDistribution.java
Used ingredient: if (yInt < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2097/AbstractIntegerDistribution.java
Used ingredient: if (f < fopt) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2098/AbstractIntegerDistribution.java
Used ingredient: if (beta < 0.) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2099/AbstractIntegerDistribution.java
Used ingredient: if (shape < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2100/AbstractIntegerDistribution.java
SuspiciousModificationPoint:                 upper = ((int) Math.ceil(tmp)) - 1;
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 138
Used ingredient: lower = ((int) Math.ceil(tmp)) - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2101/AbstractIntegerDistribution.java
Used ingredient: int k = (int) Math.ceil(n * d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2102/AbstractIntegerDistribution.java
Used ingredient: final int k = (int) Math.ceil(n * d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2103/AbstractIntegerDistribution.java
Used ingredient: ret = ((x + .5) * FastMath.log(tmp)) - tmp +
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2104/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = FastMath.exp(tmp1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2105/AbstractIntegerDistribution.java
Used ingredient: double ti   = FastMath.sin(temp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2106/AbstractIntegerDistribution.java
Used ingredient: double c = FastMath.exp (t0 - t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2107/AbstractIntegerDistribution.java
Used ingredient: unscaled = FastMath.ceil(unscaled);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2108/AbstractIntegerDistribution.java
Used ingredient: quadrant = ((int) reduceResults[0]) & 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2109/AbstractIntegerDistribution.java
Used ingredient: double n = (int) FastMath.floor((t1 - t0) / h);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2110/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = FastMath.exp(-temp * x4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2111/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = FastMath.exp(-temp * x5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2112/AbstractIntegerDistribution.java
Used ingredient: index = (int) FastMath.rint(iLagrange);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2113/AbstractIntegerDistribution.java
Used ingredient: -tmp * FastMath.exp(-tmp * x1),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2114/AbstractIntegerDistribution.java
Used ingredient: return upper - FastMath.exp(-y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2115/AbstractIntegerDistribution.java
Used ingredient: ret = FastMath.exp(p1 + p2 - p3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2116/AbstractIntegerDistribution.java
Used ingredient: double esta = (est + temp) - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2117/AbstractIntegerDistribution.java
Used ingredient: final int num = (int) data.getN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2118/AbstractIntegerDistribution.java
Used ingredient: double sin = FastMath.sin(t + a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2119/AbstractIntegerDistribution.java
Used ingredient: double sqrt = FastMath.sqrt(2) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2120/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2120
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2120/AbstractIntegerDistribution.java
Used ingredient: double cos = FastMath.cos(t + a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2121/AbstractIntegerDistribution.java
Used ingredient: final int n = (int) FastMath.floor(a - 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2122/AbstractIntegerDistribution.java
Used ingredient: final int n = (int) FastMath.floor(x - 1.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2123/AbstractIntegerDistribution.java
Used ingredient: final int len = ((int) (max - min)) + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2124/AbstractIntegerDistribution.java
Used ingredient: int k = ((int) (exponent >> 52)) - 1075;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2125/AbstractIntegerDistribution.java
Used ingredient: expected = Math.abs(period) - delta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2126/AbstractIntegerDistribution.java
Used ingredient: ret = -mean * FastMath.log(1.0 - p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2127/AbstractIntegerDistribution.java
Used ingredient: double temp2 = (sinEpsA + temp) - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2128/AbstractIntegerDistribution.java
Used ingredient: temp = Math.sqrt(temp) - s.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2129/AbstractIntegerDistribution.java
Used ingredient: final int nct = FastMath.min(m - 1, n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2130/AbstractIntegerDistribution.java
Used ingredient: return (int) ((m >> (k - e)) & 0x1L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2131/AbstractIntegerDistribution.java
Used ingredient: double sin = FastMath.sin(omega * t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2132/AbstractIntegerDistribution.java
Used ingredient: double cos = FastMath.cos(omega * t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2133/AbstractIntegerDistribution.java
Used ingredient: int iMax = steps.size() - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2134/AbstractIntegerDistribution.java
Used ingredient: step = Math.sqrt(tmp1 / ggfree);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2135/AbstractIntegerDistribution.java
Used ingredient: tmp * FastMath.exp(-tmp * x2),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2136/AbstractIntegerDistribution.java
Used ingredient: double ra = ratio + temp - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2137/AbstractIntegerDistribution.java
Used ingredient: return -FastMath.log(upper - x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2138/AbstractIntegerDistribution.java
Used ingredient: ret = FastMath.pow(1 - p, x) * p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2139/AbstractIntegerDistribution.java
Used ingredient: done = tmp1.compareTo(tmp2) <= 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2140/AbstractIntegerDistribution.java
Used ingredient: iu = (int) (angbd * 17. + 3.1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2141/AbstractIntegerDistribution.java
Used ingredient: crvmin = Math.min(crvmin,temp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2142/AbstractIntegerDistribution.java
Used ingredient: paru = FastMath.min(paru, lmPar);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2143/AbstractIntegerDistribution.java
Used ingredient: double diff = FastMath.abs(a - b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2144/AbstractIntegerDistribution.java
Used ingredient: double x = Math.random() * 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2145/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2145
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2145/AbstractIntegerDistribution.java
Used ingredient: sum += FastMath.abs(p1[i] - p2[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2146/AbstractIntegerDistribution.java
Used ingredient: final int c = MathUtils.hash(comp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2147/AbstractIntegerDistribution.java
Used ingredient: double r = FastMath.sqrt(2) /2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2148/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2148
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2148/AbstractIntegerDistribution.java
Used ingredient: ret = n * FastMath.log(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2149/AbstractIntegerDistribution.java
Used ingredient: y = FastMath.ceil(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2150/AbstractIntegerDistribution.java
Used ingredient: double f0 = FastMath.sin(x / a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2151/AbstractIntegerDistribution.java
Used ingredient: double refExp = FastMath.exp(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2152/AbstractIntegerDistribution.java
Used ingredient: x += StrictMath.exp(100 * i * F1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2153/AbstractIntegerDistribution.java
Used ingredient: double fpos = FastMath.floor(pos);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2154/AbstractIntegerDistribution.java
Used ingredient: expected = new Decimal64((-X) - Y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2155/AbstractIntegerDistribution.java
Used ingredient: double sine = FastMath.sin(omegaX);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2156/AbstractIntegerDistribution.java
Used ingredient: norm += FastMath.abs(e.getValue());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2157/AbstractIntegerDistribution.java
Used ingredient: double ref = FastMath.toDegrees(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2158/AbstractIntegerDistribution.java
Used ingredient: double gNorm = FastMath.sqrt(sum2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2159/AbstractIntegerDistribution.java
Used ingredient: return FastMath.ceil(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2160/AbstractIntegerDistribution.java
Used ingredient: expected += FastMath.abs(delta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2161/AbstractIntegerDistribution.java
Used ingredient: double cosPhi = FastMath.cos(phi);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2162/AbstractIntegerDistribution.java
Used ingredient: ret = -0.5 * FastMath.log(f) + ret;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2163/AbstractIntegerDistribution.java
Used ingredient: x += StrictMath.cbrt(100 * i * F1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2164/AbstractIntegerDistribution.java
Used ingredient: expReal * FastMath.sin(imaginary));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2165/AbstractIntegerDistribution.java
Used ingredient: double sPar = FastMath.sqrt(lmPar);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2166/AbstractIntegerDistribution.java
Used ingredient: double ref = FastMath.toRadians(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2167/AbstractIntegerDistribution.java
Used ingredient: double tmp1 = FastMath.exp(-x05 * temp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2168/AbstractIntegerDistribution.java
Used ingredient: ret = x * FastMath.log(x / mu) + mu - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2169/AbstractIntegerDistribution.java
Used ingredient: int result = (int) (nextDouble() * n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2170/AbstractIntegerDistribution.java
Used ingredient: double dfdx = FastMath.cos(x / a) / a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2171/AbstractIntegerDistribution.java
Used ingredient: double sinTheta = FastMath.sin(theta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2172/AbstractIntegerDistribution.java
Used ingredient: double cosDelta = FastMath.cos(delta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2173/AbstractIntegerDistribution.java
Used ingredient: double xk  = inv / FastMath.log(10.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2174/AbstractIntegerDistribution.java
Used ingredient: double ratioa = ratio + temp - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2175/AbstractIntegerDistribution.java
Used ingredient: double recipa = recip + temp - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2176/AbstractIntegerDistribution.java
Used ingredient: double cosaa = (cosa + temp) - temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2177/AbstractIntegerDistribution.java
Used ingredient: minX = FastMath.min(minX, p.getX());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2178/AbstractIntegerDistribution.java
Used ingredient: final double a = FastMath.min(p, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2179/AbstractIntegerDistribution.java
Used ingredient: return FastMath.asin(z / getNorm());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2180/AbstractIntegerDistribution.java
Used ingredient: return FastMath.abs(getQ0()) <= eps;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2181/AbstractIntegerDistribution.java
Used ingredient: double expReal = FastMath.exp(real);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2182/AbstractIntegerDistribution.java
Used ingredient: delta = FastMath.min(delta, lmNorm);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2183/AbstractIntegerDistribution.java
Used ingredient: final double b = FastMath.nextUp(a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2184/AbstractIntegerDistribution.java
Used ingredient: final double c = FastMath.nextUp(b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2185/AbstractIntegerDistribution.java
Used ingredient: double h = FastMath.sqrt(3.0) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2186/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2186
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2186/AbstractIntegerDistribution.java
Used ingredient: lambda = 4 + (int) (3 * Math.log(dimension));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2187/AbstractIntegerDistribution.java
Used ingredient: final double v = a * (FastMath.log(b) - 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2188/AbstractIntegerDistribution.java
Used ingredient: final double cosT = FastMath.cos(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2189/AbstractIntegerDistribution.java
Used ingredient: final double sinT = FastMath.sin(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2190/AbstractIntegerDistribution.java
Used ingredient: long a0 = (long) FastMath.floor(r0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2191/AbstractIntegerDistribution.java
Used ingredient: weightMatrix = ((Weight) data).getWeight();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2192/AbstractIntegerDistribution.java
Used ingredient: return new Decimal64(FastMath.ceil(value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2193/AbstractIntegerDistribution.java
Used ingredient: final int bound = (int) FastMath.sqrt(n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2194/AbstractIntegerDistribution.java
Used ingredient: temp = Math.sqrt(temp) + s.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2195/AbstractIntegerDistribution.java
Used ingredient: double tmp2 = FastMath.sqrt(tmpSquare);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2196/AbstractIntegerDistribution.java
Used ingredient: inputSigma = ((Sigma) data).getSigma();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2197/AbstractIntegerDistribution.java
Used ingredient: final double r = (1L << (2 * j)) - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2198/AbstractIntegerDistribution.java
Used ingredient: double s = (shift.y - shift.x) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2199/AbstractIntegerDistribution.java
Used ingredient: target = ((Target) data).getTarget();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2200/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         final double mu = getNumericalMean();
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 125
Used ingredient: final double mn = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2201/AbstractIntegerDistribution.java
Used ingredient: final double meanX = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2202/AbstractIntegerDistribution.java
Used ingredient: final double m = getNumberOfSuccesses();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2203/AbstractIntegerDistribution.java
Used ingredient: final double mid = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2204/AbstractIntegerDistribution.java
Used ingredient: final double[] mean = mvn.getMeans();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2205/AbstractIntegerDistribution.java
Used ingredient: final double m = getMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2206/AbstractIntegerDistribution.java
Used ingredient: final double[] m = d.getMeans();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2207/AbstractIntegerDistribution.java
Used ingredient: public double getNumericalMean() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2208/AbstractIntegerDistribution.java
Used ingredient: final double r = getNumberOfSuccesses();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2209/AbstractIntegerDistribution.java
Used ingredient: final double n = getSampleSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2210/AbstractIntegerDistribution.java
Used ingredient: final double value = iter.value();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2211/AbstractIntegerDistribution.java
Used ingredient: final double N = getPopulationSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2212/AbstractIntegerDistribution.java
Used ingredient: final double sc = getScale();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2213/AbstractIntegerDistribution.java
Used ingredient: final double value = e.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2214/AbstractIntegerDistribution.java
Used ingredient: final double sP = q.getScalarPart();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2215/AbstractIntegerDistribution.java
Used ingredient: final double[] min = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2216/AbstractIntegerDistribution.java
Used ingredient: double getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2217/AbstractIntegerDistribution.java
Used ingredient: final double[] uB = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2218/AbstractIntegerDistribution.java
Used ingredient: final double[] max = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2219/AbstractIntegerDistribution.java
Used ingredient: final double value = iterator.value();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2220/AbstractIntegerDistribution.java
Used ingredient: final double b = getValidUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2221/AbstractIntegerDistribution.java
Used ingredient: final double a = getValidLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2222/AbstractIntegerDistribution.java
Used ingredient: final double norm = normal.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2223/AbstractIntegerDistribution.java
Used ingredient: final double sum = data.getSum();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2224/AbstractIntegerDistribution.java
Used ingredient: final double c = current.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2225/AbstractIntegerDistribution.java
Used ingredient: final double sumsq = data.getSumsq();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2226/AbstractIntegerDistribution.java
Used ingredient: final double t0 = t.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2227/AbstractIntegerDistribution.java
Used ingredient: final double norm = q.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2228/AbstractIntegerDistribution.java
Used ingredient: final double rnorm = r.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2229/AbstractIntegerDistribution.java
Used ingredient: final double vNorm = v.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2230/AbstractIntegerDistribution.java
Used ingredient: final double x = t.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2231/AbstractIntegerDistribution.java
Used ingredient: final double p = sample.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2232/AbstractIntegerDistribution.java
Used ingredient: final double xr = x[j].getReal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2233/AbstractIntegerDistribution.java
Used ingredient: final double c = divisor.getReal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2234/AbstractIntegerDistribution.java
Used ingredient: final double[] y = value[i].clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2235/AbstractIntegerDistribution.java
Used ingredient: final double p = previous.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2236/AbstractIntegerDistribution.java
Used ingredient: final double u = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2237/AbstractIntegerDistribution.java
Used ingredient: final double[] x = createRealData(n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2238/AbstractIntegerDistribution.java
Used ingredient: final double norm = getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2239/AbstractIntegerDistribution.java
Used ingredient: final double max = getMax();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2240/AbstractIntegerDistribution.java
Used ingredient: final double min = getMin();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2241/AbstractIntegerDistribution.java
Used ingredient: final double actual = v.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2242/AbstractIntegerDistribution.java
Used ingredient: final double v1 = o1.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2243/AbstractIntegerDistribution.java
Used ingredient: final double v2 = o2.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2244/AbstractIntegerDistribution.java
Used ingredient: final double[][] out = m.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2245/AbstractIntegerDistribution.java
Used ingredient: final double w = getWeight(iMax);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2246/AbstractIntegerDistribution.java
Used ingredient: final double[] v = super.getValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2247/AbstractIntegerDistribution.java
Used ingredient: final double actual = v.getL1Norm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2248/AbstractIntegerDistribution.java
Used ingredient: final double[][] suT = uT.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2249/AbstractIntegerDistribution.java
Used ingredient: final double[] lB = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2250/AbstractIntegerDistribution.java
Used ingredient: final double mse = getMeanSquareError();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2251/AbstractIntegerDistribution.java
Used ingredient: final double initial = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2252/AbstractIntegerDistribution.java
Used ingredient: final double[] guess = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2253/AbstractIntegerDistribution.java
Used ingredient: final double t = getAbsoluteAccuracy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2254/AbstractIntegerDistribution.java
Used ingredient: final double[] init = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2255/AbstractIntegerDistribution.java
Used ingredient: final double e = exponential.sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2256/AbstractIntegerDistribution.java
Used ingredient: final double entry = getEntry(i, col);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2257/AbstractIntegerDistribution.java
Used ingredient: final double t = readBaseExternal(in);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2258/AbstractIntegerDistribution.java
Used ingredient: final double u2 = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2259/AbstractIntegerDistribution.java
Used ingredient: final double actual = v.getLInfNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2260/AbstractIntegerDistribution.java
Used ingredient: final double xi = x[j].getImaginary();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2261/AbstractIntegerDistribution.java
Used ingredient: final double[] vP = q.getVectorPart();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2262/AbstractIntegerDistribution.java
Used ingredient: public double getNumericalVariance() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2263/AbstractIntegerDistribution.java
Used ingredient: final double tol = getRelativeTolerance(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2264/AbstractIntegerDistribution.java
Used ingredient: final double nthPhi = getArgument() / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2265/AbstractIntegerDistribution.java
Used ingredient: final double[] params = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2266/AbstractIntegerDistribution.java
Used ingredient: final double comp = rand.nextGaussian();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2267/AbstractIntegerDistribution.java
Used ingredient: final double s = getStandardDeviation();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2268/AbstractIntegerDistribution.java
Used ingredient: final double[] value = pv.getValueRef();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2269/AbstractIntegerDistribution.java
Used ingredient: final double diff = getMax() - min;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2270/AbstractIntegerDistribution.java
Used ingredient: final double n = normal.getNorm();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2271/AbstractIntegerDistribution.java
Used ingredient: final double curN = current.getN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2272/AbstractIntegerDistribution.java
Used ingredient: final double[] point = p.getPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2273/AbstractIntegerDistribution.java
Used ingredient: final double iV = md.illumination();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2274/AbstractIntegerDistribution.java
Used ingredient: * used by {@link #getNumericalMean()}
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2275/AbstractIntegerDistribution.java
Used ingredient: final double v = sinc.value(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2276/AbstractIntegerDistribution.java
Used ingredient: final double x = rand.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2277/AbstractIntegerDistribution.java
Used ingredient: final double r = 1.0 / determinant;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2278/AbstractIntegerDistribution.java
Used ingredient: final double[] target = getTarget();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2279/AbstractIntegerDistribution.java
Used ingredient: final double sol = result.getPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2280/AbstractIntegerDistribution.java
Used ingredient: final double n = random.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2281/AbstractIntegerDistribution.java
Used ingredient: final double sh = getShape();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2282/AbstractIntegerDistribution.java
Used ingredient: final double p = getPoint(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2283/AbstractIntegerDistribution.java
Used ingredient: final double y = nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2284/AbstractIntegerDistribution.java
Used ingredient: final double x = nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2285/AbstractIntegerDistribution.java
Used ingredient: final double hi = getMax();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2286/AbstractIntegerDistribution.java
Used ingredient: final double lo = getMin();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2287/AbstractIntegerDistribution.java
Used ingredient: final double w = getWeight(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2288/AbstractIntegerDistribution.java
Used ingredient: final double[][] x = b.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2289/AbstractIntegerDistribution.java
Used ingredient: final double size1 = o1.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2290/AbstractIntegerDistribution.java
Used ingredient: final double size2 = o2.getSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2291/AbstractIntegerDistribution.java
Used ingredient: final int N = getNumberOfElements();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2292/AbstractIntegerDistribution.java
Used ingredient: final double b1 = getSlope();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2293/AbstractIntegerDistribution.java
Used ingredient: final double s = getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2294/AbstractIntegerDistribution.java
Used ingredient: final double b = getBeta();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2295/AbstractIntegerDistribution.java
Used ingredient: final double a = getAlpha();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2296/AbstractIntegerDistribution.java
Used ingredient: final double pBminus = pBminus(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2297/AbstractIntegerDistribution.java
Used ingredient: double getNumericalVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2298/AbstractIntegerDistribution.java
Used ingredient: final double actual = x.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2299/AbstractIntegerDistribution.java
Used ingredient: final double actual = px.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2300/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         final double sigma = FastMath.sqrt(getNumericalVariance());
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 126
Used ingredient: final double sig = FastMath.sqrt(getNumericalVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2301/AbstractIntegerDistribution.java
Used ingredient: double sigma = FastMath.sqrt(covarianceMatrix.getEntry(i, i));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2302/AbstractIntegerDistribution.java
Used ingredient: final double c = FastMath.sqrt(getChiSquare() / (rows - cols));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2303/AbstractIntegerDistribution.java
Used ingredient: final double factor = FastMath.sqrt(covMatEigenvalues[row]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2304/AbstractIntegerDistribution.java
Used ingredient: final double error = FastMath.sqrt(expectedCovarMatrix[i][i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2305/AbstractIntegerDistribution.java
Used ingredient: final double gamma = FastMath.sqrt(gbar * gbar + oldb * oldb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2306/AbstractIntegerDistribution.java
Used ingredient: final double a = FastMath.cos(xTimesOmegaPlusPhase);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2307/AbstractIntegerDistribution.java
Used ingredient: final double dt = FastMath.abs(equations.getTime() - t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2308/AbstractIntegerDistribution.java
Used ingredient: final double r      = FastMath.sqrt(-2 * FastMath.log(y));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2309/AbstractIntegerDistribution.java
Used ingredient: final double epsilon = FastMath.max(solver.getAbsoluteAccuracy(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2310/AbstractIntegerDistribution.java
Used ingredient: final double exp = FastMath.exp(-t.getValue());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2311/AbstractIntegerDistribution.java
Used ingredient: final double lambda = FastMath.floor(meanPoisson);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2312/AbstractIntegerDistribution.java
Used ingredient: final double sqrt = FastMath.sqrt(c[ir][ir]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2313/AbstractIntegerDistribution.java
Used ingredient: final double t = FastMath.tan(operand[operandOffset]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2314/AbstractIntegerDistribution.java
Used ingredient: double result = FastMath.sqrt(getRSquare());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2315/AbstractIntegerDistribution.java
Used ingredient: final double t = FastMath.tanh(operand[operandOffset]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2316/AbstractIntegerDistribution.java
Used ingredient: final double s = FastMath.sqrt(2.0 / (f.length - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2317/AbstractIntegerDistribution.java
Used ingredient: double stdDev = FastMath.sqrt(variance.getResult());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2318/AbstractIntegerDistribution.java
Used ingredient: final double logn = FastMath.log(numeratorDegreesOfFreedom);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2319/AbstractIntegerDistribution.java
Used ingredient: final double meanX = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2320/AbstractIntegerDistribution.java
Used ingredient: final double sin = FastMath.sin(scaledX);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2321/AbstractIntegerDistribution.java
Used ingredient: final double anorm = FastMath.sqrt(tnorm);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2322/AbstractIntegerDistribution.java
Used ingredient: final double sqrtTol = FastMath.sqrt(tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2323/AbstractIntegerDistribution.java
Used ingredient: final double sinTheta = FastMath.sin(theta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2324/AbstractIntegerDistribution.java
Used ingredient: final double safety = FastMath.ulp(halfSampleSpan);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2325/AbstractIntegerDistribution.java
Used ingredient: final double s = FastMath.sqrt(2.0 / f.length);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2326/AbstractIntegerDistribution.java
Used ingredient: double sigma = FastMath.sqrt(mean);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2327/AbstractIntegerDistribution.java
Used ingredient: final double z = (Umin - EU) / FastMath.sqrt(VarU);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2328/AbstractIntegerDistribution.java
Used ingredient: final double err = FastMath.abs(actual - expected);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2329/AbstractIntegerDistribution.java
Used ingredient: final double scaleFactor = 1.0 / FastMath.sqrt(n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2330/AbstractIntegerDistribution.java
Used ingredient: final double xscalepow = FastMath.pow(xscale, shape - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2331/AbstractIntegerDistribution.java
Used ingredient: final double z = (Wmin - ES - 0.5) / FastMath.sqrt(VarS);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2332/AbstractIntegerDistribution.java
Used ingredient: protected double weightedStd = FastMath.sqrt(weightedVar);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2333/AbstractIntegerDistribution.java
Used ingredient: final double distB = FastMath.abs(distance(point, c.getCenter()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2334/AbstractIntegerDistribution.java
Used ingredient: final double step = FastMath.max(bracketing.getAbsoluteAccuracy(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2335/AbstractIntegerDistribution.java
Used ingredient: final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2336/AbstractIntegerDistribution.java
Used ingredient: final double[] w = new double[dataset.getNumObservations()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2337/AbstractIntegerDistribution.java
Used ingredient: final double tolerance = FastMath.max(solver.getAbsoluteAccuracy(),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2338/AbstractIntegerDistribution.java
Used ingredient: final double factor = 1 / (sigma * FastMath.sqrt(2 * FastMath.PI));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2339/AbstractIntegerDistribution.java
Used ingredient: final double logm = FastMath.log(denominatorDegreesOfFreedom);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2340/AbstractIntegerDistribution.java
Used ingredient: final double e = 0.5 * FastMath.sqrt (((double) (i + 1)) / ip5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2341/AbstractIntegerDistribution.java
Used ingredient: final double sqrtTwoTimesNumPoints = FastMath.sqrt(2 * numberOfPoints);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2342/AbstractIntegerDistribution.java
Used ingredient: final double mn = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2343/AbstractIntegerDistribution.java
Used ingredient: final double sm = FastMath.sqrt(j / jp1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2344/AbstractIntegerDistribution.java
Used ingredient: final double cos = FastMath.cos(scaledX);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2345/AbstractIntegerDistribution.java
Used ingredient: final double medianEval = stat[1].getPercentile(50);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2346/AbstractIntegerDistribution.java
Used ingredient: final double ynorm = FastMath.sqrt(ynorm2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2347/AbstractIntegerDistribution.java
Used ingredient: final double cosTheta = FastMath.cos(theta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2348/AbstractIntegerDistribution.java
Used ingredient: final double logLambda = FastMath.log(lambda);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2349/AbstractIntegerDistribution.java
Used ingredient: final double inv = 1.0 / FastMath.sqrt(norm2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2350/AbstractIntegerDistribution.java
Used ingredient: final double t = qtrap.stage(this, iterations.getCount());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2351/AbstractIntegerDistribution.java
Used ingredient: final double expected = dataset.getResidualSumOfSquares();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2352/AbstractIntegerDistribution.java
Used ingredient: final double pow = FastMath.pow(stepControl3, exp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2353/AbstractIntegerDistribution.java
Used ingredient: final double s = FastMath.abs(x) + FastMath.abs(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2354/AbstractIntegerDistribution.java
Used ingredient: final double delta = tol * FastMath.abs(expected[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2355/AbstractIntegerDistribution.java
Used ingredient: final double oneOverSqrtPi = 1 / FastMath.sqrt(Math.PI);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2356/AbstractIntegerDistribution.java
Used ingredient: final double twoOverSqrtPi = 2 / FastMath.sqrt(Math.PI);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2357/AbstractIntegerDistribution.java
Used ingredient: double omega = -FastMath.log(generator.nextDouble());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2358/AbstractIntegerDistribution.java
Used ingredient: stdDev = FastMath.sqrt(getVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2359/AbstractIntegerDistribution.java
Used ingredient: result[i] = FastMath.sqrt(sigma * betaVariance[i][i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2360/AbstractIntegerDistribution.java
Used ingredient: final double mu = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2361/AbstractIntegerDistribution.java
Used ingredient: final double expected = FastMath.sqrt(dataset.getResidualSumOfSquares() /
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2362/AbstractIntegerDistribution.java
Used ingredient: final double denom = FastMath.abs(a[i]) + FastMath.abs(b[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2363/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(Double.isNaN(dist.getNumericalVariance()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2364/AbstractIntegerDistribution.java
Used ingredient: final double sqrtTwoTimesLastNumPoints = FastMath.sqrt(2 * lastNumPoints);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2365/AbstractIntegerDistribution.java
Used ingredient: final double sinT = FastMath.sin(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2366/AbstractIntegerDistribution.java
Used ingredient: final double sqrtX = FastMath.sqrt(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2367/AbstractIntegerDistribution.java
Used ingredient: final double s3  = FastMath.sqrt(3.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2368/AbstractIntegerDistribution.java
Used ingredient: final double s14 = FastMath.sqrt(14.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2369/AbstractIntegerDistribution.java
Used ingredient: final double s17 = FastMath.sqrt(17.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2370/AbstractIntegerDistribution.java
Used ingredient: final double s = FastMath.sqrt(2 / jp1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2371/AbstractIntegerDistribution.java
Used ingredient: final double sqrtTwo = FastMath.sqrt(2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2372/AbstractIntegerDistribution.java
Used ingredient: final double rho  = FastMath.sqrt(rho2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2373/AbstractIntegerDistribution.java
Used ingredient: final double pertm = FastMath.abs(pertbn);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2374/AbstractIntegerDistribution.java
Used ingredient: final double sinPhi   = FastMath.sin(phi);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2375/AbstractIntegerDistribution.java
Used ingredient: final double sLat = FastMath.sin(point[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2376/AbstractIntegerDistribution.java
Used ingredient: final double rho    = FastMath.sqrt(rho2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2377/AbstractIntegerDistribution.java
Used ingredient: final double f = 1 / FastMath.sqrt(normSq);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2378/AbstractIntegerDistribution.java
Used ingredient: final double s1553 = FastMath.sqrt(1553.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2379/AbstractIntegerDistribution.java
Used ingredient: final double ulps = err / FastMath.ulp(expected);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2380/AbstractIntegerDistribution.java
Used ingredient: final double c = 1 / (3 * FastMath.sqrt(d));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2381/AbstractIntegerDistribution.java
Used ingredient: final double oldSd = statOld.getStandardDeviation();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2382/AbstractIntegerDistribution.java
Used ingredient: final double min = Math.min(upperDifference.getEntry(i),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2383/AbstractIntegerDistribution.java
Used ingredient: final double newSd = statNewOF.getStandardDeviation();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2384/AbstractIntegerDistribution.java
Used ingredient: final double[] sqrtDiagC = sqrt(diagC).getColumn(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2385/AbstractIntegerDistribution.java
Used ingredient: final double pY = cY.sample() + radius * FastMath.sin(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2386/AbstractIntegerDistribution.java
Used ingredient: final double fPrime = f.derivative().value(t.getValue());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2387/AbstractIntegerDistribution.java
Used ingredient: final double[] initial = dataset.getStartingPoint(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2388/AbstractIntegerDistribution.java
Used ingredient: final double current  = lastInterpolator.getCurrentTime();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2389/AbstractIntegerDistribution.java
Used ingredient: final double newSd = statNewNoOF.getStandardDeviation();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2390/AbstractIntegerDistribution.java
Used ingredient: final double difference = FastMath.abs(pi - ci);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2391/AbstractIntegerDistribution.java
Used ingredient: final double dist = distance(point, cluster.getCenter());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2392/AbstractIntegerDistribution.java
Used ingredient: final double distance = distance(point, c.getCenter());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2393/AbstractIntegerDistribution.java
Used ingredient: final double negcovMax = (1 - negminresidualvariance) /
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2394/AbstractIntegerDistribution.java
Used ingredient: final double previous = lastInterpolator.getPreviousTime();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2395/AbstractIntegerDistribution.java
Used ingredient: final double distance = point.distanceFrom(c.getCenter());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2396/AbstractIntegerDistribution.java
Used ingredient: final double t = FastMath.abs(t(m1, m2, v1, v2, n1, n2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2397/AbstractIntegerDistribution.java
Used ingredient: private static final double sqrt5  = FastMath.sqrt( 5.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2398/AbstractIntegerDistribution.java
Used ingredient: private static final double sqrt10 = FastMath.sqrt(10.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2399/AbstractIntegerDistribution.java
Used ingredient: double inverse = 1 / FastMath.sqrt(squaredSine);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2400/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         final boolean chebyshevApplies = !(Double.isInfinite(mu) || Double.isNaN(mu) ||
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 127
Used ingredient: chebyshevApplies = !(Double.isInfinite(mu) || Double.isNaN(mu) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2401/AbstractIntegerDistribution.java
Used ingredient: if (Double.isInfinite(norm2) || Double.isNaN(norm2)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2402/AbstractIntegerDistribution.java
Used ingredient: } else if (Double.isInfinite(actual) || Double.isInfinite(expected)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2403/AbstractIntegerDistribution.java
Used ingredient: Double.isInfinite(sigma) || Double.isNaN(sigma) || sigma == 0.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2404/AbstractIntegerDistribution.java
Used ingredient: return !isNaN() && (Double.isInfinite(x) || Double.isInfinite(y));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2405/AbstractIntegerDistribution.java
Used ingredient: if (Double.isInfinite(x) || Double.isNaN(x)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2406/AbstractIntegerDistribution.java
Used ingredient: return !isNaN() && (Double.isInfinite(x) || Double.isInfinite(y) || Double.isInfinite(z));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2407/AbstractIntegerDistribution.java
Used ingredient: !Double.isInfinite(lowerBound) && !Double.isNaN(result) &&
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2408/AbstractIntegerDistribution.java
Used ingredient: !Double.isInfinite(upperBound) && !Double.isNaN(result) &&
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2409/AbstractIntegerDistribution.java
Used ingredient: return Double.isNaN(x) || Double.isNaN(y) || Double.isNaN(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2410/AbstractIntegerDistribution.java
Used ingredient: if (Double.isInfinite(x) || Double.isInfinite(y)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2411/AbstractIntegerDistribution.java
Used ingredient: if (Double.isInfinite(data[0]) || Double.isInfinite(y.data[0])) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2412/AbstractIntegerDistribution.java
Used ingredient: } else if (Double.isNaN(data[0]) || Double.isNaN(y.data[0])) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2413/AbstractIntegerDistribution.java
Used ingredient: } else if (Double.isNaN(x) || Double.isNaN(y)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2414/AbstractIntegerDistribution.java
Used ingredient: Double.isInfinite(sig) || Double.isNaN(sig));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2415/AbstractIntegerDistribution.java
Used ingredient: return Double.isNaN(x.getReal()) || Double.isNaN(y.getReal()) || Double.isNaN(z.getReal());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2416/AbstractIntegerDistribution.java
Used ingredient: (Double.isInfinite(real) || Double.isInfinite(imaginary));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2417/AbstractIntegerDistribution.java
Used ingredient: private final double[] multipleNaNs = { 0, 1, Double.NaN, Double.NaN };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2418/AbstractIntegerDistribution.java
Used ingredient: final double[] v = {r.nextDouble(), r.nextDouble(), r.nextDouble()};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2419/AbstractIntegerDistribution.java
Used ingredient: final Vector2D end   = Double.isInfinite(i.getSup()) ?
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2420/AbstractIntegerDistribution.java
Used ingredient: final double[] params = new double[]{ sumY / n, Double.NaN };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2421/AbstractIntegerDistribution.java
Used ingredient: isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2422/AbstractIntegerDistribution.java
Used ingredient: return isEqual && !Double.isNaN(x) && !Double.isNaN(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2423/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(d) || Double.isInfinite(d) || (d == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2424/AbstractIntegerDistribution.java
Used ingredient: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2425/AbstractIntegerDistribution.java
Used ingredient: final RealVector v2 = create(new double[] {Double.NaN, 3, Double.NaN, -2});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2426/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2427/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(p) || Double.isNaN(q) || (p <= 0.0) || (q <= 0.0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2428/AbstractIntegerDistribution.java
Used ingredient: public boolean homoscedasticTTest(final double[] sample1, final double[] sample2,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2429/AbstractIntegerDistribution.java
Used ingredient: final Vector2D start = Double.isInfinite(i.getInf()) ?
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2430/AbstractIntegerDistribution.java
Used ingredient: final double[] nansOnly = {Double.NaN, Double.NaN};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2431/AbstractIntegerDistribution.java
Used ingredient: if( Double.isNaN(value) || Double.isInfinite(value) ) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2432/AbstractIntegerDistribution.java
Used ingredient: final RealVector v3 = create(new double[] {Double.NaN, Double.NaN});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2433/AbstractIntegerDistribution.java
Used ingredient: return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2434/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(lower) || Double.isNaN(upper)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2435/AbstractIntegerDistribution.java
Used ingredient: return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, maxUlps);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2436/AbstractIntegerDistribution.java
Used ingredient: final boolean direct = FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2437/AbstractIntegerDistribution.java
Used ingredient: public static boolean equalsWithRelativeTolerance(double x, double y, double eps) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2438/AbstractIntegerDistribution.java
Used ingredient: public static boolean pairedTTest(final double[] sample1, final double[] sample2,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2439/AbstractIntegerDistribution.java
Used ingredient: final double xRange = observations[last].getX() - observations[0].getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2440/AbstractIntegerDistribution.java
Used ingredient: final boolean inside = (Boolean) node.getAttribute();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2441/AbstractIntegerDistribution.java
Used ingredient: final double accurateValue = MathArrays.linearCombination(aDouble, bDouble);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2442/AbstractIntegerDistribution.java
Used ingredient: final double expected = Double.parseDouble(tokens[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2443/AbstractIntegerDistribution.java
Used ingredient: final Double[] previousPoints = getRuleInternal(numberOfPoints - 1).getFirst();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2444/AbstractIntegerDistribution.java
Used ingredient: final DoublePoint p = new DoublePoint(new double[] { i } );
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2445/AbstractIntegerDistribution.java
Used ingredient: final double[] yArray = new double[] { 10, 2, 10, Double.NaN, 4 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2446/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(d) || Double.isNaN(direction)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2447/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(f) || Double.isNaN(direction)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2448/AbstractIntegerDistribution.java
Used ingredient: final long m = Double.doubleToRawLongBits(magnitude); // don't care about NaN
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2449/AbstractIntegerDistribution.java
Used ingredient: final double[] weights = { 0.5 * Double.MAX_VALUE, 0.51 * Double.MAX_VALUE };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2450/AbstractIntegerDistribution.java
Used ingredient: public boolean pairedTTest(final double[] sample1, final double[] sample2,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2451/AbstractIntegerDistribution.java
Used ingredient: public static boolean tTest(final double[] sample1, final double[] sample2,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2452/AbstractIntegerDistribution.java
Used ingredient: * @return the kurtosis of the values or Double.NaN if length is less than 4
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2453/AbstractIntegerDistribution.java
Used ingredient: public static boolean equalsIncludingNaN(double x, double y, double eps) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2454/AbstractIntegerDistribution.java
Used ingredient: public boolean tTest(final double mu, final double[] sample, final double alpha)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2455/AbstractIntegerDistribution.java
Used ingredient: double[][] subSamples = {{Double.POSITIVE_INFINITY, 2}, {3}, {Double.NaN}, {5}};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2456/AbstractIntegerDistribution.java
Used ingredient: public static boolean homoscedasticTTest(final double[] sample1, final double[] sample2,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2457/AbstractIntegerDistribution.java
Used ingredient: final double actual = ((Double) value).doubleValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2458/AbstractIntegerDistribution.java
Used ingredient: final double accurateValue = MathArrays.linearCombination(a, bDouble);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2459/AbstractIntegerDistribution.java
Used ingredient: final double sum = (double) countSum1 + (double) countSum2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2460/AbstractIntegerDistribution.java
Used ingredient: final double[] params = new double[]{ getIntercept(), getSlope() };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2461/AbstractIntegerDistribution.java
Used ingredient: final double[] result = new double[input.length - indices.size()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2462/AbstractIntegerDistribution.java
Used ingredient: final double min, final double max, final double startValue) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2463/AbstractIntegerDistribution.java
Used ingredient: final Double[] previousPoints = getRuleInternal(lastNumPoints).getFirst();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2464/AbstractIntegerDistribution.java
Used ingredient: final SubHyperplane<T> tPI = (attribute.getPlusInside() == null) ?
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2465/AbstractIntegerDistribution.java
Used ingredient: final SubHyperplane<S> tPI = (attribute.getPlusInside()  == null) ?
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2466/AbstractIntegerDistribution.java
Used ingredient: final double sArray = MathArrays.linearCombination(new double[] {ux, uy, uz},
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2467/AbstractIntegerDistribution.java
Used ingredient: final double convergent = (double) p2 / (double) q2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2468/AbstractIntegerDistribution.java
Used ingredient: final double[] params = new double[]{ Double.NaN };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2469/AbstractIntegerDistribution.java
Used ingredient: final double baseRoot, final double min, final double max,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2470/AbstractIntegerDistribution.java
Used ingredient: final boolean goodb, final double shift) throws NullArgumentException,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2471/AbstractIntegerDistribution.java
Used ingredient: final List<EuclideanDoublePoint> list = new ArrayList<EuclideanDoublePoint>();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2472/AbstractIntegerDistribution.java
Used ingredient: final double currentYPrime = (currentY - previousY) / (currentX - previousX);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2473/AbstractIntegerDistribution.java
Used ingredient: final ArrayList<Double> integrationTestPoints = new ArrayList<Double>();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2474/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(Double.NaN,FastMath.nextAfter(Double.NaN, 0D), 0D);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2475/AbstractIntegerDistribution.java
Used ingredient: final long bits     = Double.doubleToLongBits(value);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2476/AbstractIntegerDistribution.java
Used ingredient: final long bits = Double.doubleToLongBits(components[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2477/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(actualOld) || Double.isInfinite(actualOld)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2478/AbstractIntegerDistribution.java
Used ingredient: final double[] xArray = new double[] { Double.NaN, 1.9, 2, 100, 3 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2479/AbstractIntegerDistribution.java
Used ingredient: public boolean tTest(final double[] sample1, final double[] sample2,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2480/AbstractIntegerDistribution.java
Used ingredient: final SemiVariance sv = new SemiVariance();  // Default bias correction is true
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2481/AbstractIntegerDistribution.java
Used ingredient: return Double.isNaN(x) || Double.isNaN(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2482/AbstractIntegerDistribution.java
Used ingredient: if (Double.isInfinite(lores)) { // Don't allow this to be converted to NaN
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2483/AbstractIntegerDistribution.java
Used ingredient: public static boolean chiSquareTest(final long[][] counts, final double alpha)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2484/AbstractIntegerDistribution.java
Used ingredient: TestUtils.assertEquals(Double.NaN, Precision.round(Double.NaN, 2), 0.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2485/AbstractIntegerDistribution.java
Used ingredient: public static boolean equals(double x, double y, double eps) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2486/AbstractIntegerDistribution.java
Used ingredient: split[0] = Double.longBitsToDouble(Double.doubleToLongBits(toDouble()) & mask);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2487/AbstractIntegerDistribution.java
Used ingredient: * @return the skewness of the values or Double.NaN if length is less than
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2488/AbstractIntegerDistribution.java
Used ingredient: public static boolean equalsIncludingNaN(double x, double y, int maxUlps) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2489/AbstractIntegerDistribution.java
Used ingredient: * which involves redundant columns will be assigned {@code Double.NaN}. </p>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2490/AbstractIntegerDistribution.java
Used ingredient: * for certain cases in {@link TDistribution}) or {@code Double.NaN} if it
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2491/AbstractIntegerDistribution.java
Used ingredient: double[] totalSample = {Double.POSITIVE_INFINITY, 2, 3, Double.NaN, 5};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2492/AbstractIntegerDistribution.java
Used ingredient: public static final Vector3D NaN = new Vector3D(Double.NaN, Double.NaN, Double.NaN);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2493/AbstractIntegerDistribution.java
Used ingredient: public double homoscedasticTTest(final double[] sample1, final double[] sample2)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2494/AbstractIntegerDistribution.java
Used ingredient: final DerivativeStructure fx = f.value(new DerivativeStructure(1, 5, 0, Double.NaN));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2495/AbstractIntegerDistribution.java
Used ingredient: public Corrector(final double[] previous, final double[] scaled, final double[] state) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2496/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(Double.isInfinite(f.value(dsHi).getPartialDerivative(maxOrder)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2497/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(Double.isInfinite(f.value(dsLo).getPartialDerivative(maxOrder)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2498/AbstractIntegerDistribution.java
Used ingredient: * @return the population variance of the values or Double.NaN if the array is empty
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2499/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue("asin(NaN) should be NaN", Double.isNaN(FastMath.asin(Double.NaN)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2500/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         if (chebyshevApplies) {
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 129
Used ingredient: final boolean chebyshevApplies;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2501/AbstractIntegerDistribution.java
Used ingredient: if (next != previous) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2502/AbstractIntegerDistribution.java
Used ingredient: if (checker == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2503/AbstractIntegerDistribution.java
Used ingredient: if (this.equals(inc)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2504/AbstractIntegerDistribution.java
Used ingredient: if (this.lessThan(x)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2505/AbstractIntegerDistribution.java
Used ingredient: if (step < minStep) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2506/AbstractIntegerDistribution.java
Used ingredient: if (temp < stplen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2507/AbstractIntegerDistribution.java
Used ingredient: if (predsq > presav) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2508/AbstractIntegerDistribution.java
Used ingredient: if (heightExcess > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2509/AbstractIntegerDistribution.java
Used ingredient: if (this.lindep[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2510/AbstractIntegerDistribution.java
Used ingredient: if (!this.lindep[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2511/AbstractIntegerDistribution.java
Used ingredient: if (sampleSize <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2512/AbstractIntegerDistribution.java
Used ingredient: if (sampleSize < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2513/AbstractIntegerDistribution.java
Used ingredient: if (threshold == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2514/AbstractIntegerDistribution.java
Used ingredient: if (stepSize <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2515/AbstractIntegerDistribution.java
Used ingredient: if (dt <= threshold) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2516/AbstractIntegerDistribution.java
Used ingredient: if (!this.lindep[k]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2517/AbstractIntegerDistribution.java
Used ingredient: if (isRepairMode) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2518/AbstractIntegerDistribution.java
Used ingredient: if (lhs < epsilon * rhs) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2519/AbstractIntegerDistribution.java
Used ingredient: if (steps.size() == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2520/AbstractIntegerDistribution.java
Used ingredient: if (indices.isEmpty()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2521/AbstractIntegerDistribution.java
Used ingredient: if (this.hasIntercept) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2522/AbstractIntegerDistribution.java
Used ingredient: if (steps.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2523/AbstractIntegerDistribution.java
Used ingredient: if (lsbthreshold == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2524/AbstractIntegerDistribution.java
Used ingredient: if (equals(x, y, eps)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2525/AbstractIntegerDistribution.java
Used ingredient: if (!this.lindep[col]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2526/AbstractIntegerDistribution.java
Used ingredient: if (shift.y < shift.x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2527/AbstractIntegerDistribution.java
Used ingredient: if (!this.lindep[row]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2528/AbstractIntegerDistribution.java
Used ingredient: if (observations == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2529/AbstractIntegerDistribution.java
Used ingredient: if (observed1.length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2530/AbstractIntegerDistribution.java
Used ingredient: if (!this.hasIntercept) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2531/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(p)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2532/AbstractIntegerDistribution.java
Found patch for Math_2, id: 2532
Execute command: diff -u /tmp/math_2_Genprog/output_astor/AstorMain-math_2_Genprog/src/default/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java /mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2532/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(z)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2533/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(v)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2534/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(y)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2535/AbstractIntegerDistribution.java
Used ingredient: if (Double.isNaN(hN)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2536/AbstractIntegerDistribution.java
Used ingredient: if (meanImpl != mean) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2537/AbstractIntegerDistribution.java
Used ingredient: if (len != b.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2538/AbstractIntegerDistribution.java
Used ingredient: int searchResolution) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2539/AbstractIntegerDistribution.java
Used ingredient: for (byte b : bytes) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2540/AbstractIntegerDistribution.java
Used ingredient: if (h < getMinStep()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2541/AbstractIntegerDistribution.java
Used ingredient: if (values == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2542/AbstractIntegerDistribution.java
Used ingredient: if (line1 == line2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2543/AbstractIntegerDistribution.java
Used ingredient: if (y.length != len) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2544/AbstractIntegerDistribution.java
Used ingredient: if (simplex == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2545/AbstractIntegerDistribution.java
Used ingredient: if (previous != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2546/AbstractIntegerDistribution.java
Used ingredient: if (result.sign == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2547/AbstractIntegerDistribution.java
Used ingredient: if (sample == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2548/AbstractIntegerDistribution.java
Used ingredient: if (selected == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2549/AbstractIntegerDistribution.java
Used ingredient: if (includeEndPoints) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2550/AbstractIntegerDistribution.java
Used ingredient: if (vertices == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2551/AbstractIntegerDistribution.java
Used ingredient: if (steps == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2552/AbstractIntegerDistribution.java
Used ingredient: if (stplen < blen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2553/AbstractIntegerDistribution.java
Used ingredient: if (cache != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2554/AbstractIntegerDistribution.java
Used ingredient: if (cachedPt == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2555/AbstractIntegerDistribution.java
Used ingredient: if (cachedUt == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2556/AbstractIntegerDistribution.java
Used ingredient: if (cachedVt == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2557/AbstractIntegerDistribution.java
Used ingredient: if (cachedQt == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2558/AbstractIntegerDistribution.java
Used ingredient: if (cached == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2559/AbstractIntegerDistribution.java
Used ingredient: if (cachedS == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2560/AbstractIntegerDistribution.java
Used ingredient: if (cachedR == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2561/AbstractIntegerDistribution.java
Used ingredient: if (cachedQ == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2562/AbstractIntegerDistribution.java
Used ingredient: if (cachedH == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2563/AbstractIntegerDistribution.java
Used ingredient: if (cachedU == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2564/AbstractIntegerDistribution.java
Used ingredient: if (cachedB == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2565/AbstractIntegerDistribution.java
Used ingredient: if (cachedV == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2566/AbstractIntegerDistribution.java
Used ingredient: if (cachedP == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2567/AbstractIntegerDistribution.java
Used ingredient: if (cachedD == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2568/AbstractIntegerDistribution.java
Used ingredient: if (cachedL == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2569/AbstractIntegerDistribution.java
Used ingredient: if (cachedT == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2570/AbstractIntegerDistribution.java
Used ingredient: if (cachedQT == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2571/AbstractIntegerDistribution.java
Used ingredient: if (cachedLT == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2572/AbstractIntegerDistribution.java
Used ingredient: if ((absAi - 1) != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2573/AbstractIntegerDistribution.java
Used ingredient: if (sampleCount < 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2574/AbstractIntegerDistribution.java
Used ingredient: if (edge != inserted) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2575/AbstractIntegerDistribution.java
Used ingredient: if (object == this) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2576/AbstractIntegerDistribution.java
Used ingredient: if (object == this ) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2577/AbstractIntegerDistribution.java
Used ingredient: if (entry < minValue) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2578/AbstractIntegerDistribution.java
Used ingredient: if (hDouble >= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2579/AbstractIntegerDistribution.java
Used ingredient: if (this == other) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2580/AbstractIntegerDistribution.java
Used ingredient: if (y.equals(one)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2581/AbstractIntegerDistribution.java
Used ingredient: if (seedLen < rslLen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2582/AbstractIntegerDistribution.java
Used ingredient: if (crossed != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2583/AbstractIntegerDistribution.java
Used ingredient: if (v.length != rows) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2584/AbstractIntegerDistribution.java
Used ingredient: if (rhs.isNaN()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2585/AbstractIntegerDistribution.java
Used ingredient: if (h > getMaxStep()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2586/AbstractIntegerDistribution.java
Used ingredient: if (name.equals(CX)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2587/AbstractIntegerDistribution.java
Used ingredient: if (i >= this.nvars) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2588/AbstractIntegerDistribution.java
Used ingredient: if (j >= seed.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2589/AbstractIntegerDistribution.java
Used ingredient: if (includeConstant) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2590/AbstractIntegerDistribution.java
Used ingredient: if (computeConstants) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2591/AbstractIntegerDistribution.java
Used ingredient: if (nobs <= nvars) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2592/AbstractIntegerDistribution.java
Used ingredient: if (squaredSine == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2593/AbstractIntegerDistribution.java
Used ingredient: if (beta1 <= epsx) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2594/AbstractIntegerDistribution.java
Used ingredient: if (previousRejected) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2595/AbstractIntegerDistribution.java
Used ingredient: if (csave > cauchy) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2596/AbstractIntegerDistribution.java
Used ingredient: if (elements <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2597/AbstractIntegerDistribution.java
Used ingredient: if (cycle++ % 2 != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2598/AbstractIntegerDistribution.java
Used ingredient: if (!this.tol_set) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2599/AbstractIntegerDistribution.java
Used ingredient: if (a.exp < b.exp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2600/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         return solveInverseCumulativeProbability(p, lower, upper);
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 142
Used ingredient: return inverseCumulativeProbability(random.nextDouble());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2601/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(final double p)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2602/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(lower, upper), 1E-12);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2603/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(double p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2604/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(double p)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2605/AbstractIntegerDistribution.java
Used ingredient: double direct = distribution.cumulativeProbability(lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2606/AbstractIntegerDistribution.java
Used ingredient: return distribution.inverseCumulativeProbability(nextUniform(0, 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2607/AbstractIntegerDistribution.java
Used ingredient: protected int solveInverseCumulativeProbability(final double p, int lower, int upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2608/AbstractIntegerDistribution.java
Used ingredient: final double kBminus = kernel.cumulativeProbability(lower);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2609/AbstractIntegerDistribution.java
Used ingredient: protected void verifyInverseCumulativeProbabilities() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2610/AbstractIntegerDistribution.java
Used ingredient: int ret = dist.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2611/AbstractIntegerDistribution.java
Used ingredient: double result = f.inverseCumulativeProbability(prob);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2612/AbstractIntegerDistribution.java
Used ingredient: distribution.inverseCumulativeProbability(1d - alpha / 2d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2613/AbstractIntegerDistribution.java
Used ingredient: double actual = distribution.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2614/AbstractIntegerDistribution.java
Used ingredient: public void testInverseCumulativeProbabilityExtremes() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2615/AbstractIntegerDistribution.java
Used ingredient: private double checkedCumulativeProbability(int argument)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2616/AbstractIntegerDistribution.java
Used ingredient: lower, distribution.inverseCumulativeProbability(0.0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2617/AbstractIntegerDistribution.java
Used ingredient: upper, distribution.inverseCumulativeProbability(1.0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2618/AbstractIntegerDistribution.java
Used ingredient: ret = innerCumulativeProbability(domain[0], x, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2619/AbstractIntegerDistribution.java
Used ingredient: ret = innerCumulativeProbability(domain[1], x, -1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2620/AbstractIntegerDistribution.java
Used ingredient: return kernel.inverseCumulativeProbability(kBminus + pCrit * kB / pB);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2621/AbstractIntegerDistribution.java
Used ingredient: public void testLargeMeanInverseCumulativeProbability() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2622/AbstractIntegerDistribution.java
Used ingredient: public void testDegenerateInverseCumulativeProbability() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2623/AbstractIntegerDistribution.java
Used ingredient: double x = fd.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2624/AbstractIntegerDistribution.java
Used ingredient: 0.0, distribution.cumulativeProbability(lower - 1), 0.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2625/AbstractIntegerDistribution.java
Used ingredient: return normal.cumulativeProbability(x + 0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2626/AbstractIntegerDistribution.java
Used ingredient: * <li>{@link #solveInverseCumulativeProbability(double, int, int)} for
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2627/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0, dist.inverseCumulativeProbability(0d));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2628/AbstractIntegerDistribution.java
Used ingredient: final double withinBinKernelMass = kernel.cumulativeProbability(lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2629/AbstractIntegerDistribution.java
Used ingredient: return cumulativeProbability(x1) - cumulativeProbability(x0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2630/AbstractIntegerDistribution.java
Used ingredient: if (checkedCumulativeProbability(lower) >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2631/AbstractIntegerDistribution.java
Used ingredient: public void testInverseCumulativeProbabilities() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2632/AbstractIntegerDistribution.java
Used ingredient: int p = dist.inverseCumulativeProbability(0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2633/AbstractIntegerDistribution.java
Used ingredient: distribution.inverseCumulativeProbability(2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2634/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(double x0, double x1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2635/AbstractIntegerDistribution.java
Used ingredient: distribution.inverseCumulativeProbability(-1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2636/AbstractIntegerDistribution.java
Used ingredient: return 2*standardNormal.cumulativeProbability(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2637/AbstractIntegerDistribution.java
Used ingredient: return 2 * standardNormal.cumulativeProbability(z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2638/AbstractIntegerDistribution.java
Used ingredient: return 2.0 * distribution.cumulativeProbability(-t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2639/AbstractIntegerDistribution.java
Used ingredient: result = normal.inverseCumulativeProbability(0.841344746068543);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2640/AbstractIntegerDistribution.java
Used ingredient: * specified inverse cumulative probability absolute accuracy.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2641/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(2.0, dist.inverseCumulativeProbability(0.1), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2642/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(2.0, dist.inverseCumulativeProbability(0.2), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2643/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(5.0, dist.inverseCumulativeProbability(0.3), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2644/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(5.0, dist.inverseCumulativeProbability(0.4), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2645/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(8.0, dist.inverseCumulativeProbability(0.5), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2646/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(8.0, dist.inverseCumulativeProbability(0.6), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2647/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(3.0, dist.inverseCumulativeProbability(0.2), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2648/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(6.0, dist.inverseCumulativeProbability(0.4), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2649/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(9.0, dist.inverseCumulativeProbability(0.6), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2650/AbstractIntegerDistribution.java
Used ingredient: quantiles[1] = distribution.inverseCumulativeProbability(0.5d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2651/AbstractIntegerDistribution.java
Used ingredient: return i == 0 ? kernel.cumulativeProbability(min, binBounds[0]) :
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2652/AbstractIntegerDistribution.java
Used ingredient: result = normal.inverseCumulativeProbability(0.9772498680518209);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2653/AbstractIntegerDistribution.java
Used ingredient: result = normal.inverseCumulativeProbability(0.9999683287581673);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2654/AbstractIntegerDistribution.java
Used ingredient: verifyInverseCumulativeProbabilities();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2655/AbstractIntegerDistribution.java
Used ingredient: // verify cumulativeProbability(double, double)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2656/AbstractIntegerDistribution.java
Used ingredient: return cumulativeProbability(x) - p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2657/AbstractIntegerDistribution.java
Used ingredient: double diff = distribution.cumulativeProbability(upper) -
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2658/AbstractIntegerDistribution.java
Used ingredient: x = fd.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2659/AbstractIntegerDistribution.java
Used ingredient: distribution.cumulativeProbability(lower);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2660/AbstractIntegerDistribution.java
Used ingredient: 1.0, distribution.cumulativeProbability(upper), 0.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2661/AbstractIntegerDistribution.java
Used ingredient: return new SubLine(line, new IntervalsSet(lower, upper));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2662/AbstractIntegerDistribution.java
Used ingredient: quantiles[0] = distribution.inverseCumulativeProbability(0.25d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2663/AbstractIntegerDistribution.java
Used ingredient: quantiles[2] = distribution.inverseCumulativeProbability(0.75d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2664/AbstractIntegerDistribution.java
Used ingredient: return UnivariateSolverUtils.isBracketing(function, lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2665/AbstractIntegerDistribution.java
Used ingredient: // cf. AbstractRealDistribution.inverseCumulativeProbability(double)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2666/AbstractIntegerDistribution.java
Used ingredient: int inverseCumulativeProbability(double p) throws OutOfRangeException;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2667/AbstractIntegerDistribution.java
Used ingredient: * value as {@code inverseCumulativeProbability(1)}. In other words, this
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2668/AbstractIntegerDistribution.java
Used ingredient: * value as {@code inverseCumulativeProbability(0)}. In other words, this
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2669/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(0), Double.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2670/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(i), Double.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2671/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(7), Double.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2672/AbstractIntegerDistribution.java
Used ingredient: return 1 - distribution.cumulativeProbability(chiSquare(counts));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2673/AbstractIntegerDistribution.java
Used ingredient: lower -= 1; // this ensures cumulativeProbability(lower) < p, which
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2674/AbstractIntegerDistribution.java
Used ingredient: private double innerCumulativeProbability(int x0, int x1, int dx) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2675/AbstractIntegerDistribution.java
Used ingredient: final double actual = distribution.inverseCumulativeProbability(p12);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2676/AbstractIntegerDistribution.java
Used ingredient: final double actual = distribution.inverseCumulativeProbability(p23);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2677/AbstractIntegerDistribution.java
Used ingredient: while (cumulativeProbability(lowerBound) >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2678/AbstractIntegerDistribution.java
Used ingredient: public double upperCumulativeProbability(int x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2679/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(final double x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2680/AbstractIntegerDistribution.java
Used ingredient: public void testCumulativeProbabilitiesSingleArguments() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2681/AbstractIntegerDistribution.java
Used ingredient: * Default inverse cumulative probability accuracy
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2682/AbstractIntegerDistribution.java
Used ingredient: * Default inverse cumulative probability accuracy.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2683/AbstractIntegerDistribution.java
Used ingredient: /** Default inverse cumulative probability accuracy.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2684/AbstractIntegerDistribution.java
Used ingredient: /** Default inverse cumulative probability accuracy. */
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2685/AbstractIntegerDistribution.java
Used ingredient: setInverseCumulativeTestPoints(new double[] {0, 1});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2686/AbstractIntegerDistribution.java
Used ingredient: double actualCdf1 = dist.upperCumulativeProbability(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2687/AbstractIntegerDistribution.java
Used ingredient: setInverseCumulativeTestPoints(new double[] {0.0, 1.0});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2688/AbstractIntegerDistribution.java
Used ingredient: setInverseCumulativeTestPoints(new double[] {0.1d, 0.5d});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2689/AbstractIntegerDistribution.java
Used ingredient: return 1.0 - fdist.cumulativeProbability(a.F);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2690/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(p <= dist.cumulativeProbability(ret));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2691/AbstractIntegerDistribution.java
Used ingredient: return 1 - distribution.cumulativeProbability(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2692/AbstractIntegerDistribution.java
Used ingredient: return 2d * (1.0 - distribution.cumulativeProbability(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2693/AbstractIntegerDistribution.java
Used ingredient: return 1.0 - distribution.cumulativeProbability(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2694/AbstractIntegerDistribution.java
Used ingredient: double inverseCumulativeProbability(double p) throws OutOfRangeException;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2695/AbstractIntegerDistribution.java
Used ingredient: * Creates the default inverse cumulative probability test expected
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2696/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(x[i], d.inverseCumulativeProbability(cumes[i]), 1e-5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2697/AbstractIntegerDistribution.java
Used ingredient: final double kernelCum = kernel.cumulativeProbability(lower, testPoints[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2698/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(p > dist.cumulativeProbability(ret - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2699/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.0, dist.cumulativeProbability(1), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2700/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         while (lower + 1 < upper) {
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 158
Used ingredient: if (x < lower || x > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2701/AbstractIntegerDistribution.java
Used ingredient: if (r >= lower && r <= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2702/AbstractIntegerDistribution.java
Used ingredient: if (lower >= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2703/AbstractIntegerDistribution.java
Used ingredient: if (xm < lower || xm > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2704/AbstractIntegerDistribution.java
Used ingredient: while ((value & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2705/AbstractIntegerDistribution.java
Used ingredient: double lower, double upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2706/AbstractIntegerDistribution.java
Used ingredient: int xm = (lower + upper) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2707/AbstractIntegerDistribution.java
Used ingredient: return 0.5 * (lower + upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2708/AbstractIntegerDistribution.java
Used ingredient: while (node.right != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2709/AbstractIntegerDistribution.java
Used ingredient: while (mcCount < mcRepeat) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2710/AbstractIntegerDistribution.java
Used ingredient: while (bound < upper - binWidth) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2711/AbstractIntegerDistribution.java
Used ingredient: this(rng, lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2712/AbstractIntegerDistribution.java
Used ingredient: } else if (x > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2713/AbstractIntegerDistribution.java
Used ingredient: while (n < maxIterations) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2714/AbstractIntegerDistribution.java
Used ingredient: while (node.left != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2715/AbstractIntegerDistribution.java
Used ingredient: while (line != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2716/AbstractIntegerDistribution.java
Used ingredient: while (count <= index) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2717/AbstractIntegerDistribution.java
Used ingredient: while (exponent < -1023) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2718/AbstractIntegerDistribution.java
Used ingredient: while (error >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2719/AbstractIntegerDistribution.java
Used ingredient: if (nrt + 1 < p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2720/AbstractIntegerDistribution.java
Used ingredient: while (k < pp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2721/AbstractIntegerDistribution.java
Used ingredient: while (l < lEnd - 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2722/AbstractIntegerDistribution.java
Used ingredient: while (0 == n % p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2723/AbstractIntegerDistribution.java
Used ingredient: double[] lower, double[] upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2724/AbstractIntegerDistribution.java
Used ingredient: while (!lowerInclusive && u <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2725/AbstractIntegerDistribution.java
Used ingredient: while (buffer[p-1] == '0') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2726/AbstractIntegerDistribution.java
Used ingredient: while (k < hLen && j >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2727/AbstractIntegerDistribution.java
Used ingredient: while (x == x1 || x == x2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2728/AbstractIntegerDistribution.java
Used ingredient: new SimpleBounds(lower, upper));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2729/AbstractIntegerDistribution.java
Used ingredient: * {@code 0.5 * (lower + upper)}.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2730/AbstractIntegerDistribution.java
Used ingredient: final double upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2731/AbstractIntegerDistribution.java
Used ingredient: if (tmp < upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2732/AbstractIntegerDistribution.java
Used ingredient: while (cumBinP(i) < p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2733/AbstractIntegerDistribution.java
Used ingredient: if (x <= upperBounds[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2734/AbstractIntegerDistribution.java
Used ingredient: if (lowerBound != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2735/AbstractIntegerDistribution.java
Used ingredient: if (lowerBound == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2736/AbstractIntegerDistribution.java
Used ingredient: while (xOverPow2 > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2737/AbstractIntegerDistribution.java
Used ingredient: if (lower < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2738/AbstractIntegerDistribution.java
Used ingredient: while (f <= maxFactor) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2739/AbstractIntegerDistribution.java
Used ingredient: while (iMax - iMin > 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2740/AbstractIntegerDistribution.java
Used ingredient: while (i < bytes.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2741/AbstractIntegerDistribution.java
Used ingredient: while (scale != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2742/AbstractIntegerDistribution.java
Used ingredient: while (lastN0 < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2743/AbstractIntegerDistribution.java
Used ingredient: while (p < pEnd - 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2744/AbstractIntegerDistribution.java
Used ingredient: while (p < pEnd) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2745/AbstractIntegerDistribution.java
Used ingredient: if (n + m <= maxOrder) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2746/AbstractIntegerDistribution.java
Used ingredient: while (buffer[q] == '0') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2747/AbstractIntegerDistribution.java
Used ingredient: while (i < nvars) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2748/AbstractIntegerDistribution.java
Used ingredient: while (idx < count) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2749/AbstractIntegerDistribution.java
Used ingredient: while (++min < --max) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2750/AbstractIntegerDistribution.java
Used ingredient: while (j < end) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2751/AbstractIntegerDistribution.java
Used ingredient: while (l < lEnd) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2752/AbstractIntegerDistribution.java
Used ingredient: while (++i < 11) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2753/AbstractIntegerDistribution.java
Used ingredient: while (e < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2754/AbstractIntegerDistribution.java
Used ingredient: while (q < qEnd - 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2755/AbstractIntegerDistribution.java
Used ingredient: while (k <= j && k > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2756/AbstractIntegerDistribution.java
Used ingredient: if (e[k + 1] < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2757/AbstractIntegerDistribution.java
Used ingredient: verifyInterval(lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2758/AbstractIntegerDistribution.java
Used ingredient: super(buildTree(lower, upper));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2759/AbstractIntegerDistribution.java
Used ingredient: while (current < loop.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2760/AbstractIntegerDistribution.java
Used ingredient: if (lower.length != upper.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2761/AbstractIntegerDistribution.java
Used ingredient: while (resultSet.size() < k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2762/AbstractIntegerDistribution.java
Used ingredient: } while (norm2 * size < 0.01);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2763/AbstractIntegerDistribution.java
Used ingredient: while (lsbthreshold > msb) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2764/AbstractIntegerDistribution.java
Used ingredient: while (index < seeds.size()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2765/AbstractIntegerDistribution.java
Used ingredient: while (n < 1000 * meanPoisson) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2766/AbstractIntegerDistribution.java
Used ingredient: if (index + 1 > numElements) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2767/AbstractIntegerDistribution.java
Used ingredient: while (mean <= 10000000.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2768/AbstractIntegerDistribution.java
Used ingredient: if (i + j + k <= maxOrder) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2769/AbstractIntegerDistribution.java
Used ingredient: final double lower, final double upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2770/AbstractIntegerDistribution.java
Used ingredient: return lower + dif * (upper - lower);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2771/AbstractIntegerDistribution.java
Used ingredient: xm = lower + (upper - lower) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2772/AbstractIntegerDistribution.java
Used ingredient: while (node.getCut() != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2773/AbstractIntegerDistribution.java
Used ingredient: d, lower[i], upper[i]), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2774/AbstractIntegerDistribution.java
Used ingredient: this.upper   = upper.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2775/AbstractIntegerDistribution.java
Used ingredient: this.lower   = lower.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2776/AbstractIntegerDistribution.java
Used ingredient: start, lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2777/AbstractIntegerDistribution.java
Used ingredient: if (ordersSum > order) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2778/AbstractIntegerDistribution.java
Used ingredient: while (remainingEval > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2779/AbstractIntegerDistribution.java
Used ingredient: if (number > maxNumber) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2780/AbstractIntegerDistribution.java
Used ingredient: if (filePointer != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2781/AbstractIntegerDistribution.java
Used ingredient: if (filePointer == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2782/AbstractIntegerDistribution.java
Used ingredient: while (!sorted.isEmpty()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2783/AbstractIntegerDistribution.java
Used ingredient: if (observed1.length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2784/AbstractIntegerDistribution.java
Used ingredient: if (entry < minValue) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2785/AbstractIntegerDistribution.java
Used ingredient: } else if (order == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2786/AbstractIntegerDistribution.java
Used ingredient: } else if (center[1] < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2787/AbstractIntegerDistribution.java
Used ingredient: if (value < quartiles[0]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2788/AbstractIntegerDistribution.java
Used ingredient: if (x >= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2789/AbstractIntegerDistribution.java
Used ingredient: if (x > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2790/AbstractIntegerDistribution.java
Used ingredient: while (values.hasNext()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2791/AbstractIntegerDistribution.java
Used ingredient: while (x.unequal(px)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2792/AbstractIntegerDistribution.java
Used ingredient: while (dimension < p &&
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2793/AbstractIntegerDistribution.java
Used ingredient: while (iter.hasNext()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2794/AbstractIntegerDistribution.java
Used ingredient: while (iter2.hasNext()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2795/AbstractIntegerDistribution.java
Used ingredient: if (lqnorm <= cgnorm) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2796/AbstractIntegerDistribution.java
Used ingredient: if (lqnorm < cgnorm) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2797/AbstractIntegerDistribution.java
Used ingredient: while (s == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2798/AbstractIntegerDistribution.java
Used ingredient: if ((order % 2) == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2799/AbstractIntegerDistribution.java
Used ingredient: while (isaacI < H_SIZE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2800/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         return upper;
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 176
Used ingredient: return mappers;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2801/AbstractIntegerDistribution.java
Used ingredient: return number;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2802/AbstractIntegerDistribution.java
Used ingredient: return mapped;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2803/AbstractIntegerDistribution.java
Used ingredient: return lower;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2804/AbstractIntegerDistribution.java
Used ingredient: return order;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2805/AbstractIntegerDistribution.java
Used ingredient: return value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2806/AbstractIntegerDistribution.java
Used ingredient: return error;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2807/AbstractIntegerDistribution.java
Used ingredient: return shape;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2808/AbstractIntegerDistribution.java
Used ingredient: return rule;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2809/AbstractIntegerDistribution.java
Used ingredient: return repr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2810/AbstractIntegerDistribution.java
Used ingredient: return extra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2811/AbstractIntegerDistribution.java
Used ingredient: return true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2812/AbstractIntegerDistribution.java
Used ingredient: return plane;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2813/AbstractIntegerDistribution.java
Used ingredient: return zero;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2814/AbstractIntegerDistribution.java
Used ingredient: return kurt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2815/AbstractIntegerDistribution.java
Used ingredient: return pFrac;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2816/AbstractIntegerDistribution.java
Used ingredient: return wrapped;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2817/AbstractIntegerDistribution.java
Used ingredient: return numbers;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2818/AbstractIntegerDistribution.java
Used ingredient: return cluster;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2819/AbstractIntegerDistribution.java
Used ingredient: return upperBound;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2820/AbstractIntegerDistribution.java
Used ingredient: return values;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2821/AbstractIntegerDistribution.java
Used ingredient: return center;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2822/AbstractIntegerDistribution.java
Used ingredient: return source;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2823/AbstractIntegerDistribution.java
Used ingredient: return vector;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2824/AbstractIntegerDistribution.java
Used ingredient: return errors;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2825/AbstractIntegerDistribution.java
Used ingredient: return newArr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2826/AbstractIntegerDistribution.java
Used ingredient: return output;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2827/AbstractIntegerDistribution.java
Used ingredient: return merged;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2828/AbstractIntegerDistribution.java
Used ingredient: return copied;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2829/AbstractIntegerDistribution.java
Used ingredient: return parent;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2830/AbstractIntegerDistribution.java
Used ingredient: return prefix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2831/AbstractIntegerDistribution.java
Used ingredient: return lores;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2832/AbstractIntegerDistribution.java
Used ingredient: return loop;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2833/AbstractIntegerDistribution.java
Used ingredient: return line1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2834/AbstractIntegerDistribution.java
Used ingredient: return cloud;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2835/AbstractIntegerDistribution.java
Used ingredient: return p * x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2836/AbstractIntegerDistribution.java
Used ingredient: return p / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2837/AbstractIntegerDistribution.java
Used ingredient: return arity;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2838/AbstractIntegerDistribution.java
Used ingredient: return ratio;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2839/AbstractIntegerDistribution.java
Used ingredient: return split;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2840/AbstractIntegerDistribution.java
Used ingredient: return steps;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2841/AbstractIntegerDistribution.java
Used ingredient: return scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2842/AbstractIntegerDistribution.java
Used ingredient: return real;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2843/AbstractIntegerDistribution.java
Used ingredient: return tree;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2844/AbstractIntegerDistribution.java
Used ingredient: return trace;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2845/AbstractIntegerDistribution.java
Used ingredient: return omega;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2846/AbstractIntegerDistribution.java
Used ingredient: return start;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2847/AbstractIntegerDistribution.java
Used ingredient: return sort;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2848/AbstractIntegerDistribution.java
Used ingredient: return null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2849/AbstractIntegerDistribution.java
Used ingredient: return array;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2850/AbstractIntegerDistribution.java
Used ingredient: return sizes;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2851/AbstractIntegerDistribution.java
Used ingredient: return line;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2852/AbstractIntegerDistribution.java
Used ingredient: return best;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2853/AbstractIntegerDistribution.java
Used ingredient: return plus;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2854/AbstractIntegerDistribution.java
Used ingredient: return size;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2855/AbstractIntegerDistribution.java
Used ingredient: return point;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2856/AbstractIntegerDistribution.java
Used ingredient: return leaf;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2857/AbstractIntegerDistribution.java
Used ingredient: return theta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2858/AbstractIntegerDistribution.java
Used ingredient: return beta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2859/AbstractIntegerDistribution.java
Used ingredient: return field;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2860/AbstractIntegerDistribution.java
Used ingredient: return minus;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2861/AbstractIntegerDistribution.java
Used ingredient: return modes;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2862/AbstractIntegerDistribution.java
Used ingredient: return optim;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2863/AbstractIntegerDistribution.java
Used ingredient: return sumsq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2864/AbstractIntegerDistribution.java
Used ingredient: return pool;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2865/AbstractIntegerDistribution.java
Used ingredient: return image;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2866/AbstractIntegerDistribution.java
Used ingredient: return false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2867/AbstractIntegerDistribution.java
Used ingredient: return facet;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2868/AbstractIntegerDistribution.java
Used ingredient: return time;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2869/AbstractIntegerDistribution.java
Used ingredient: return model;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2870/AbstractIntegerDistribution.java
Used ingredient: return est;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2871/AbstractIntegerDistribution.java
Used ingredient: return first;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2872/AbstractIntegerDistribution.java
Used ingredient: return rList;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2873/AbstractIntegerDistribution.java
Used ingredient: return skew;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2874/AbstractIntegerDistribution.java
Used ingredient: return count;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2875/AbstractIntegerDistribution.java
Used ingredient: return alpha;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2876/AbstractIntegerDistribution.java
Used ingredient: return mean;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2877/AbstractIntegerDistribution.java
Used ingredient: return name;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2878/AbstractIntegerDistribution.java
Used ingredient: return input;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2879/AbstractIntegerDistribution.java
Used ingredient: return rMode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2880/AbstractIntegerDistribution.java
Used ingredient: return mode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2881/AbstractIntegerDistribution.java
Used ingredient: return rnorm;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2882/AbstractIntegerDistribution.java
Used ingredient: return node;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2883/AbstractIntegerDistribution.java
Used ingredient: return one;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2884/AbstractIntegerDistribution.java
Used ingredient: return quat;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2885/AbstractIntegerDistribution.java
Used ingredient: return sum;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2886/AbstractIntegerDistribution.java
Used ingredient: return sumSq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2887/AbstractIntegerDistribution.java
Used ingredient: return sumYY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2888/AbstractIntegerDistribution.java
Used ingredient: return sumXX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2889/AbstractIntegerDistribution.java
Used ingredient: return sumXY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2890/AbstractIntegerDistribution.java
Used ingredient: return norm;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2891/AbstractIntegerDistribution.java
Used ingredient: return num;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2892/AbstractIntegerDistribution.java
Used ingredient: return out;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2893/AbstractIntegerDistribution.java
Used ingredient: return out2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2894/AbstractIntegerDistribution.java
Used ingredient: return rows;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2895/AbstractIntegerDistribution.java
Used ingredient: return ret;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2896/AbstractIntegerDistribution.java
Used ingredient: return nextX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2897/AbstractIntegerDistribution.java
Used ingredient: return var;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2898/AbstractIntegerDistribution.java
Used ingredient: return map;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2899/AbstractIntegerDistribution.java
Used ingredient: return sqrt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2900/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         int lower = getSupportLowerBound();
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 105
Used ingredient: int upper = getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2901/AbstractIntegerDistribution.java
Used ingredient: int getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2902/AbstractIntegerDistribution.java
Used ingredient: double lowerBound = getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2903/AbstractIntegerDistribution.java
Used ingredient: return getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2904/AbstractIntegerDistribution.java
Used ingredient: double getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2905/AbstractIntegerDistribution.java
Used ingredient: public int getSupportLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2906/AbstractIntegerDistribution.java
Used ingredient: public double getSupportLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2907/AbstractIntegerDistribution.java
Used ingredient: if (x - dx >= getSupportLowerBound()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2908/AbstractIntegerDistribution.java
Used ingredient: int getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2909/AbstractIntegerDistribution.java
Used ingredient: final double[] lB = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2910/AbstractIntegerDistribution.java
Used ingredient: return getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2911/AbstractIntegerDistribution.java
Used ingredient: double getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2912/AbstractIntegerDistribution.java
Used ingredient: public int getSupportUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2913/AbstractIntegerDistribution.java
Used ingredient: final double[] min = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2914/AbstractIntegerDistribution.java
Used ingredient: final int lower = distribution.getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2915/AbstractIntegerDistribution.java
Used ingredient: final double[] uB = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2916/AbstractIntegerDistribution.java
Used ingredient: public double getSupportUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2917/AbstractIntegerDistribution.java
Used ingredient: final double a = getValidLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2918/AbstractIntegerDistribution.java
Used ingredient: public void testGetSupportLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2919/AbstractIntegerDistribution.java
Used ingredient: final double[] max = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2920/AbstractIntegerDistribution.java
Used ingredient: final double[] lowerBound = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2921/AbstractIntegerDistribution.java
Used ingredient: final double b = getValidUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2922/AbstractIntegerDistribution.java
Used ingredient: double upperBound = getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2923/AbstractIntegerDistribution.java
Used ingredient: boolean isSupportLowerBoundInclusive();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2924/AbstractIntegerDistribution.java
Used ingredient: int len = upperBounds.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2925/AbstractIntegerDistribution.java
Used ingredient: int rows = m.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2926/AbstractIntegerDistribution.java
Used ingredient: int rows = rm.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2927/AbstractIntegerDistribution.java
Used ingredient: public double[] getLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2928/AbstractIntegerDistribution.java
Used ingredient: abstract double getValidLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2929/AbstractIntegerDistribution.java
Used ingredient: final int nRows = getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2930/AbstractIntegerDistribution.java
Used ingredient: public void testGetSupportUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2931/AbstractIntegerDistribution.java
Used ingredient: final double lowerBound = distribution.getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2932/AbstractIntegerDistribution.java
Used ingredient: final double[] upperBound = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2933/AbstractIntegerDistribution.java
Used ingredient: setup(lowerBound, upperBound);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2934/AbstractIntegerDistribution.java
Used ingredient: prelim(lowerBound, upperBound);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2935/AbstractIntegerDistribution.java
Used ingredient: lowerBound = bounds.getLower();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2936/AbstractIntegerDistribution.java
Used ingredient: final double hi = upperBound[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2937/AbstractIntegerDistribution.java
Used ingredient: final double d2 = upperBound[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2938/AbstractIntegerDistribution.java
Used ingredient: public double[] getUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2939/AbstractIntegerDistribution.java
Used ingredient: public double[] getUpperBounds() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2940/AbstractIntegerDistribution.java
Used ingredient: final long sumFreq = getSumFreq();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2941/AbstractIntegerDistribution.java
Used ingredient: public void testGetLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2942/AbstractIntegerDistribution.java
Used ingredient: abstract double getValidUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2943/AbstractIntegerDistribution.java
Used ingredient: final int rows = m.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2944/AbstractIntegerDistribution.java
Used ingredient: final int rows = x.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2945/AbstractIntegerDistribution.java
Used ingredient: int nRows = matrix.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2946/AbstractIntegerDistribution.java
Used ingredient: final int upper = distribution.getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2947/AbstractIntegerDistribution.java
Used ingredient: distribution.isSupportLowerBoundInclusive());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2948/AbstractIntegerDistribution.java
Used ingredient: return bobyqb(lowerBound, upperBound);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2949/AbstractIntegerDistribution.java
Used ingredient: final int rows    = getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2950/AbstractIntegerDistribution.java
Used ingredient: int rows        = r.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2951/AbstractIntegerDistribution.java
Used ingredient: final int nRows = m.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2952/AbstractIntegerDistribution.java
Used ingredient: final double[] binBounds = getUpperBounds();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2953/AbstractIntegerDistribution.java
Used ingredient: public void testIsSupportLowerBoundInclusive() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2954/AbstractIntegerDistribution.java
Used ingredient: lowerBound, upperBound);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2955/AbstractIntegerDistribution.java
Used ingredient: lowerBound, upperBound));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2956/AbstractIntegerDistribution.java
Used ingredient: start, lower, upper).getPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2957/AbstractIntegerDistribution.java
Used ingredient: int xm = (lower + upper) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2958/AbstractIntegerDistribution.java
Used ingredient: xm = lower + (upper - lower) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2959/AbstractIntegerDistribution.java
Used ingredient: int[] orders = new int[parameters];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2960/AbstractIntegerDistribution.java
Used ingredient: int num = fraction.getNumerator();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2961/AbstractIntegerDistribution.java
Used ingredient: iter = v.getEntries().iterator();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2962/AbstractIntegerDistribution.java
Used ingredient: this.lower   = lower.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2963/AbstractIntegerDistribution.java
Used ingredient: int n = lu.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2964/AbstractIntegerDistribution.java
Used ingredient: final int n = getNumObservations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2965/AbstractIntegerDistribution.java
Used ingredient: final double s = getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2966/AbstractIntegerDistribution.java
Used ingredient: final int expX = getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2967/AbstractIntegerDistribution.java
Used ingredient: final double lo = lowerBound[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2968/AbstractIntegerDistribution.java
Used ingredient: final double d3 = lowerBound[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2969/AbstractIntegerDistribution.java
Used ingredient: final int expX = getExponent(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2970/AbstractIntegerDistribution.java
Used ingredient: final int expY = getExponent(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2971/AbstractIntegerDistribution.java
Used ingredient: final int expY = y.getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2972/AbstractIntegerDistribution.java
Used ingredient: final int length = p1.getLength();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2973/AbstractIntegerDistribution.java
Used ingredient: double getValidLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2974/AbstractIntegerDistribution.java
Used ingredient: final double mid = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2975/AbstractIntegerDistribution.java
Used ingredient: final int len = msgPatterns.size();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2976/AbstractIntegerDistribution.java
Used ingredient: final long r = rng.nextLong();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2977/AbstractIntegerDistribution.java
Used ingredient: final T[] wT = rule.getSecond();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2978/AbstractIntegerDistribution.java
Used ingredient: int n = matrix.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2979/AbstractIntegerDistribution.java
Used ingredient: final int wSize = getWindowSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2980/AbstractIntegerDistribution.java
Used ingredient: final int n = m.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2981/AbstractIntegerDistribution.java
Used ingredient: int maxEval = getMaxEvaluations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2982/AbstractIntegerDistribution.java
Used ingredient: final int dim = getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2983/AbstractIntegerDistribution.java
Used ingredient: return lower + dif * (upper - lower);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2984/AbstractIntegerDistribution.java
Used ingredient: return (x - lower) / (upper - lower);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2985/AbstractIntegerDistribution.java
Used ingredient: double lowerBound, double upperBound)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2986/AbstractIntegerDistribution.java
Used ingredient: final RealMatrix Hpower = H.power(n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2987/AbstractIntegerDistribution.java
Used ingredient: final int rd = mat.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2988/AbstractIntegerDistribution.java
Used ingredient: // determine the lower and upper bounds
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2989/AbstractIntegerDistribution.java
Used ingredient: boolean isSupportUpperBoundInclusive();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2990/AbstractIntegerDistribution.java
Used ingredient: final RealVector x = evt.getSolution();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2991/AbstractIntegerDistribution.java
Used ingredient: int order = covariance.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2992/AbstractIntegerDistribution.java
Used ingredient: public boolean isSupportLowerBoundInclusive() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2993/AbstractIntegerDistribution.java
Used ingredient: ((a > lowerBound) || (b < upperBound)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2994/AbstractIntegerDistribution.java
Used ingredient: final Entry entry = iterator.next();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2995/AbstractIntegerDistribution.java
Used ingredient: final Power monomial = new Power(n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2996/AbstractIntegerDistribution.java
Used ingredient: Line line1 = (Line) getHyperplane();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2997/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(dist.getSupportLowerBound(), 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2998/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(dist.getSupportLowerBound(), 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/2999/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(dist.getSupportLowerBound(), 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3000/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         if (p == 0.0) {
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 106
Used ingredient: if (w == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3001/AbstractIntegerDistribution.java
Used ingredient: if (p == 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3002/AbstractIntegerDistribution.java
Used ingredient: if (s == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3003/AbstractIntegerDistribution.java
Used ingredient: if (y == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3004/AbstractIntegerDistribution.java
Used ingredient: if (d == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3005/AbstractIntegerDistribution.java
Used ingredient: if (f1 == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3006/AbstractIntegerDistribution.java
Used ingredient: if (xi == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3007/AbstractIntegerDistribution.java
Used ingredient: if (xa == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3008/AbstractIntegerDistribution.java
Used ingredient: if (f0 == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3009/AbstractIntegerDistribution.java
Used ingredient: if (fx == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3010/AbstractIntegerDistribution.java
Used ingredient: if (w != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3011/AbstractIntegerDistribution.java
Used ingredient: if (p == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3012/AbstractIntegerDistribution.java
Used ingredient: if (cmp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3013/AbstractIntegerDistribution.java
Used ingredient: if (x <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3014/AbstractIntegerDistribution.java
Used ingredient: if (x == 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3015/AbstractIntegerDistribution.java
Used ingredient: if (b != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3016/AbstractIntegerDistribution.java
Used ingredient: if (s != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3017/AbstractIntegerDistribution.java
Used ingredient: if (a != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3018/AbstractIntegerDistribution.java
Used ingredient: if (p < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3019/AbstractIntegerDistribution.java
Used ingredient: if (p < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3020/AbstractIntegerDistribution.java
Used ingredient: if (paru == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3021/AbstractIntegerDistribution.java
Used ingredient: if (temp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3022/AbstractIntegerDistribution.java
Used ingredient: if (cmp0 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3023/AbstractIntegerDistribution.java
Used ingredient: if (b >= 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3024/AbstractIntegerDistribution.java
Used ingredient: if (y == -1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3025/AbstractIntegerDistribution.java
Used ingredient: if (a >= 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3026/AbstractIntegerDistribution.java
Used ingredient: if (x == -1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3027/AbstractIntegerDistribution.java
Used ingredient: if (di != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3028/AbstractIntegerDistribution.java
Used ingredient: if (xb != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3029/AbstractIntegerDistribution.java
Used ingredient: if (row == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3030/AbstractIntegerDistribution.java
Used ingredient: if (den == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3031/AbstractIntegerDistribution.java
Used ingredient: if (e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3032/AbstractIntegerDistribution.java
Used ingredient: if (r == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3033/AbstractIntegerDistribution.java
Used ingredient: if (rh == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3034/AbstractIntegerDistribution.java
Used ingredient: if (--e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3035/AbstractIntegerDistribution.java
Used ingredient: if (al == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3036/AbstractIntegerDistribution.java
Used ingredient: if (val == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3037/AbstractIntegerDistribution.java
Used ingredient: if (p == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3038/AbstractIntegerDistribution.java
Used ingredient: if (p <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3039/AbstractIntegerDistribution.java
Used ingredient: if (p >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3040/AbstractIntegerDistribution.java
Used ingredient: if (n == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3041/AbstractIntegerDistribution.java
Used ingredient: if (sum == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3042/AbstractIntegerDistribution.java
Used ingredient: if (dpj != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3043/AbstractIntegerDistribution.java
Used ingredient: if (i == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3044/AbstractIntegerDistribution.java
Used ingredient: if (s == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3045/AbstractIntegerDistribution.java
Used ingredient: if (h == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3046/AbstractIntegerDistribution.java
Used ingredient: if (y == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3047/AbstractIntegerDistribution.java
Used ingredient: if (a == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3048/AbstractIntegerDistribution.java
Used ingredient: if (k == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3049/AbstractIntegerDistribution.java
Used ingredient: if (x == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3050/AbstractIntegerDistribution.java
Used ingredient: if (q == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3051/AbstractIntegerDistribution.java
Used ingredient: if (j == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3052/AbstractIntegerDistribution.java
Used ingredient: if (y1 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3053/AbstractIntegerDistribution.java
Used ingredient: if (x1 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3054/AbstractIntegerDistribution.java
Used ingredient: if (s2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3055/AbstractIntegerDistribution.java
Used ingredient: if (c2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3056/AbstractIntegerDistribution.java
Used ingredient: if (y2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3057/AbstractIntegerDistribution.java
Used ingredient: if (dk == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3058/AbstractIntegerDistribution.java
Used ingredient: if (g0 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3059/AbstractIntegerDistribution.java
Used ingredient: if (j == 40) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3060/AbstractIntegerDistribution.java
Used ingredient: if (x <= 0.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3061/AbstractIntegerDistribution.java
Used ingredient: if (x >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3062/AbstractIntegerDistribution.java
Used ingredient: if (msb == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3063/AbstractIntegerDistribution.java
Used ingredient: if (idx == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3064/AbstractIntegerDistribution.java
Used ingredient: if (x >= 0.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3065/AbstractIntegerDistribution.java
Used ingredient: if (p < 0.1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3066/AbstractIntegerDistribution.java
Used ingredient: if (t < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3067/AbstractIntegerDistribution.java
Used ingredient: if (y < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3068/AbstractIntegerDistribution.java
Used ingredient: if (a < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3069/AbstractIntegerDistribution.java
Used ingredient: if (x < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3070/AbstractIntegerDistribution.java
Used ingredient: if (q < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3071/AbstractIntegerDistribution.java
Used ingredient: if (s > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3072/AbstractIntegerDistribution.java
Used ingredient: if (x > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3073/AbstractIntegerDistribution.java
Used ingredient: if (im < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3074/AbstractIntegerDistribution.java
Used ingredient: if (b < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3075/AbstractIntegerDistribution.java
Used ingredient: if (q < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3076/AbstractIntegerDistribution.java
Used ingredient: if (x > 20.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3077/AbstractIntegerDistribution.java
Used ingredient: if (real == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3078/AbstractIntegerDistribution.java
Used ingredient: if (err != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3079/AbstractIntegerDistribution.java
Used ingredient: if (den <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3080/AbstractIntegerDistribution.java
Used ingredient: if (eps < 0.0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3081/AbstractIntegerDistribution.java
Used ingredient: if (norm == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3082/AbstractIntegerDistribution.java
Used ingredient: if (size == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3083/AbstractIntegerDistribution.java
Used ingredient: if (comp >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3084/AbstractIntegerDistribution.java
Used ingredient: if (excp != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3085/AbstractIntegerDistribution.java
Used ingredient: if (det < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3086/AbstractIntegerDistribution.java
Used ingredient: if (diff == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3087/AbstractIntegerDistribution.java
Used ingredient: if (a > 0.097) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3088/AbstractIntegerDistribution.java
Used ingredient: if (a > 0.087) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3089/AbstractIntegerDistribution.java
Used ingredient: if (value == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3090/AbstractIntegerDistribution.java
Used ingredient: if (norm2 == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3091/AbstractIntegerDistribution.java
Used ingredient: if (in[0] == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3092/AbstractIntegerDistribution.java
Used ingredient: if (len <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3093/AbstractIntegerDistribution.java
Used ingredient: if (len == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3094/AbstractIntegerDistribution.java
Used ingredient: if (err != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3095/AbstractIntegerDistribution.java
Used ingredient: if (il == iu) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3096/AbstractIntegerDistribution.java
Used ingredient: if (pos >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3097/AbstractIntegerDistribution.java
Used ingredient: if (pm >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3098/AbstractIntegerDistribution.java
Used ingredient: if (e <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3099/AbstractIntegerDistribution.java
Used ingredient: if (r <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3100/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         if (lower == Integer.MIN_VALUE) {
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 109
Used ingredient: if (lcm == Integer.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3101/AbstractIntegerDistribution.java
Used ingredient: if (numerator==Integer.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3102/AbstractIntegerDistribution.java
Used ingredient: if (x == Integer.MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3103/AbstractIntegerDistribution.java
Used ingredient: if (a == Integer.MIN_VALUE ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3104/AbstractIntegerDistribution.java
Used ingredient: if (num == Integer.MIN_VALUE ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3105/AbstractIntegerDistribution.java
Used ingredient: magnitude == Integer.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3106/AbstractIntegerDistribution.java
Used ingredient: if (bl > Integer.MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3107/AbstractIntegerDistribution.java
Used ingredient: if (upper != Integer.MAX_VALUE)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3108/AbstractIntegerDistribution.java
Used ingredient: den == Integer.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3109/AbstractIntegerDistribution.java
Used ingredient: denominator==Integer.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3110/AbstractIntegerDistribution.java
Used ingredient: if (numerator==Integer.MIN_VALUE ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3111/AbstractIntegerDistribution.java
Used ingredient: if (Integer.MIN_VALUE == b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3112/AbstractIntegerDistribution.java
Used ingredient: b == Integer.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3113/AbstractIntegerDistribution.java
Used ingredient: if (lRow * lCol >= Integer.MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3114/AbstractIntegerDistribution.java
Used ingredient: if (b == Long.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3115/AbstractIntegerDistribution.java
Used ingredient: if (x == Long.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3116/AbstractIntegerDistribution.java
Used ingredient: if (lcm == Long.MIN_VALUE){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3117/AbstractIntegerDistribution.java
Used ingredient: if(Integer.MIN_VALUE == a) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3118/AbstractIntegerDistribution.java
Used ingredient: int bigNeg = Integer.MIN_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3119/AbstractIntegerDistribution.java
Used ingredient: if (x < 0 || x == Integer.MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3120/AbstractIntegerDistribution.java
Used ingredient: int msb = Integer.MIN_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3121/AbstractIntegerDistribution.java
Used ingredient: int max = Integer.MIN_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3122/AbstractIntegerDistribution.java
Used ingredient: int max   = Integer.MIN_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3123/AbstractIntegerDistribution.java
Used ingredient: f = f1.divide(Integer.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3124/AbstractIntegerDistribution.java
Used ingredient: long overflow = Integer.MAX_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3125/AbstractIntegerDistribution.java
Used ingredient: } else if (max < Integer.MAX_VALUE){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3126/AbstractIntegerDistribution.java
Used ingredient: magnitude == Long.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3127/AbstractIntegerDistribution.java
Used ingredient: magnitude == Byte.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3128/AbstractIntegerDistribution.java
Used ingredient: this(checker, 0, Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3129/AbstractIntegerDistribution.java
Used ingredient: if (c == Integer.TYPE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3130/AbstractIntegerDistribution.java
Used ingredient: if (a <= Long.MAX_VALUE - b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3131/AbstractIntegerDistribution.java
Used ingredient: if (a <= Long.MAX_VALUE / b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3132/AbstractIntegerDistribution.java
Used ingredient: if (a >= Long.MAX_VALUE / b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3133/AbstractIntegerDistribution.java
Used ingredient: if (Long.MIN_VALUE / b <= a) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3134/AbstractIntegerDistribution.java
Used ingredient: if (Long.MIN_VALUE - b <= a) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3135/AbstractIntegerDistribution.java
Used ingredient: magnitude == Short.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3136/AbstractIntegerDistribution.java
Used ingredient: int min = Integer.MAX_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3137/AbstractIntegerDistribution.java
Used ingredient: int big = Integer.MAX_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3138/AbstractIntegerDistribution.java
Used ingredient: int min   = Integer.MAX_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3139/AbstractIntegerDistribution.java
Used ingredient: * {@code Integer.MAX_VALUE}).
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3140/AbstractIntegerDistribution.java
Used ingredient: if (threshold < Double.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3141/AbstractIntegerDistribution.java
Used ingredient: f = f1.divide((long) Integer.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3142/AbstractIntegerDistribution.java
Used ingredient: new Fraction(1, Integer.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3143/AbstractIntegerDistribution.java
Used ingredient: final int[] source = { Integer.MIN_VALUE,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3144/AbstractIntegerDistribution.java
Used ingredient: f= new Fraction(Integer.MIN_VALUE, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3145/AbstractIntegerDistribution.java
Used ingredient: lsb     = Integer.MAX_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3146/AbstractIntegerDistribution.java
Used ingredient: *  {@code Integer.MAX_VALUE}
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3147/AbstractIntegerDistribution.java
Used ingredient: f = f2.multiply(Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3148/AbstractIntegerDistribution.java
Used ingredient: f = new Fraction(Integer.MIN_VALUE, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3149/AbstractIntegerDistribution.java
Used ingredient: final int numer = Integer.MAX_VALUE / 99;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3150/AbstractIntegerDistribution.java
Used ingredient: *   {@code gcd(Integer.MIN_VALUE, 0)} and
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3151/AbstractIntegerDistribution.java
Used ingredient: new Fraction(Integer.MIN_VALUE, -1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3152/AbstractIntegerDistribution.java
Used ingredient: int previousCalls = Integer.MAX_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3153/AbstractIntegerDistribution.java
Used ingredient: f1 = new Fraction(Integer.MIN_VALUE, 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3154/AbstractIntegerDistribution.java
Used ingredient: f1 = new Fraction(Integer.MIN_VALUE, 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3155/AbstractIntegerDistribution.java
Used ingredient: if (endSide == Side.MINUS) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3156/AbstractIntegerDistribution.java
Used ingredient: if (goal == GoalType.MINIMIZE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3157/AbstractIntegerDistribution.java
Used ingredient: if (order == RotationOrder.XYZ) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3158/AbstractIntegerDistribution.java
Used ingredient: return Integer.MAX_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3159/AbstractIntegerDistribution.java
Used ingredient: if (type == TransformType.INVERSE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3160/AbstractIntegerDistribution.java
Used ingredient: f= new Fraction(Integer.MAX_VALUE, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3161/AbstractIntegerDistribution.java
Used ingredient: return new MaxIter(Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3162/AbstractIntegerDistribution.java
Used ingredient: return new MaxEval(Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3163/AbstractIntegerDistribution.java
Used ingredient: f1 = new Fraction(1, Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3164/AbstractIntegerDistribution.java
Used ingredient: f2 = new Fraction(1, Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3165/AbstractIntegerDistribution.java
Used ingredient: f = f2.multiply((long) Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3166/AbstractIntegerDistribution.java
Used ingredient: *   {@code gcd(0, Integer.MIN_VALUE)} throw an
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3167/AbstractIntegerDistribution.java
Used ingredient: if (lower >= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3168/AbstractIntegerDistribution.java
Used ingredient: if (lowerBound == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3169/AbstractIntegerDistribution.java
Used ingredient: if (crvmin == MINUS_ONE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3170/AbstractIntegerDistribution.java
Used ingredient: if (x >= LOG_MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3171/AbstractIntegerDistribution.java
Used ingredient: if (tree == tree.parent.plus) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3172/AbstractIntegerDistribution.java
Used ingredient: if (x <= -LOG_MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3173/AbstractIntegerDistribution.java
Used ingredient: if (iter == robustnessIters) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3174/AbstractIntegerDistribution.java
Used ingredient: if (r >= lower && r <= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3175/AbstractIntegerDistribution.java
Used ingredient: if (!(o instanceof MyInteger)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3176/AbstractIntegerDistribution.java
Used ingredient: long min = Long.MIN_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3177/AbstractIntegerDistribution.java
Used ingredient: long max = Long.MIN_VALUE;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3178/AbstractIntegerDistribution.java
Used ingredient: Integer.MIN_VALUE,-1,0,1};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3179/AbstractIntegerDistribution.java
Used ingredient: } else if (endSide == Side.MINUS) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3180/AbstractIntegerDistribution.java
Used ingredient: if (lower.length != upper.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3181/AbstractIntegerDistribution.java
Used ingredient: javaMap.put(Integer.MIN_VALUE, 44.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3182/AbstractIntegerDistribution.java
Used ingredient: .withMaxIterations(Integer.MAX_VALUE)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3183/AbstractIntegerDistribution.java
Used ingredient: f = new Fraction(Integer.MAX_VALUE, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3184/AbstractIntegerDistribution.java
Used ingredient: f= new Fraction(-Integer.MAX_VALUE, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3185/AbstractIntegerDistribution.java
Used ingredient: f1 = new Fraction(1, -Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3186/AbstractIntegerDistribution.java
Used ingredient: f1 = new BigFraction(Integer.MIN_VALUE, 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3187/AbstractIntegerDistribution.java
Used ingredient: * is larger than {@code Integer.MAX_VALUE}.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3188/AbstractIntegerDistribution.java
Used ingredient: if (left.skew == Skew.LEFT_HIGH) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3189/AbstractIntegerDistribution.java
Used ingredient: if (coeff <= Precision.SAFE_MIN) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3190/AbstractIntegerDistribution.java
Used ingredient: if (xbdi.getEntry(i) == MINUS_ONE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3191/AbstractIntegerDistribution.java
Used ingredient: f1 = new Fraction(Integer.MAX_VALUE, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3192/AbstractIntegerDistribution.java
Used ingredient: ArithmeticUtils.gcd(0, Integer.MIN_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3193/AbstractIntegerDistribution.java
Used ingredient: new SearchInterval(Double.MIN_VALUE,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3194/AbstractIntegerDistribution.java
Used ingredient: if (denominator==Integer.MIN_VALUE && (numerator&1)==0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3195/AbstractIntegerDistribution.java
Used ingredient: if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3196/AbstractIntegerDistribution.java
Used ingredient: if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3197/AbstractIntegerDistribution.java
Used ingredient: f1 = new BigFraction(1, Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3198/AbstractIntegerDistribution.java
Used ingredient: f2 = new BigFraction(1, Integer.MAX_VALUE);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3199/AbstractIntegerDistribution.java
Used ingredient: * {@code gcd(Long.MIN_VALUE, 0L)} and
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3200/AbstractIntegerDistribution.java
SuspiciousModificationPoint:             lower -= 1; // this ensures cumulativeProbability(lower) < p, which
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 114
Used ingredient: * @param lower a value satisfying {@code cumulativeProbability(lower) < p}
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3201/AbstractIntegerDistribution.java
Used ingredient: final double kBminus = kernel.cumulativeProbability(lower);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3202/AbstractIntegerDistribution.java
Used ingredient: double direct = distribution.cumulativeProbability(lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3203/AbstractIntegerDistribution.java
Used ingredient: while (cumulativeProbability(lowerBound) >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3204/AbstractIntegerDistribution.java
Used ingredient: diceDistribution.cumulativeProbability(lower, upper), 1E-12);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3205/AbstractIntegerDistribution.java
Used ingredient: return solveInverseCumulativeProbability(p, lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3206/AbstractIntegerDistribution.java
Used ingredient: * value as {@code inverseCumulativeProbability(0)}. In other words, this
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3207/AbstractIntegerDistribution.java
Used ingredient: * value as {@code inverseCumulativeProbability(1)}. In other words, this
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3208/AbstractIntegerDistribution.java
Used ingredient: final double kernelCum = kernel.cumulativeProbability(lower, testPoints[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3209/AbstractIntegerDistribution.java
Used ingredient: final double withinBinKernelMass = kernel.cumulativeProbability(lower, upper);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3210/AbstractIntegerDistribution.java
Used ingredient: if (checkedCumulativeProbability(lower) >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3211/AbstractIntegerDistribution.java
Used ingredient: while (cumulativeProbability(upperBound) < p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3212/AbstractIntegerDistribution.java
Used ingredient: 0.0, distribution.cumulativeProbability(lower - 1), 0.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3213/AbstractIntegerDistribution.java
Used ingredient: return i == 0 ? kernel.cumulativeProbability(min, binBounds[0]) :
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3214/AbstractIntegerDistribution.java
Used ingredient: double p = 2 * (1 - tDistribution.cumulativeProbability(t));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3215/AbstractIntegerDistribution.java
Used ingredient: * the derivative of the {@link #cumulativeProbability(double) CDF}.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3216/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(cumes[i], d.cumulativeProbability(x[i]), 1e-8);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3217/AbstractIntegerDistribution.java
Used ingredient: lowerBinMass = poissonDistribution.cumulativeProbability(lower - 1, lower + binWidth - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3218/AbstractIntegerDistribution.java
Used ingredient: double upper = 1.0 - dist.cumulativeProbability(k) + dist.probability(k);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3219/AbstractIntegerDistribution.java
Used ingredient: * that the inverse cumulative probability lies in the bracket {@code
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3220/AbstractIntegerDistribution.java
Used ingredient: (kernel.cumulativeProbability(x) -  kernel.cumulativeProbability(lower)) / kB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3221/AbstractIntegerDistribution.java
Used ingredient: expected[0] = poissonDistribution.cumulativeProbability(lower - 1) * sampleSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3222/AbstractIntegerDistribution.java
Used ingredient: double lowerTail = distribution.cumulativeProbability(-i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3223/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(double p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3224/AbstractIntegerDistribution.java
Used ingredient: double diff = distribution.cumulativeProbability(upper) -
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3225/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(final double p)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3226/AbstractIntegerDistribution.java
Used ingredient: return 1 - distribution.cumulativeProbability(chiSquare(counts));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3227/AbstractIntegerDistribution.java
Used ingredient: * Creates the default inverse cumulative probability test expected
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3228/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(d.cumulativeProbability(Double.MAX_VALUE), 1, 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3229/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(d.cumulativeProbability(-Double.MAX_VALUE), 0, 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3230/AbstractIntegerDistribution.java
Used ingredient: * Tests if the distribution returns proper cumulative probability values.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3231/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(double x)  {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3232/AbstractIntegerDistribution.java
Used ingredient: public void testDegenerateInverseCumulativeProbability() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3233/AbstractIntegerDistribution.java
Used ingredient: lower, distribution.inverseCumulativeProbability(0.0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3234/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(final double x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3235/AbstractIntegerDistribution.java
Used ingredient: double result = f.inverseCumulativeProbability(prob);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3236/AbstractIntegerDistribution.java
Used ingredient: public double inverseCumulativeProbability(double p)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3237/AbstractIntegerDistribution.java
Used ingredient: // another way to calculate the upper cumulative probability
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3238/AbstractIntegerDistribution.java
Used ingredient: out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3239/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(double x0, double x1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3240/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(p > dist.cumulativeProbability(ret - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3241/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.0, dist.cumulativeProbability(1), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3242/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.1, dist.cumulativeProbability(2), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3243/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.2, dist.cumulativeProbability(2), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3244/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.6, dist.cumulativeProbability(10), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3245/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(1.0, dist.cumulativeProbability(15), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3246/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.8, dist.cumulativeProbability(12), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3247/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(0.8, dist.cumulativeProbability(13), tol);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3248/AbstractIntegerDistribution.java
Used ingredient: * <li>{@link #solveInverseCumulativeProbability(double, int, int)} for
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3249/AbstractIntegerDistribution.java
Used ingredient: double actual = getDistribution().cumulativeProbability(0.25, 0.75);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3250/AbstractIntegerDistribution.java
Used ingredient: // cf. AbstractRealDistribution.inverseCumulativeProbability(double)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3251/AbstractIntegerDistribution.java
Used ingredient: return distribution.inverseCumulativeProbability(nextUniform(0, 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3252/AbstractIntegerDistribution.java
Used ingredient: * @param upper a value satisfying {@code p <= cumulativeProbability(upper)}
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3253/AbstractIntegerDistribution.java
Used ingredient: double inverseCumulativeProbability(double p) throws OutOfRangeException;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3254/AbstractIntegerDistribution.java
Used ingredient: * {@link #inverseCumulativeProbability(double)} (no solver is invoked).
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3255/AbstractIntegerDistribution.java
Used ingredient: double probability = testDistribution.cumulativeProbability(points[p]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3256/AbstractIntegerDistribution.java
Used ingredient: * Creates the default inverse cumulative probability test input values.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3257/AbstractIntegerDistribution.java
Used ingredient: final double actual = distribution.inverseCumulativeProbability(p12);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3258/AbstractIntegerDistribution.java
Used ingredient: final double actual = distribution.inverseCumulativeProbability(p23);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3259/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(double x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3260/AbstractIntegerDistribution.java
Used ingredient: public void testLargeMeanInverseCumulativeProbability() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3261/AbstractIntegerDistribution.java
Used ingredient: public double cumulativeProbability(final int x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3262/AbstractIntegerDistribution.java
Used ingredient: // verify cumulativeProbability(double, double)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3263/AbstractIntegerDistribution.java
Used ingredient: double upperTail = distribution.cumulativeProbability(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3264/AbstractIntegerDistribution.java
Used ingredient: quantiles[1] = distribution.inverseCumulativeProbability(0.5d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3265/AbstractIntegerDistribution.java
Used ingredient: distribution.cumulativeProbability(lower);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3266/AbstractIntegerDistribution.java
Used ingredient: quantiles[0] = distribution.inverseCumulativeProbability(0.25d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3267/AbstractIntegerDistribution.java
Used ingredient: quantiles[2] = distribution.inverseCumulativeProbability(0.75d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3268/AbstractIntegerDistribution.java
Used ingredient: double actualCdf1 = dist.upperCumulativeProbability(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3269/AbstractIntegerDistribution.java
Used ingredient: ret = innerCumulativeProbability(domain[0], x, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3270/AbstractIntegerDistribution.java
Used ingredient: private double innerCumulativeProbability(int x0, int x1, int dx) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3271/AbstractIntegerDistribution.java
Used ingredient: ret = innerCumulativeProbability(domain[1], x, -1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3272/AbstractIntegerDistribution.java
Used ingredient: 1.0, distribution.cumulativeProbability(upper), 0.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3273/AbstractIntegerDistribution.java
Used ingredient: /** Creates the default cumulative probability test input values */
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3274/AbstractIntegerDistribution.java
Used ingredient: double actual = distribution.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3275/AbstractIntegerDistribution.java
Used ingredient: res[i] = 1.0 - td.cumulativeProbability(args[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3276/AbstractIntegerDistribution.java
Used ingredient: Assert.assertTrue(p <= dist.cumulativeProbability(ret));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3277/AbstractIntegerDistribution.java
Used ingredient: return 2d * (1.0 - distribution.cumulativeProbability(
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3278/AbstractIntegerDistribution.java
Used ingredient: kernel.cumulativeProbability(binBounds[i - 1], binBounds[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3279/AbstractIntegerDistribution.java
Used ingredient: * where <code>F</code> is the F value and <code>cumulativeProbability</code>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3280/AbstractIntegerDistribution.java
Used ingredient: * Creates the default inverse cumulative probability density test expected
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3281/AbstractIntegerDistribution.java
Used ingredient: int inverseCumulativeProbability(double p) throws OutOfRangeException;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3282/AbstractIntegerDistribution.java
Used ingredient: Assert.assertFalse("NaN cumulative probability returned for mean = " +
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3283/AbstractIntegerDistribution.java
Used ingredient: * Creates the default cumulative probability distribution test input
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3284/AbstractIntegerDistribution.java
Used ingredient: * @param inverseCumAccuracy Inverse cumulative probability accuracy.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3285/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(2.5e-10, dist.inverseCumulativeProbability(0.25), 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3286/AbstractIntegerDistribution.java
Used ingredient: * Creates the default cumulative probability density test input values.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3287/AbstractIntegerDistribution.java
Used ingredient: * Maximum number of iterations for cumulative probability. Cumulative
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3288/AbstractIntegerDistribution.java
Used ingredient: if (cumulativeProbability(midPoint) < px) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3289/AbstractIntegerDistribution.java
Used ingredient: public void testLargeMeanCumulativeProbability() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3290/AbstractIntegerDistribution.java
Used ingredient: int ret = dist.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3291/AbstractIntegerDistribution.java
Used ingredient: public void testInverseCumulativeProbabilityExtremes() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3292/AbstractIntegerDistribution.java
Used ingredient: // verify cumulativeProbability(double)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3293/AbstractIntegerDistribution.java
Used ingredient: return cumulativeProbability(x) - p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3294/AbstractIntegerDistribution.java
Used ingredient: protected void verifyInverseCumulativeProbabilities() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3295/AbstractIntegerDistribution.java
Used ingredient: double x = fd.inverseCumulativeProbability(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3296/AbstractIntegerDistribution.java
Used ingredient: public void testCumulativeProbabilityAgainstStackOverflow() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3297/AbstractIntegerDistribution.java
Used ingredient: return 1.0 - fdist.cumulativeProbability(a.F);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3298/AbstractIntegerDistribution.java
Used ingredient: *   p = 1 - cumulativeProbability(F)</pre>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3299/AbstractIntegerDistribution.java
Used ingredient: double actual = distribution.cumulativeProbability(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3300/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         int upper = getSupportUpperBound();
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 118
Used ingredient: int lower = getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3301/AbstractIntegerDistribution.java
Used ingredient: return getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3302/AbstractIntegerDistribution.java
Used ingredient: int getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3303/AbstractIntegerDistribution.java
Used ingredient: double upperBound = getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3304/AbstractIntegerDistribution.java
Used ingredient: public int getSupportUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3305/AbstractIntegerDistribution.java
Used ingredient: double getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3306/AbstractIntegerDistribution.java
Used ingredient: public double getSupportUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3307/AbstractIntegerDistribution.java
Used ingredient: return getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3308/AbstractIntegerDistribution.java
Used ingredient: int getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3309/AbstractIntegerDistribution.java
Used ingredient: final double[] uB = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3310/AbstractIntegerDistribution.java
Used ingredient: public int getSupportLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3311/AbstractIntegerDistribution.java
Used ingredient: double getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3312/AbstractIntegerDistribution.java
Used ingredient: final double[] max = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3313/AbstractIntegerDistribution.java
Used ingredient: final int upper = distribution.getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3314/AbstractIntegerDistribution.java
Used ingredient: public double getSupportLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3315/AbstractIntegerDistribution.java
Used ingredient: final double b = getValidUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3316/AbstractIntegerDistribution.java
Used ingredient: if (x - dx >= getSupportLowerBound()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3317/AbstractIntegerDistribution.java
Used ingredient: final double[] upperBound = getUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3318/AbstractIntegerDistribution.java
Used ingredient: final double[] lB = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3319/AbstractIntegerDistribution.java
Used ingredient: double lowerBound = getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3320/AbstractIntegerDistribution.java
Used ingredient: public void testGetSupportUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3321/AbstractIntegerDistribution.java
Used ingredient: final double[] min = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3322/AbstractIntegerDistribution.java
Used ingredient: final double a = getValidLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3323/AbstractIntegerDistribution.java
Used ingredient: public double[] getUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3324/AbstractIntegerDistribution.java
Used ingredient: public double[] getUpperBounds() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3325/AbstractIntegerDistribution.java
Used ingredient: abstract double getValidUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3326/AbstractIntegerDistribution.java
Used ingredient: boolean isSupportUpperBoundInclusive();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3327/AbstractIntegerDistribution.java
Used ingredient: final double upperBound = distribution.getSupportUpperBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3328/AbstractIntegerDistribution.java
Used ingredient: final double[] binBounds = getUpperBounds();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3329/AbstractIntegerDistribution.java
Used ingredient: this.upper   = upper.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3330/AbstractIntegerDistribution.java
Used ingredient: upperBound = bounds.getUpper();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3331/AbstractIntegerDistribution.java
Used ingredient: final double hi = upperBound[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3332/AbstractIntegerDistribution.java
Used ingredient: int len = upperBounds.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3333/AbstractIntegerDistribution.java
Used ingredient: final double d2 = upperBound[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3334/AbstractIntegerDistribution.java
Used ingredient: final int lower = distribution.getSupportLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3335/AbstractIntegerDistribution.java
Used ingredient: distribution.isSupportUpperBoundInclusive());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3336/AbstractIntegerDistribution.java
Used ingredient: public void testGetSupportLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3337/AbstractIntegerDistribution.java
Used ingredient: final double[] lowerBound = getLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3338/AbstractIntegerDistribution.java
Used ingredient: iter = v.getEntries().iterator();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3339/AbstractIntegerDistribution.java
Used ingredient: int num = fraction.getNumerator();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3340/AbstractIntegerDistribution.java
Used ingredient: final int n = getNumObservations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3341/AbstractIntegerDistribution.java
Used ingredient: public double[] getLowerBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3342/AbstractIntegerDistribution.java
Used ingredient: public void testGetUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3343/AbstractIntegerDistribution.java
Used ingredient: int rows = m.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3344/AbstractIntegerDistribution.java
Used ingredient: int rows = rm.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3345/AbstractIntegerDistribution.java
Used ingredient: final Dfp zero = x.getZero();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3346/AbstractIntegerDistribution.java
Used ingredient: final long sumFreq = getSumFreq();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3347/AbstractIntegerDistribution.java
Used ingredient: final double mid = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3348/AbstractIntegerDistribution.java
Used ingredient: final double b1 = getSlope();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3349/AbstractIntegerDistribution.java
Used ingredient: * by {@link #getUpperBounds()}.</p>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3350/AbstractIntegerDistribution.java
Used ingredient: final double s = getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3351/AbstractIntegerDistribution.java
Used ingredient: double getValidUpperBound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3352/AbstractIntegerDistribution.java
Used ingredient: setup(lowerBound, upperBound);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3353/AbstractIntegerDistribution.java
Used ingredient: final int pI = previousIndex(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3354/AbstractIntegerDistribution.java
Used ingredient: final int pK = previousIndex(k);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3355/AbstractIntegerDistribution.java
Used ingredient: final int pJ = previousIndex(j);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3356/AbstractIntegerDistribution.java
Used ingredient: final int expY = y.getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3357/AbstractIntegerDistribution.java
Used ingredient: final int expX = getExponent();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3358/AbstractIntegerDistribution.java
Used ingredient: final int expX = getExponent(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3359/AbstractIntegerDistribution.java
Used ingredient: final int expY = getExponent(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3360/AbstractIntegerDistribution.java
Used ingredient: upperBounds[i] = upperBounds[i-1] +
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3361/AbstractIntegerDistribution.java
Used ingredient: abstract double getValidLowerBound();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3362/AbstractIntegerDistribution.java
Used ingredient: public double[] getGeneratorUpperBounds() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3363/AbstractIntegerDistribution.java
Used ingredient: public void testIsSupportUpperBoundInclusive() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3364/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(dist.getSupportUpperBound(), 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3365/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(dist.getSupportUpperBound(), 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3366/AbstractIntegerDistribution.java
Used ingredient: Assert.assertEquals(dist.getSupportUpperBound(), 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3367/AbstractIntegerDistribution.java
Used ingredient: final T zero = getField().getZero();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3368/AbstractIntegerDistribution.java
Used ingredient: final double[] params = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3369/AbstractIntegerDistribution.java
Used ingredient: final double mse = getMeanSquareError();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3370/AbstractIntegerDistribution.java
Used ingredient: final double[] init = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3371/AbstractIntegerDistribution.java
Used ingredient: int[] counts = getQuinticEvalCounts();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3372/AbstractIntegerDistribution.java
Used ingredient: final int n = vector.getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3373/AbstractIntegerDistribution.java
Used ingredient: int p = getX().getColumnDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3374/AbstractIntegerDistribution.java
Used ingredient: upperBounds[i] - upperBounds[i - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3375/AbstractIntegerDistribution.java
Used ingredient: public boolean isSupportUpperBoundInclusive() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3376/AbstractIntegerDistribution.java
Used ingredient: final double[] guess = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3377/AbstractIntegerDistribution.java
Used ingredient: final double[] point = getStartPoint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3378/AbstractIntegerDistribution.java
Used ingredient: boolean isSupportLowerBoundInclusive();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3379/AbstractIntegerDistribution.java
Used ingredient: final int value = generator.nextInt(n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3380/AbstractIntegerDistribution.java
Used ingredient: final RealVector x = evt.getSolution();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3381/AbstractIntegerDistribution.java
Used ingredient: iter = other.getEntries().iterator();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3382/AbstractIntegerDistribution.java
Used ingredient: final double N = getPopulationSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3383/AbstractIntegerDistribution.java
Used ingredient: final double mn = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3384/AbstractIntegerDistribution.java
Used ingredient: final double mu = getNumericalMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3385/AbstractIntegerDistribution.java
Used ingredient: difference <= getAbsoluteThreshold();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3386/AbstractIntegerDistribution.java
Used ingredient: public void testGetBinUpperBounds() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3387/AbstractIntegerDistribution.java
Used ingredient: final int rows = m.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3388/AbstractIntegerDistribution.java
Used ingredient: final int rows = x.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3389/AbstractIntegerDistribution.java
Used ingredient: final int rd = mat.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3390/AbstractIntegerDistribution.java
Used ingredient: int eval1   = gauss.getEvaluations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3391/AbstractIntegerDistribution.java
Used ingredient: int eval2   = gauss.getEvaluations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3392/AbstractIntegerDistribution.java
Used ingredient: int columns = m.getColumnDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3393/AbstractIntegerDistribution.java
Used ingredient: Iterator iter = entries.iterator();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3394/AbstractIntegerDistribution.java
Used ingredient: iter = entries.iterator();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3395/AbstractIntegerDistribution.java
Used ingredient: int[] orders = new int[parameters];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3396/AbstractIntegerDistribution.java
Used ingredient: final T zero = field.getZero();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3397/AbstractIntegerDistribution.java
Used ingredient: final int len = msgPatterns.size();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3398/AbstractIntegerDistribution.java
Used ingredient: mappers[i] = new NoBoundsMapper();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3399/AbstractIntegerDistribution.java
Used ingredient: int n = matrix.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3400/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         if (p == 1.0) {
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 119
Used ingredient: if (p == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3401/AbstractIntegerDistribution.java
Used ingredient: if (x == 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3402/AbstractIntegerDistribution.java
Used ingredient: if (y == -1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3403/AbstractIntegerDistribution.java
Used ingredient: if (x == -1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3404/AbstractIntegerDistribution.java
Used ingredient: if (cmp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3405/AbstractIntegerDistribution.java
Used ingredient: if (p == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3406/AbstractIntegerDistribution.java
Used ingredient: if (p == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3407/AbstractIntegerDistribution.java
Used ingredient: if (w == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3408/AbstractIntegerDistribution.java
Used ingredient: if (p < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3409/AbstractIntegerDistribution.java
Used ingredient: if (s == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3410/AbstractIntegerDistribution.java
Used ingredient: if (y == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3411/AbstractIntegerDistribution.java
Used ingredient: if (d == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3412/AbstractIntegerDistribution.java
Used ingredient: if (x >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3413/AbstractIntegerDistribution.java
Used ingredient: if (paru == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3414/AbstractIntegerDistribution.java
Used ingredient: if (temp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3415/AbstractIntegerDistribution.java
Used ingredient: if (cmp0 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3416/AbstractIntegerDistribution.java
Used ingredient: if (f1 == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3417/AbstractIntegerDistribution.java
Used ingredient: if (xi == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3418/AbstractIntegerDistribution.java
Used ingredient: if (xa == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3419/AbstractIntegerDistribution.java
Used ingredient: if (f0 == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3420/AbstractIntegerDistribution.java
Used ingredient: if (fx == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3421/AbstractIntegerDistribution.java
Used ingredient: if (b >= 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3422/AbstractIntegerDistribution.java
Used ingredient: if (a >= 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3423/AbstractIntegerDistribution.java
Used ingredient: if (row == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3424/AbstractIntegerDistribution.java
Used ingredient: if (len == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3425/AbstractIntegerDistribution.java
Used ingredient: if (sum == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3426/AbstractIntegerDistribution.java
Used ingredient: if (den == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3427/AbstractIntegerDistribution.java
Used ingredient: if (e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3428/AbstractIntegerDistribution.java
Used ingredient: if (r == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3429/AbstractIntegerDistribution.java
Used ingredient: if (rh == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3430/AbstractIntegerDistribution.java
Used ingredient: if (--e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3431/AbstractIntegerDistribution.java
Used ingredient: if (p <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3432/AbstractIntegerDistribution.java
Used ingredient: if (p <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3433/AbstractIntegerDistribution.java
Used ingredient: if (p >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3434/AbstractIntegerDistribution.java
Used ingredient: if (dpj != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3435/AbstractIntegerDistribution.java
Used ingredient: if (p != -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3436/AbstractIntegerDistribution.java
Used ingredient: if (val == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3437/AbstractIntegerDistribution.java
Used ingredient: if (w != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3438/AbstractIntegerDistribution.java
Used ingredient: if (al == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3439/AbstractIntegerDistribution.java
Used ingredient: if (x <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3440/AbstractIntegerDistribution.java
Used ingredient: if (msb == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3441/AbstractIntegerDistribution.java
Used ingredient: if (p < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3442/AbstractIntegerDistribution.java
Used ingredient: if (b != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3443/AbstractIntegerDistribution.java
Used ingredient: if (s != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3444/AbstractIntegerDistribution.java
Used ingredient: if (a != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3445/AbstractIntegerDistribution.java
Used ingredient: if (n == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3446/AbstractIntegerDistribution.java
Used ingredient: if (i == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3447/AbstractIntegerDistribution.java
Used ingredient: if (s == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3448/AbstractIntegerDistribution.java
Used ingredient: if (h == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3449/AbstractIntegerDistribution.java
Used ingredient: if (y == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3450/AbstractIntegerDistribution.java
Used ingredient: if (a == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3451/AbstractIntegerDistribution.java
Used ingredient: if (k == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3452/AbstractIntegerDistribution.java
Used ingredient: if (x == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3453/AbstractIntegerDistribution.java
Used ingredient: if (q == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3454/AbstractIntegerDistribution.java
Used ingredient: if (j == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3455/AbstractIntegerDistribution.java
Used ingredient: if (y1 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3456/AbstractIntegerDistribution.java
Used ingredient: if (x1 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3457/AbstractIntegerDistribution.java
Used ingredient: if (s2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3458/AbstractIntegerDistribution.java
Used ingredient: if (c2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3459/AbstractIntegerDistribution.java
Used ingredient: if (y2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3460/AbstractIntegerDistribution.java
Used ingredient: if (dk == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3461/AbstractIntegerDistribution.java
Used ingredient: if (g0 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3462/AbstractIntegerDistribution.java
Used ingredient: if (j == 40) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3463/AbstractIntegerDistribution.java
Used ingredient: if (idx == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3464/AbstractIntegerDistribution.java
Used ingredient: if (n == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3465/AbstractIntegerDistribution.java
Used ingredient: if (n == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3466/AbstractIntegerDistribution.java
Used ingredient: if (k == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3467/AbstractIntegerDistribution.java
Used ingredient: if (i == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3468/AbstractIntegerDistribution.java
Used ingredient: if (k == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3469/AbstractIntegerDistribution.java
Used ingredient: if (x == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3470/AbstractIntegerDistribution.java
Used ingredient: if (j == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3471/AbstractIntegerDistribution.java
Used ingredient: if (x == x1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3472/AbstractIntegerDistribution.java
Used ingredient: if (j == 41) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3473/AbstractIntegerDistribution.java
Used ingredient: if (b < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3474/AbstractIntegerDistribution.java
Used ingredient: if (q < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3475/AbstractIntegerDistribution.java
Used ingredient: if (z < 15.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3476/AbstractIntegerDistribution.java
Used ingredient: if (norm == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3477/AbstractIntegerDistribution.java
Used ingredient: if (size == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3478/AbstractIntegerDistribution.java
Used ingredient: if (comp >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3479/AbstractIntegerDistribution.java
Used ingredient: if (excp != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3480/AbstractIntegerDistribution.java
Used ingredient: if (di != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3481/AbstractIntegerDistribution.java
Used ingredient: if (xb != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3482/AbstractIntegerDistribution.java
Used ingredient: if (diff == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3483/AbstractIntegerDistribution.java
Used ingredient: if (x * x == 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3484/AbstractIntegerDistribution.java
Used ingredient: if (err != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3485/AbstractIntegerDistribution.java
Used ingredient: if (u <= p1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3486/AbstractIntegerDistribution.java
Used ingredient: if (pos >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3487/AbstractIntegerDistribution.java
Used ingredient: if (pm >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3488/AbstractIntegerDistribution.java
Used ingredient: if (len <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3489/AbstractIntegerDistribution.java
Used ingredient: if (il == iu) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3490/AbstractIntegerDistribution.java
Used ingredient: if (e <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3491/AbstractIntegerDistribution.java
Used ingredient: if (r <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3492/AbstractIntegerDistribution.java
Used ingredient: if (1 == n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3493/AbstractIntegerDistribution.java
Used ingredient: if (e >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3494/AbstractIntegerDistribution.java
Used ingredient: if (rh != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3495/AbstractIntegerDistribution.java
Used ingredient: if (arg >= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3496/AbstractIntegerDistribution.java
Used ingredient: if (mu >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3497/AbstractIntegerDistribution.java
Used ingredient: if (fLo <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3498/AbstractIntegerDistribution.java
Used ingredient: if (im == il) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3499/AbstractIntegerDistribution.java
Used ingredient: if (exp < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3500/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         if (p < 0.0 || p > 1.0) {
At: AbstractIntegerDistribution.java org.apache.commons.math3.distribution.AbstractIntegerDistribution
Line number: 101
Used ingredient: if (p <= 0 || p > 100) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3501/AbstractIntegerDistribution.java
Used ingredient: if (p <= 0 || p > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3502/AbstractIntegerDistribution.java
Used ingredient: if (p < 0 || p > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3503/AbstractIntegerDistribution.java
Used ingredient: if (x <= -1.0 || x >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3504/AbstractIntegerDistribution.java
Used ingredient: if (x > 1.0 || x < -1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3505/AbstractIntegerDistribution.java
Used ingredient: if (r < 0 || r > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3506/AbstractIntegerDistribution.java
Used ingredient: if (y < 0 || y > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3507/AbstractIntegerDistribution.java
Used ingredient: if (x < 0 || x > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3508/AbstractIntegerDistribution.java
Used ingredient: if (z < 0 || z > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3509/AbstractIntegerDistribution.java
Used ingredient: if (val < 0 || val > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3510/AbstractIntegerDistribution.java
Used ingredient: if ((b < 1.0) || (b > 2.0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3511/AbstractIntegerDistribution.java
Used ingredient: if ((a < 1.0) || (a > 2.0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3512/AbstractIntegerDistribution.java
Used ingredient: if (y > 0.0 || 1 / y > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3513/AbstractIntegerDistribution.java
Used ingredient: if (i < 0 || i >1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3514/AbstractIntegerDistribution.java
Used ingredient: if (x0 <= 0 || x1 <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3515/AbstractIntegerDistribution.java
Used ingredient: if (y < 0 || 1 / y < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3516/AbstractIntegerDistribution.java
Used ingredient: if (y > 0 || 1 / y > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3517/AbstractIntegerDistribution.java
Used ingredient: if (y < 0 || invy < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3518/AbstractIntegerDistribution.java
Used ingredient: if (x < 0 || invx < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3519/AbstractIntegerDistribution.java
Used ingredient: if (i < 0 | i > n - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3520/AbstractIntegerDistribution.java
Used ingredient: if ((a < 0) || (a > b)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3521/AbstractIntegerDistribution.java
Used ingredient: if ((p > 100) || (p <= 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3522/AbstractIntegerDistribution.java
Used ingredient: if (x < 0 || x >= RADIX) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3523/AbstractIntegerDistribution.java
Used ingredient: if (t == 0.0 && i >= j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3524/AbstractIntegerDistribution.java
Used ingredient: if (x < 1 || x > 6) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3525/AbstractIntegerDistribution.java
Used ingredient: if (x < lo || x > hi) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3526/AbstractIntegerDistribution.java
Used ingredient: if (x < min || x > max) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3527/AbstractIntegerDistribution.java
Used ingredient: if (c == 0.0 && d == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3528/AbstractIntegerDistribution.java
Used ingredient: if (x.exp < -1 || x.exp > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3529/AbstractIntegerDistribution.java
Used ingredient: if ((x < x0) || (x > x3)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3530/AbstractIntegerDistribution.java
Used ingredient: if ((x < x0) || (x > x4)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3531/AbstractIntegerDistribution.java
Used ingredient: if (ratio < 0.0d || ratio > 1.0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3532/AbstractIntegerDistribution.java
Used ingredient: if (alpha <= 0 || alpha > 0.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3533/AbstractIntegerDistribution.java
Used ingredient: if (a == 0 || b == 0){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3534/AbstractIntegerDistribution.java
Used ingredient: if ((u == 0) || (v == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3535/AbstractIntegerDistribution.java
Used ingredient: if ((q0 < -0.1) || (q0 > 0.1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3536/AbstractIntegerDistribution.java
Used ingredient: if ((i < j) || (i > j + 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3537/AbstractIntegerDistribution.java
Used ingredient: if (factor < 0 || factor > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3538/AbstractIntegerDistribution.java
Used ingredient: if (x * x > 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3539/AbstractIntegerDistribution.java
Used ingredient: if (i - j + 1 > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3540/AbstractIntegerDistribution.java
Used ingredient: if (v < -t && a == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3541/AbstractIntegerDistribution.java
Used ingredient: if (fp <= 0.1 * delta) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3542/AbstractIntegerDistribution.java
Used ingredient: } else if (x < a + 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3543/AbstractIntegerDistribution.java
Used ingredient: if (x != x || y != y) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3544/AbstractIntegerDistribution.java
Used ingredient: if (x < 0 && y != x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3545/AbstractIntegerDistribution.java
Used ingredient: while (k <= j && k > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3546/AbstractIntegerDistribution.java
Used ingredient: if ((fb > 0 && fc > 0) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3547/AbstractIntegerDistribution.java
Used ingredient: if ((n == k) || (k == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3548/AbstractIntegerDistribution.java
Used ingredient: if (xLen == 0 || hLen == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3549/AbstractIntegerDistribution.java
Used ingredient: if (in < -1 || in >= nvars) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3550/AbstractIntegerDistribution.java
Used ingredient: if (nRows < 2 || nCols < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3551/AbstractIntegerDistribution.java
Used ingredient: if ((i < j - 1) || (i > j)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3552/AbstractIntegerDistribution.java
Used ingredient: if (x < lower || x > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3553/AbstractIntegerDistribution.java
Used ingredient: if ((alpha <= 0) || (alpha > 0.5)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3554/AbstractIntegerDistribution.java
Used ingredient: if (alpha >= 1 || alpha <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3555/AbstractIntegerDistribution.java
Used ingredient: if (trial != 0 || nsqd != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3556/AbstractIntegerDistribution.java
Used ingredient: if ((k < e) || (k > offset)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3557/AbstractIntegerDistribution.java
Used ingredient: if ((end < 0) || (end >= dim)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3558/AbstractIntegerDistribution.java
Used ingredient: if (p < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3559/AbstractIntegerDistribution.java
Used ingredient: if (p < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3560/AbstractIntegerDistribution.java
Used ingredient: if (x * x == 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3561/AbstractIntegerDistribution.java
Used ingredient: if (p < 0.1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3562/AbstractIntegerDistribution.java
Used ingredient: if (y[0] >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3563/AbstractIntegerDistribution.java
Used ingredient: if (eps < 0.0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3564/AbstractIntegerDistribution.java
Used ingredient: if (x * x < 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3565/AbstractIntegerDistribution.java
Used ingredient: if (pa * pc <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3566/AbstractIntegerDistribution.java
Used ingredient: if (k < n - 100) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3567/AbstractIntegerDistribution.java
Used ingredient: if (norm < 1.0e-10) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3568/AbstractIntegerDistribution.java
Used ingredient: if (i - j + 1 < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3569/AbstractIntegerDistribution.java
Used ingredient: if (fa * fb > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3570/AbstractIntegerDistribution.java
Used ingredient: if (interpError > 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3571/AbstractIntegerDistribution.java
Used ingredient: if (sdec <= qred * .01) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3572/AbstractIntegerDistribution.java
Used ingredient: if (delta <= rho * 1.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3573/AbstractIntegerDistribution.java
Used ingredient: if (a <= x && x < c) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3574/AbstractIntegerDistribution.java
Used ingredient: if (c < x && x <= b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3575/AbstractIntegerDistribution.java
Used ingredient: {    0.0,    1.0, 0.0 },
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3576/AbstractIntegerDistribution.java
Used ingredient: if (numEval <= 2 * n + 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3577/AbstractIntegerDistribution.java
Used ingredient: if (nRows < 2 || nCols < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3578/AbstractIntegerDistribution.java
Used ingredient: if (n != 0 || discarded != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3579/AbstractIntegerDistribution.java
Used ingredient: if (u < 1 - 0.0331 * x2 * x2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3580/AbstractIntegerDistribution.java
Used ingredient: if (xm < lower || xm > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3581/AbstractIntegerDistribution.java
Used ingredient: if ((i < j - 1) || (i > j + 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3582/AbstractIntegerDistribution.java
Used ingredient: if (((i >> j) & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3583/AbstractIntegerDistribution.java
Used ingredient: if (x >= 0 && x < RADIX) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3584/AbstractIntegerDistribution.java
Used ingredient: if (i < main.length - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3585/AbstractIntegerDistribution.java
Used ingredient: //if (idx > 8 || idx == 0)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3586/AbstractIntegerDistribution.java
Used ingredient: while (k < hLen && j >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3587/AbstractIntegerDistribution.java
Used ingredient: if (p < (c - a) / (b - a)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3588/AbstractIntegerDistribution.java
Used ingredient: if (x < 0 || x > numberOfTrials) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3589/AbstractIntegerDistribution.java
Used ingredient: if (exp > mant.length || exp < -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3590/AbstractIntegerDistribution.java
Used ingredient: if (p == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3591/AbstractIntegerDistribution.java
Used ingredient: if (x >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3592/AbstractIntegerDistribution.java
Used ingredient: if (b >= 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3593/AbstractIntegerDistribution.java
Used ingredient: if (a >= 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3594/AbstractIntegerDistribution.java
Used ingredient: if (x <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3595/AbstractIntegerDistribution.java
Used ingredient: if (b < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3596/AbstractIntegerDistribution.java
Used ingredient: if (q < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3597/AbstractIntegerDistribution.java
Used ingredient: if (z < 15.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3598/AbstractIntegerDistribution.java
Used ingredient: if (t < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3599/AbstractIntegerDistribution.java
Used ingredient: if (y < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3600/AbstractIntegerDistribution.java
SuspiciousModificationPoint:         return (a <= b) ? b : a;
At: FastMath.java org.apache.commons.math3.util.FastMath
Line number: 3497
Used ingredient: return (a <= b) ? a : b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3601/FastMath.java
Used ingredient: return (f1 <= 0) ? x1 : x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3602/FastMath.java
Used ingredient: return (yA <= 0) ? xA : xB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3603/FastMath.java
Used ingredient: return (c - a) / (b - a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3604/FastMath.java
Used ingredient: return x < c ? 0 : 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3605/FastMath.java
Used ingredient: return (a + b + c) / 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3606/FastMath.java
Used ingredient: return (f1 >= 0) ? x1 : x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3607/FastMath.java
Used ingredient: return (yA <  0) ? xB : xA;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3608/FastMath.java
Used ingredient: return a * a + b * b + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3609/FastMath.java
Used ingredient: return (o2 == null) ? 0 : 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3610/FastMath.java
Used ingredient: return x > 0 ? 1 : -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3611/FastMath.java
Used ingredient: return x > 0 ? 0 : 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3612/FastMath.java
Used ingredient: return (a + b) * 0.5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3613/FastMath.java
Used ingredient: return yb * b - ya * a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3614/FastMath.java
Used ingredient: return x < 0 ? -ret : ret;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3615/FastMath.java
Used ingredient: return -a * a - b * b + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3616/FastMath.java
Used ingredient: return (d > 0) ? 0.0 : -0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3617/FastMath.java
Used ingredient: return (1 - p) / (p * p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3618/FastMath.java
Used ingredient: return (v << 16) ^ w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3619/FastMath.java
Used ingredient: return absYA < absYB ? xA : xB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3620/FastMath.java
Used ingredient: return (f > 0) ? 0.0f : -0.0f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3621/FastMath.java
Used ingredient: return (r * (1 - p)) / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3622/FastMath.java
Used ingredient: return (t - r1) * (r2 - t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3623/FastMath.java
Used ingredient: return 100 * a * a + b * b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3624/FastMath.java
Used ingredient: return dev < 0 ? 0.0d : 1.0d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3625/FastMath.java
Used ingredient: return x < 0 ? 2 - ret : ret;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3626/FastMath.java
Used ingredient: return (sign >= 0) ?
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3627/FastMath.java
Used ingredient: return (0.5 * t) * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3628/FastMath.java
Used ingredient: return (-0.5 * t) * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3629/FastMath.java
Used ingredient: return (1 - p) / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3630/FastMath.java
Used ingredient: return x * x + y * y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3631/FastMath.java
Used ingredient: return 4 * x - 6 * y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3632/FastMath.java
Used ingredient: return 2 / (b - a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3633/FastMath.java
Used ingredient: return a + b + c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3634/FastMath.java
Used ingredient: return a * x + b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3635/FastMath.java
Used ingredient: return (n * n - 1) / 12.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3636/FastMath.java
Used ingredient: return (x ^ (~i + 1)) + i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3637/FastMath.java
Used ingredient: return (x ^ (~l + 1)) + l;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3638/FastMath.java
Used ingredient: return (sign == 0L) ? 0.0 : -0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3639/FastMath.java
Used ingredient: return (1l << (n - 1)) - 1l;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3640/FastMath.java
Used ingredient: return sign < 0 ? -0.0 : +0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3641/FastMath.java
Used ingredient: return index >= 0 ? index : 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3642/FastMath.java
Used ingredient: return 2 * x - 3 * y + 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3643/FastMath.java
Used ingredient: return dx * dx + dy * dy;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3644/FastMath.java
Used ingredient: return (sign == 0) ? 0.0f : -0.0f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3645/FastMath.java
Used ingredient: return (sign(bits) == 0L) ? 0 : 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3646/FastMath.java
Used ingredient: return (sign(bits) == 0L) ? 1 : 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3647/FastMath.java
Used ingredient: return r * (1 - p) / (p * p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3648/FastMath.java
Used ingredient: return (x == 0 || y == 0) ? 0 :
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3649/FastMath.java
Used ingredient: return (row == column) ? 2 * x : x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3650/FastMath.java
Used ingredient: return 2 * x - 3 * y + 5
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3651/FastMath.java
Used ingredient: return n * (a - n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3652/FastMath.java
Used ingredient: return w * p / b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3653/FastMath.java
Used ingredient: return mean * (a + u);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3654/FastMath.java
Used ingredient: *  @return cos(xa + xb)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3655/FastMath.java
Used ingredient: *  @return sin(xa + xb)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3656/FastMath.java
Used ingredient: return (key == null ?
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3657/FastMath.java
Used ingredient: return scale * d * v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3658/FastMath.java
Used ingredient: return sinQ(a, b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3659/FastMath.java
Used ingredient: return (byte) value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3660/FastMath.java
Used ingredient: return cosQ(xa, xb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3661/FastMath.java
Used ingredient: return sinQ(xa, xb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3662/FastMath.java
Used ingredient: return logBeta(a, b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3663/FastMath.java
Used ingredient: return (float) value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3664/FastMath.java
Used ingredient: return -cosQ(xa, xb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3665/FastMath.java
Used ingredient: return -sinQ(xa, xb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3666/FastMath.java
Used ingredient: return -1 + 8 * x - 2 * y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3667/FastMath.java
Used ingredient: return inverted ? x0 : x1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3668/FastMath.java
Used ingredient: return inverted ? x1 : x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3669/FastMath.java
Used ingredient: return log(x) / log(base);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3670/FastMath.java
Used ingredient: return (global < -1.0e-10) ?
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3671/FastMath.java
Used ingredient: return digamma(x + 1) - 1 / x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3672/FastMath.java
Used ingredient: return (z & 1) == 0 ? y : y + 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3673/FastMath.java
Used ingredient: return (j << 2) + j + perturb + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3674/FastMath.java
Used ingredient: return (data == null) ? 0 : data.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3675/FastMath.java
Used ingredient: return atan(r, 0, x < 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3676/FastMath.java
Used ingredient: return atan(ra, rb, x<0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3677/FastMath.java
Used ingredient: return y >>> (32 - bits);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3678/FastMath.java
Used ingredient: return evaluate(a, c, z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3679/FastMath.java
Used ingredient: return gcdPositive(a, b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3680/FastMath.java
Used ingredient: return x * v2.x + y * v2.y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3681/FastMath.java
Used ingredient: return a / (a + getBeta());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3682/FastMath.java
Used ingredient: return atan(ra, rb, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3683/FastMath.java
Used ingredient: return FastMath.abs(a + b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3684/FastMath.java
Used ingredient: return (1.0 - p12) / (x3 - x2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3685/FastMath.java
Used ingredient: return (1.0 - p23) / (x4 - x3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3686/FastMath.java
Used ingredient: return ((2.0 * n) + 1.0) - a + x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3687/FastMath.java
Used ingredient: return i + j / 1024.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3688/FastMath.java
Used ingredient: return p12 / (x1 - x0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3689/FastMath.java
Used ingredient: return (top == null) ? 0 : top.size();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3690/FastMath.java
Used ingredient: return mu + halfC / (t * t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3691/FastMath.java
Used ingredient: //return exp(x) - 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3692/FastMath.java
Used ingredient: return 2d / (n + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3693/FastMath.java
Used ingredient: return exp * 4 - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3694/FastMath.java
Used ingredient: return apply(pX, pY, a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3695/FastMath.java
Used ingredient: return tmp * tmp * tmp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3696/FastMath.java
Used ingredient: remB += -(remA - b - a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3697/FastMath.java
Used ingredient: beta /= b * hK[k + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3698/FastMath.java
Used ingredient: return (start < mid) && (mid < end);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3699/FastMath.java
Used ingredient: return (x >= 0 && x <= 5) ? value : 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3700/FastMath.java
SuspiciousModificationPoint:         setSeed(new int[] { (int) (seed >>> 32), (int) (seed & 0xffffffffl) });
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 216
Used ingredient: setSeed(new int[]{(int) (seed >>> 32), (int) (seed & 0xffffffffL)});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3701/MersenneTwister.java
Used ingredient: this(k, m1, m2, m3, new int[] { (int) (seed >>> 32), (int) (seed & 0xffffffffl) });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3702/MersenneTwister.java
Used ingredient: return (int) ((1438542 ^ (bits >>> 32) ^ bits) & 0xffffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3703/MersenneTwister.java
Used ingredient: rsl[j] = (int) (0x6c078965L * (k ^ k >> 30) + j & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3704/MersenneTwister.java
Used ingredient: v[i] = (int) ((1812433253l * (l ^ (l >> 30)) + i) & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3705/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3706/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3707/MersenneTwister.java
Used ingredient: int  exponent   = ((int) (bits >>> 52)) & 0x7ff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3708/MersenneTwister.java
Used ingredient: int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3709/MersenneTwister.java
Used ingredient: final int z2Prime  = ((z2 << 9) ^ (z2 >>> 23)) & 0xfbffffff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3710/MersenneTwister.java
Used ingredient: exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3711/MersenneTwister.java
Used ingredient: return (int) ((Double.doubleToRawLongBits(d) >>> 52) & 0x7ff) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3712/MersenneTwister.java
Used ingredient: new HaltonSequenceGenerator(2, new int[] { 1, 1 }, new int[] { 1 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3713/MersenneTwister.java
Used ingredient: longMT = (1812433253l * (longMT ^ (longMT >> 30)) + mti) & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3714/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3715/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3716/MersenneTwister.java
Used ingredient: mt[i]   = (int) (l & 0xffffffffl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3717/MersenneTwister.java
Used ingredient: Assert.assertTrue("nextInt range", (value >= min) && (value <= max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3718/MersenneTwister.java
Used ingredient: m.getSubMatrix(new int[] { 0, 2 }, new int[] { 1, 3 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3719/MersenneTwister.java
Used ingredient: m.getSubMatrix(new int[] { 0, 3 }, new int[] { 1, 2 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3720/MersenneTwister.java
Used ingredient: m.getSubMatrix(new int[] { 3, 1 }, new int[] { 3, 1 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3721/MersenneTwister.java
Used ingredient: return new int[] { getLowerDomain(n, m, k), getUpperDomain(m, k) };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3722/MersenneTwister.java
Used ingredient: m.getSubMatrix(new int[] { 0, 3 }, new int[] { 1, 2, 3 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3723/MersenneTwister.java
Used ingredient: m.getSubMatrix(new int[] { 2, 0 }, new int[] { 1, 2, 3 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3724/MersenneTwister.java
Used ingredient: checkGetSubMatrix(m, null, new int[] {},    new int[] { 0 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3725/MersenneTwister.java
Used ingredient: bits = bits | (((long) next(32)) & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3726/MersenneTwister.java
Used ingredient: setCumulativeTestPoints(new int[] { -1, 0, 1, 2, 5, 10 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3727/MersenneTwister.java
Used ingredient: setDensityTestPoints(new int[] { -1, 0, 1, 2, 5, 10 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3728/MersenneTwister.java
Used ingredient: int exponent = (int) ((bits & 0x7ff0000000000000L) >> 52) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3729/MersenneTwister.java
Used ingredient: checkGetSubMatrix(m, null, new int[] {},    new int[] { 0 }, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3730/MersenneTwister.java
Used ingredient: mt[i]   = (int) (l & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3731/MersenneTwister.java
Used ingredient: m.getSubMatrix(new int[] {}, new int[] { 0 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3732/MersenneTwister.java
Used ingredient: Assert.assertTrue("nextLong range", (value >= min) && (value <= max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3733/MersenneTwister.java
Used ingredient: Assert.assertTrue("nextUniform range", (value > min) && (value < max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3734/MersenneTwister.java
Used ingredient: setCumulativeTestPoints(new int[] {-1, 0, 1, 2, 5, 10 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3735/MersenneTwister.java
Used ingredient: return new double[] { -t * (sin * dx0 + cos * dy0) , t * (cos * dx0 - sin * dy0) };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3736/MersenneTwister.java
Used ingredient: setSeed(new int[] { seed });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3737/MersenneTwister.java
Used ingredient: m.getSubMatrix(new int[] { 0 }, new int[] { 4 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3738/MersenneTwister.java
Used ingredient: setCumulativeTestPoints(new int[] {-1, 0, 1, 3, 10 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3739/MersenneTwister.java
Used ingredient: setCumulativeTestPoints(new int[] { -1, 0, 1, 5, 10 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3740/MersenneTwister.java
Used ingredient: parameters.add(new Object[] { k, 2 * k - 1, Math.ulp(1d), 13d });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3741/MersenneTwister.java
Used ingredient: parameters.add(new Object[] { k, 2 * k - 1, Math.ulp(1d), 195 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3742/MersenneTwister.java
Used ingredient: parameters.add(new Object[] { k, 2 * k - 1, Math.ulp(1d), 91d });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3743/MersenneTwister.java
Used ingredient: checkGetSubMatrix(m, null, new int[] { 0 }, new int[] { 4 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3744/MersenneTwister.java
Used ingredient: setDensityTestPoints(new int[] {-1, 0, 1, 2, 5, 10});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3745/MersenneTwister.java
Used ingredient: checkCopy(m, null, new int[] {},    new int[] { 0 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3746/MersenneTwister.java
Used ingredient: final long  low  = ((long) next(32)) & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3747/MersenneTwister.java
Used ingredient: checkGetSubMatrix(m, null, new int[] { 0 }, new int[] { 4 }, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3748/MersenneTwister.java
Used ingredient: setDensityTestValues(new double[] { 0d, 0d, 0d, 0d, 1d, 0d });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3749/MersenneTwister.java
Used ingredient: * @param seed the initial seed (32 bits integers array), if null
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3750/MersenneTwister.java
Used ingredient: * @param seed the initial seed (32 bits integers array). If null
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3751/MersenneTwister.java
Used ingredient: checkCopy(m, null, new int[] {},    new int[] { 0 }, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3752/MersenneTwister.java
Used ingredient: final Integer[] p1 = new Integer[] { 8, 4, 7, 3, 6, 2, 5, 1, 9, 0 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3753/MersenneTwister.java
Used ingredient: int[] testValues = new int[] {4, 10, 12, 32, 100, 10000, 0, 0, 0, 0};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3754/MersenneTwister.java
Used ingredient: checkCopy(m, copy, new int[] { 0, 1 }, new int[] { 0, 1, 2 }, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3755/MersenneTwister.java
Used ingredient: checkCopy(m, subRows31Cols31,  new int[] { 3, 1 }, new int[] { 3, 1 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3756/MersenneTwister.java
Used ingredient: checkCopy(m, subRows02Cols13,  new int[] { 0, 2 }, new int[] { 1, 3 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3757/MersenneTwister.java
Used ingredient: checkCopy(m, subRows03Cols12,  new int[] { 0, 3 }, new int[] { 1, 2 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3758/MersenneTwister.java
Used ingredient: setBarycenter(new Vector3D(1.0, (Vector3D) getBarycenter(), scaled, facetB));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3759/MersenneTwister.java
Used ingredient: * Creates a new instance of this class from the specified data file. The
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3760/MersenneTwister.java
Used ingredient: new SimpleBounds(new double[] { -1.0e-10 }, new double[] {  1.0e-10 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3761/MersenneTwister.java
Used ingredient: * Creates a new instance of this test, with the specified number of nodes
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3762/MersenneTwister.java
Used ingredient: int  exponent  = (bits >>> 23) & 0xff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3763/MersenneTwister.java
Used ingredient: return new double[] { 1 / (lo - x), 1 / (hi - x) };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3764/MersenneTwister.java
Used ingredient: return new int[] { -1, 0, 1, 2, 3, 4, 5, 10, 20};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3765/MersenneTwister.java
Used ingredient: return new int[] { -1, 0, 1, 2, 3, 4, 5, 10, 20 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3766/MersenneTwister.java
Used ingredient: Assert.assertTrue("nextInt range",(value >= 0) && (value < n));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3767/MersenneTwister.java
Used ingredient: bytes[i + 1] = (byte) ((random >>  8) & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3768/MersenneTwister.java
Used ingredient: bytes[i + 3] = (byte) ((random >> 24) & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3769/MersenneTwister.java
Used ingredient: return new int[] { 0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 10, 20};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3770/MersenneTwister.java
Used ingredient: final int size = (int) ((end - start) / step + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3771/MersenneTwister.java
Used ingredient: return new int[] {-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3772/MersenneTwister.java
Used ingredient: m.setSubMatrix(new double[][] { { 1 }, { 2, 3 } }, 0, 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3773/MersenneTwister.java
Used ingredient: return new int[] { -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3774/MersenneTwister.java
Used ingredient: setCumulativeTestPoints(new int[] {-1, 0, 1, 5, 10 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3775/MersenneTwister.java
Used ingredient: setDensityTestPoints(new int[] {-1, 0, 1, 3, 10});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3776/MersenneTwister.java
Used ingredient: checkCopy(m, null, new int[] {}, new int[] { 0 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3777/MersenneTwister.java
Used ingredient: return new int[] {-3, -3, -3, -3, -3, -3, -2, 1, 5, 5, 5, 5, 5, 5};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3778/MersenneTwister.java
Used ingredient: setDensityTestPoints(new int[] { -1, 0, 1, 10, 11 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3779/MersenneTwister.java
Used ingredient: setDensityTestValues(new double[] { 0d, 1d, 0d, 0d, 0d });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3780/MersenneTwister.java
Used ingredient: list.add(new EuclideanIntegerPoint(new int[] {  1,  3 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3781/MersenneTwister.java
Used ingredient: list.add(new EuclideanIntegerPoint(new int[] {  2,  2 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3782/MersenneTwister.java
Used ingredient: list.add(new EuclideanIntegerPoint(new int[] {  3,  3 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3783/MersenneTwister.java
Used ingredient: list.add(new EuclideanIntegerPoint(new int[] {  2,  4 }));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3784/MersenneTwister.java
Used ingredient: super(new Line(start, end), buildIntervalSet(start, end));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3785/MersenneTwister.java
Used ingredient: historySize = 10 + (int) (3 * 10 * dimension / (double) lambda);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3786/MersenneTwister.java
Used ingredient: // Determine if it is in the same spot as in the first parent, if
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3787/MersenneTwister.java
Used ingredient: protected double distance(final Clusterable p1, final Clusterable p2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3788/MersenneTwister.java
Used ingredient: new LinearProblem(new double[][] { { 2 } }, new double[] { 3 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3789/MersenneTwister.java
Used ingredient: setCumulativeTestValues(new double[] { 0d, 0d, 0d, 0d, 1d, 1d });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3790/MersenneTwister.java
Used ingredient: // when the new interpolation point was reached by an alternative step.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3791/MersenneTwister.java
Used ingredient: = new LinearProblem(new double[][] { { 2 } }, new double[] { 3 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3792/MersenneTwister.java
Used ingredient: final Integer[] c1e = new Integer[] { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3793/MersenneTwister.java
Used ingredient: final Integer[] c2e = new Integer[] { 0, 4, 7, 3, 6, 2, 5, 1, 8, 9 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3794/MersenneTwister.java
Used ingredient: testStatistic.mannWhitneyUTest(new double[] { }, new double[] { 1.0 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3795/MersenneTwister.java
Used ingredient: * between 0 (inclusive) and the specified value (exclusive), drawn from
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3796/MersenneTwister.java
Used ingredient: * Creates a new instance of {@link RealVector}, with specified entries.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3797/MersenneTwister.java
Used ingredient: l.distance(new Line(new Vector3D(0, -4, 0), new Vector3D(1, -4, 0))),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3798/MersenneTwister.java
Used ingredient: * If the requested samples fit in the specified array, it is returned
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3799/MersenneTwister.java
Used ingredient: new DoublePoint(new int[] {7, 15}), // N - Noise, should not be present
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3800/MersenneTwister.java
SuspiciousModificationPoint:         if (seed == null) {
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 167
Used ingredient: if (scaled == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3801/MersenneTwister.java
Used ingredient: if (field == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3802/MersenneTwister.java
Used ingredient: if (steps == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3803/MersenneTwister.java
Used ingredient: if (line == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3804/MersenneTwister.java
Used ingredient: if (rand == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3805/MersenneTwister.java
Used ingredient: if (is == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3806/MersenneTwister.java
Used ingredient: if (sd != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3807/MersenneTwister.java
Used ingredient: if (vals == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3808/MersenneTwister.java
Used ingredient: if (stat == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3809/MersenneTwister.java
Used ingredient: if (data == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3810/MersenneTwister.java
Used ingredient: if (plus == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3811/MersenneTwister.java
Used ingredient: if (e == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3812/MersenneTwister.java
Used ingredient: if (d == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3813/MersenneTwister.java
Used ingredient: if (re == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3814/MersenneTwister.java
Used ingredient: if (den == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3815/MersenneTwister.java
Used ingredient: if (rule == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3816/MersenneTwister.java
Used ingredient: if (left == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3817/MersenneTwister.java
Used ingredient: if (inserted == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3818/MersenneTwister.java
Used ingredient: if (selected == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3819/MersenneTwister.java
Used ingredient: if (secRand == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3820/MersenneTwister.java
Used ingredient: if (sample == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3821/MersenneTwister.java
Used ingredient: if (cached == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3822/MersenneTwister.java
Used ingredient: if (inter == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3823/MersenneTwister.java
Used ingredient: if (index == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3824/MersenneTwister.java
Used ingredient: if (other == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3825/MersenneTwister.java
Used ingredient: if (efode != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3826/MersenneTwister.java
Used ingredient: if (retry == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3827/MersenneTwister.java
Used ingredient: if (value == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3828/MersenneTwister.java
Used ingredient: if (start == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3829/MersenneTwister.java
Used ingredient: if (whole == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3830/MersenneTwister.java
Used ingredient: while (s == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3831/MersenneTwister.java
Used ingredient: if (node != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3832/MersenneTwister.java
Used ingredient: if (next != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3833/MersenneTwister.java
Used ingredient: if (ret != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3834/MersenneTwister.java
Used ingredient: if (data != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3835/MersenneTwister.java
Used ingredient: if (top == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3836/MersenneTwister.java
Used ingredient: if (t == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3837/MersenneTwister.java
Used ingredient: if (im == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3838/MersenneTwister.java
Used ingredient: if (d != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3839/MersenneTwister.java
Used ingredient: if (num == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3840/MersenneTwister.java
Used ingredient: if (cut == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3841/MersenneTwister.java
Used ingredient: if (left != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3842/MersenneTwister.java
Used ingredient: if (a == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3843/MersenneTwister.java
Used ingredient: if (p1 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3844/MersenneTwister.java
Used ingredient: if (p2 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3845/MersenneTwister.java
Used ingredient: if (pc3 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3846/MersenneTwister.java
Used ingredient: if (o == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3847/MersenneTwister.java
Used ingredient: if (w == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3848/MersenneTwister.java
Used ingredient: if (v == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3849/MersenneTwister.java
Used ingredient: if (b == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3850/MersenneTwister.java
Used ingredient: if (c == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3851/MersenneTwister.java
Used ingredient: if (y == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3852/MersenneTwister.java
Used ingredient: if (m == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3853/MersenneTwister.java
Used ingredient: if (f == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3854/MersenneTwister.java
Used ingredient: if (z == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3855/MersenneTwister.java
Used ingredient: if (x == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3856/MersenneTwister.java
Used ingredient: if (o1 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3857/MersenneTwister.java
Used ingredient: if (v1 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3858/MersenneTwister.java
Used ingredient: if (bg == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3859/MersenneTwister.java
Used ingredient: if (obj == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3860/MersenneTwister.java
Used ingredient: if (v1D == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3861/MersenneTwister.java
Used ingredient: if (v2D == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3862/MersenneTwister.java
Used ingredient: if (crossed != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3863/MersenneTwister.java
Used ingredient: if (cachedP == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3864/MersenneTwister.java
Used ingredient: if (cachedS == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3865/MersenneTwister.java
Used ingredient: if (cachedR == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3866/MersenneTwister.java
Used ingredient: if (cachedQ == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3867/MersenneTwister.java
Used ingredient: if (cachedH == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3868/MersenneTwister.java
Used ingredient: if (cachedU == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3869/MersenneTwister.java
Used ingredient: if (cachedB == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3870/MersenneTwister.java
Used ingredient: if (cachedV == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3871/MersenneTwister.java
Used ingredient: if (cachedD == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3872/MersenneTwister.java
Used ingredient: if (cachedL == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3873/MersenneTwister.java
Used ingredient: if (cachedT == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3874/MersenneTwister.java
Used ingredient: if (simplex == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3875/MersenneTwister.java
Used ingredient: if (checker == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3876/MersenneTwister.java
Used ingredient: if (vector == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3877/MersenneTwister.java
Used ingredient: if (values == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3878/MersenneTwister.java
Used ingredient: if (trans != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3879/MersenneTwister.java
Used ingredient: if (count == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3880/MersenneTwister.java
Used ingredient: if (right == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3881/MersenneTwister.java
Used ingredient: if (child != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3882/MersenneTwister.java
Used ingredient: if (value != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3883/MersenneTwister.java
Used ingredient: if (start != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3884/MersenneTwister.java
Used ingredient: if (facet != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3885/MersenneTwister.java
Used ingredient: if (cache != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3886/MersenneTwister.java
Used ingredient: if (param == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3887/MersenneTwister.java
Used ingredient: if (array == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3888/MersenneTwister.java
Used ingredient: if (xvalI == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3889/MersenneTwister.java
Used ingredient: if (cachedPt == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3890/MersenneTwister.java
Used ingredient: if (cachedUt == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3891/MersenneTwister.java
Used ingredient: if (cachedVt == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3892/MersenneTwister.java
Used ingredient: if (cachedQt == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3893/MersenneTwister.java
Used ingredient: if (cachedQT == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3894/MersenneTwister.java
Used ingredient: if (cachedLT == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3895/MersenneTwister.java
Used ingredient: if (vertices == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3896/MersenneTwister.java
Used ingredient: if (in != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3897/MersenneTwister.java
Used ingredient: if (cut != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3898/MersenneTwister.java
Used ingredient: if (loop != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3899/MersenneTwister.java
Used ingredient: if (r != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3900/MersenneTwister.java
SuspiciousModificationPoint:         setSeed(19650218);
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 172
Used ingredient: rg.setSeed(100);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3901/MersenneTwister.java
Used ingredient: gen.setSeed(100);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3902/MersenneTwister.java
Used ingredient: gen1.setSeed(100);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3903/MersenneTwister.java
Used ingredient: random.setSeed(100);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3904/MersenneTwister.java
Used ingredient: g.setSeed(16069223052l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3905/MersenneTwister.java
Used ingredient: rg.setSeed(17399225432l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3906/MersenneTwister.java
Used ingredient: rng.setSeed(seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3907/MersenneTwister.java
Used ingredient: setSeed(combined);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3908/MersenneTwister.java
Used ingredient: ran.setSeed(seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3909/MersenneTwister.java
Used ingredient: setSeed(seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3910/MersenneTwister.java
Used ingredient: setSize(800, 800);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3911/MersenneTwister.java
Used ingredient: rd.reSeed(100);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3912/MersenneTwister.java
Used ingredient: g.setSeed(12373523445l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3913/MersenneTwister.java
Used ingredient: generator.setSeed(1001);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3914/MersenneTwister.java
Used ingredient: setTolerance(1e-9);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3915/MersenneTwister.java
Used ingredient: setTolerance(1E-9);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3916/MersenneTwister.java
Used ingredient: ran.setSeed(seed[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3917/MersenneTwister.java
Used ingredient: g.setSeed(4312000053L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3918/MersenneTwister.java
Used ingredient: g.setSeed(753289573253l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3919/MersenneTwister.java
Used ingredient: jg.setSeed(5322145245211l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3920/MersenneTwister.java
Used ingredient: setSize(sum / 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3921/MersenneTwister.java
Used ingredient: setLastSeen(true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3922/MersenneTwister.java
Used ingredient: p.setQuantile(50);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3923/MersenneTwister.java
Used ingredient: tstDoubleGen(0.1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3924/MersenneTwister.java
Used ingredient: g.setSeed(44428400075l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3925/MersenneTwister.java
Used ingredient: setTolerance(1e-12);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3926/MersenneTwister.java
Used ingredient: delegate.reSeed();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3927/MersenneTwister.java
Used ingredient: setSafety(0.9);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3928/MersenneTwister.java
Used ingredient: setSize(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3929/MersenneTwister.java
Used ingredient: vs.setMode(1000);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3930/MersenneTwister.java
Used ingredient: generator.setSeed(1000);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3931/MersenneTwister.java
Used ingredient: u.setWindowSize(10);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3932/MersenneTwister.java
Used ingredient: random.setSeed(1746432956321l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3933/MersenneTwister.java
Used ingredient: setSeed((long) seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3934/MersenneTwister.java
Used ingredient: random.setSeed(seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3935/MersenneTwister.java
Used ingredient: setMinReduction(0.2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3936/MersenneTwister.java
Used ingredient: integ.setSafety(0.8);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3937/MersenneTwister.java
Used ingredient: setLastSeen(false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3938/MersenneTwister.java
Used ingredient: setTolerance(1e-4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3939/MersenneTwister.java
Used ingredient: setTolerance(1E-4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3940/MersenneTwister.java
Used ingredient: da.setElement(10, 10.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3941/MersenneTwister.java
Used ingredient: wrapped.setSeed(seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3942/MersenneTwister.java
Used ingredient: da.setElement(1, 3.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3943/MersenneTwister.java
Used ingredient: baseSequence.add(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3944/MersenneTwister.java
Used ingredient: super.testAdd1000();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3945/MersenneTwister.java
Used ingredient: resetReplayFile();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3946/MersenneTwister.java
Used ingredient: std.increment(1d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3947/MersenneTwister.java
Used ingredient: v_set2.set(3, v1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3948/MersenneTwister.java
Used ingredient: pos.setIndex(end);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3949/MersenneTwister.java
Used ingredient: setSize(size);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3950/MersenneTwister.java
Used ingredient: v.set(expected);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3951/MersenneTwister.java
Used ingredient: p.setQuantile(25);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3952/MersenneTwister.java
Used ingredient: p.setQuantile(75);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3953/MersenneTwister.java
Used ingredient: v_set2.set(7, v1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3954/MersenneTwister.java
Used ingredient: sequence.add(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3955/MersenneTwister.java
Used ingredient: efode.setTime(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3956/MersenneTwister.java
Used ingredient: set2.copySelf());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3957/MersenneTwister.java
Used ingredient: roots.getReal(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3958/MersenneTwister.java
Used ingredient: tstDoubleGen(5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3959/MersenneTwister.java
Used ingredient: list.remove(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3960/MersenneTwister.java
Used ingredient: u.setEntry(1, 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3961/MersenneTwister.java
Used ingredient: u.setEntry(0, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3962/MersenneTwister.java
Used ingredient: es.getInverse();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3963/MersenneTwister.java
Used ingredient: System.exit(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3964/MersenneTwister.java
Used ingredient: setState(j);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3965/MersenneTwister.java
Used ingredient: e.setIndex(-1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3966/MersenneTwister.java
Used ingredient: setIndex(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3967/MersenneTwister.java
Used ingredient: Thread.sleep(50);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3968/MersenneTwister.java
Used ingredient: reset(p1, p2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3969/MersenneTwister.java
Used ingredient: resetTables(-1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3970/MersenneTwister.java
Used ingredient: * Stein (1961).
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3971/MersenneTwister.java
Used ingredient: tstGen(0.1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3972/MersenneTwister.java
Used ingredient: rd.reSeed();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3973/MersenneTwister.java
Used ingredient: vs.setSigma(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3974/MersenneTwister.java
Used ingredient: v2.set(1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3975/MersenneTwister.java
Used ingredient: void setSeed(int seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3976/MersenneTwister.java
Used ingredient: da.setElement(9, 10.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3977/MersenneTwister.java
Used ingredient: da.setElement(-2, 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3978/MersenneTwister.java
Used ingredient: pos.setBeginIndex(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3979/MersenneTwister.java
Used ingredient: r.setSubVector(0, v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3980/MersenneTwister.java
Used ingredient: p.setSubVector(0, z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3981/MersenneTwister.java
Used ingredient: x.setSubVector(0, v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3982/MersenneTwister.java
Used ingredient: a.setElement(i, i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3983/MersenneTwister.java
Used ingredient: skew.increment(1d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3984/MersenneTwister.java
Used ingredient: sumSq.increment(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3985/MersenneTwister.java
Used ingredient: rd2.reSeedSecure();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3986/MersenneTwister.java
Used ingredient: pos.setEndIndex(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3987/MersenneTwister.java
Used ingredient: singletest, 0.01d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3988/MersenneTwister.java
Used ingredient: b.setEntry(0, -1d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3989/MersenneTwister.java
Used ingredient: b.setEntry(1, -1d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3990/MersenneTwister.java
Used ingredient: b.setEntry(0, -1.);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3991/MersenneTwister.java
Used ingredient: b.setEntry(1, -1.);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3992/MersenneTwister.java
Used ingredient: Vector<S> negate();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3993/MersenneTwister.java
Used ingredient: super.storeTime(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3994/MersenneTwister.java
Used ingredient: setMaxGrowth(10.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3995/MersenneTwister.java
Used ingredient: void setSeed(long seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3996/MersenneTwister.java
Used ingredient: ran.setSeed((int) seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3997/MersenneTwister.java
Used ingredient: stats.setWindowSize(50);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3998/MersenneTwister.java
Used ingredient: randomData.reSeed(1000);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/3999/MersenneTwister.java
Used ingredient: weightedResidual(o2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4000/MersenneTwister.java
SuspiciousModificationPoint:         int i = 1;
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 173
Used ingredient: int i = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4001/MersenneTwister.java
Used ingredient: int n = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4002/MersenneTwister.java
Used ingredient: int t = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4003/MersenneTwister.java
Used ingredient: int p = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4004/MersenneTwister.java
Used ingredient: int r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4005/MersenneTwister.java
Used ingredient: int c = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4006/MersenneTwister.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4007/MersenneTwister.java
Used ingredient: int q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4008/MersenneTwister.java
Used ingredient: int ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4009/MersenneTwister.java
Used ingredient: int rh = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4010/MersenneTwister.java
Used ingredient: int k = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4011/MersenneTwister.java
Used ingredient: int n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4012/MersenneTwister.java
Used ingredient: int n = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4013/MersenneTwister.java
Used ingredient: int a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4014/MersenneTwister.java
Used ingredient: int r = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4015/MersenneTwister.java
Used ingredient: int k = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4016/MersenneTwister.java
Used ingredient: int j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4017/MersenneTwister.java
Used ingredient: int n = 6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4018/MersenneTwister.java
Used ingredient: int n = 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4019/MersenneTwister.java
Used ingredient: int N = 9;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4020/MersenneTwister.java
Used ingredient: int p = n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4021/MersenneTwister.java
Used ingredient: int k = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4022/MersenneTwister.java
Used ingredient: int a = p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4023/MersenneTwister.java
Used ingredient: int b = q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4024/MersenneTwister.java
Used ingredient: int x = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4025/MersenneTwister.java
Used ingredient: int size = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4026/MersenneTwister.java
Used ingredient: int dim = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4027/MersenneTwister.java
Used ingredient: int min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4028/MersenneTwister.java
Used ingredient: int idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4029/MersenneTwister.java
Used ingredient: int den = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4030/MersenneTwister.java
Used ingredient: int dim = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4031/MersenneTwister.java
Used ingredient: int n = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4032/MersenneTwister.java
Used ingredient: int its = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4033/MersenneTwister.java
Used ingredient: int sig = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4034/MersenneTwister.java
Used ingredient: int sgn = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4035/MersenneTwister.java
Used ingredient: int ipt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4036/MersenneTwister.java
Used ingredient: int out = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4037/MersenneTwister.java
Used ingredient: int b = 50;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4038/MersenneTwister.java
Used ingredient: int sp = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4039/MersenneTwister.java
Used ingredient: int a = 30;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4040/MersenneTwister.java
Used ingredient: int p2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4041/MersenneTwister.java
Used ingredient: int rl = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4042/MersenneTwister.java
Used ingredient: int rh = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4043/MersenneTwister.java
Used ingredient: int y = x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4044/MersenneTwister.java
Used ingredient: int c = 77;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4045/MersenneTwister.java
Used ingredient: int index = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4046/MersenneTwister.java
Used ingredient: int i = j - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4047/MersenneTwister.java
Used ingredient: int trial = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4048/MersenneTwister.java
Used ingredient: int iact = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4049/MersenneTwister.java
Used ingredient: next = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4050/MersenneTwister.java
Used ingredient: int l=10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4051/MersenneTwister.java
Used ingredient: sign = +1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4052/MersenneTwister.java
Used ingredient: sign = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4053/MersenneTwister.java
Used ingredient: sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4054/MersenneTwister.java
Used ingredient: iact = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4055/MersenneTwister.java
Used ingredient: fn  = fn1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4056/MersenneTwister.java
Used ingredient: min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4057/MersenneTwister.java
Used ingredient: inc = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4058/MersenneTwister.java
Used ingredient: inc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4059/MersenneTwister.java
Used ingredient: int idx1 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4060/MersenneTwister.java
Used ingredient: int n = 1024;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4061/MersenneTwister.java
Used ingredient: int iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4062/MersenneTwister.java
Used ingredient: int iubd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4063/MersenneTwister.java
Used ingredient: int ilbd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4064/MersenneTwister.java
Used ingredient: int sign = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4065/MersenneTwister.java
Used ingredient: int iMin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4066/MersenneTwister.java
Used ingredient: int size = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4067/MersenneTwister.java
Used ingredient: int res = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4068/MersenneTwister.java
Used ingredient: int e = exp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4069/MersenneTwister.java
Used ingredient: int iu = n - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4070/MersenneTwister.java
Used ingredient: int ret = 7;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4071/MersenneTwister.java
Used ingredient: int sum = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4072/MersenneTwister.java
Used ingredient: int cnt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4073/MersenneTwister.java
Used ingredient: int l = idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4074/MersenneTwister.java
Used ingredient: int rnk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4075/MersenneTwister.java
Used ingredient: int ptr = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4076/MersenneTwister.java
Used ingredient: int jpt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4077/MersenneTwister.java
Used ingredient: int out = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4078/MersenneTwister.java
Used ingredient: int num = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4079/MersenneTwister.java
Used ingredient: int max = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4080/MersenneTwister.java
Used ingredient: int row = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4081/MersenneTwister.java
Used ingredient: int col = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4082/MersenneTwister.java
Used ingredient: int off = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4083/MersenneTwister.java
Used ingredient: ntrits = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4084/MersenneTwister.java
Used ingredient: int i, j, k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4085/MersenneTwister.java
Used ingredient: int itest = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4086/MersenneTwister.java
Used ingredient: int index = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4087/MersenneTwister.java
Used ingredient: int begin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4088/MersenneTwister.java
Used ingredient: int nobs = 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4089/MersenneTwister.java
Used ingredient: int nobs = 21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4090/MersenneTwister.java
Used ingredient: int pos2 = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4091/MersenneTwister.java
Used ingredient: int pos1 = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4092/MersenneTwister.java
Used ingredient: int lower = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4093/MersenneTwister.java
Used ingredient: int cycle = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4094/MersenneTwister.java
Used ingredient: int n = 10000;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4095/MersenneTwister.java
Used ingredient: int j = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4096/MersenneTwister.java
Used ingredient: int count = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4097/MersenneTwister.java
Used ingredient: int iflag = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4098/MersenneTwister.java
Used ingredient: int maxI = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4099/MersenneTwister.java
Used ingredient: first = c1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4100/MersenneTwister.java
SuspiciousModificationPoint:         int j = 0;
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 174
Used ingredient: int i = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4101/MersenneTwister.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4102/MersenneTwister.java
Used ingredient: int n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4103/MersenneTwister.java
Used ingredient: int a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4104/MersenneTwister.java
Used ingredient: int r = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4105/MersenneTwister.java
Used ingredient: int k = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4106/MersenneTwister.java
Used ingredient: int jpt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4107/MersenneTwister.java
Used ingredient: int ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4108/MersenneTwister.java
Used ingredient: int b = 50;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4109/MersenneTwister.java
Used ingredient: int sp = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4110/MersenneTwister.java
Used ingredient: int a = 30;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4111/MersenneTwister.java
Used ingredient: int p2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4112/MersenneTwister.java
Used ingredient: int rl = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4113/MersenneTwister.java
Used ingredient: int rh = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4114/MersenneTwister.java
Used ingredient: int y = x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4115/MersenneTwister.java
Used ingredient: int n = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4116/MersenneTwister.java
Used ingredient: int t = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4117/MersenneTwister.java
Used ingredient: int p = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4118/MersenneTwister.java
Used ingredient: int r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4119/MersenneTwister.java
Used ingredient: int c = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4120/MersenneTwister.java
Used ingredient: int q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4121/MersenneTwister.java
Used ingredient: int n = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4122/MersenneTwister.java
Used ingredient: int n = 6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4123/MersenneTwister.java
Used ingredient: int n = 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4124/MersenneTwister.java
Used ingredient: int N = 9;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4125/MersenneTwister.java
Used ingredient: int p = n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4126/MersenneTwister.java
Used ingredient: int k = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4127/MersenneTwister.java
Used ingredient: int a = p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4128/MersenneTwister.java
Used ingredient: int b = q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4129/MersenneTwister.java
Used ingredient: int x = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4130/MersenneTwister.java
Used ingredient: int i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4131/MersenneTwister.java
Used ingredient: int idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4132/MersenneTwister.java
Used ingredient: int n = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4133/MersenneTwister.java
Used ingredient: int its = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4134/MersenneTwister.java
Used ingredient: int sig = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4135/MersenneTwister.java
Used ingredient: int ipt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4136/MersenneTwister.java
Used ingredient: int res = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4137/MersenneTwister.java
Used ingredient: int sum = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4138/MersenneTwister.java
Used ingredient: int cnt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4139/MersenneTwister.java
Used ingredient: int rnk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4140/MersenneTwister.java
Used ingredient: int ptr = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4141/MersenneTwister.java
Used ingredient: int out = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4142/MersenneTwister.java
Used ingredient: int num = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4143/MersenneTwister.java
Used ingredient: int max = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4144/MersenneTwister.java
Used ingredient: int row = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4145/MersenneTwister.java
Used ingredient: int col = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4146/MersenneTwister.java
Used ingredient: int off = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4147/MersenneTwister.java
Used ingredient: int rh = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4148/MersenneTwister.java
Used ingredient: int k = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4149/MersenneTwister.java
Used ingredient: int c = 77;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4150/MersenneTwister.java
Used ingredient: int l=10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4151/MersenneTwister.java
Used ingredient: itest = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4152/MersenneTwister.java
Used ingredient: iterc = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4153/MersenneTwister.java
Used ingredient: iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4154/MersenneTwister.java
Used ingredient: index = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4155/MersenneTwister.java
Used ingredient: bits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4156/MersenneTwister.java
Used ingredient: tMin = t0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4157/MersenneTwister.java
Used ingredient: count = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4158/MersenneTwister.java
Used ingredient: nact = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4159/MersenneTwister.java
Used ingredient: min = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4160/MersenneTwister.java
Used ingredient: min = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4161/MersenneTwister.java
Used ingredient: int idx1 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4162/MersenneTwister.java
Used ingredient: int n = 1024;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4163/MersenneTwister.java
Used ingredient: int iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4164/MersenneTwister.java
Used ingredient: int iubd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4165/MersenneTwister.java
Used ingredient: int ilbd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4166/MersenneTwister.java
Used ingredient: int sign = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4167/MersenneTwister.java
Used ingredient: int iMin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4168/MersenneTwister.java
Used ingredient: int knew = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4169/MersenneTwister.java
Used ingredient: int dfwg = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4170/MersenneTwister.java
Used ingredient: int ksav = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4171/MersenneTwister.java
Used ingredient: int nact = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4172/MersenneTwister.java
Used ingredient: int off2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4173/MersenneTwister.java
Used ingredient: int walk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4174/MersenneTwister.java
Used ingredient: int den = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4175/MersenneTwister.java
Used ingredient: int dim = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4176/MersenneTwister.java
Used ingredient: int sgn = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4177/MersenneTwister.java
Used ingredient: int out = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4178/MersenneTwister.java
Used ingredient: int e = exp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4179/MersenneTwister.java
Used ingredient: int ret = 7;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4180/MersenneTwister.java
Used ingredient: int l = idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4181/MersenneTwister.java
Used ingredient: minStep = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4182/MersenneTwister.java
Used ingredient: int itest = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4183/MersenneTwister.java
Used ingredient: int index = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4184/MersenneTwister.java
Used ingredient: int begin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4185/MersenneTwister.java
Used ingredient: int nobs = 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4186/MersenneTwister.java
Used ingredient: int n = 10000;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4187/MersenneTwister.java
Used ingredient: int j = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4188/MersenneTwister.java
Used ingredient: int iflag = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4189/MersenneTwister.java
Used ingredient: int node  = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4190/MersenneTwister.java
Used ingredient: int nextr = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4191/MersenneTwister.java
Used ingredient: int start = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4192/MersenneTwister.java
Used ingredient: int value = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4193/MersenneTwister.java
Used ingredient: int lower = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4194/MersenneTwister.java
Used ingredient: int from1 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4195/MersenneTwister.java
Used ingredient: int j = index;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4196/MersenneTwister.java
Used ingredient: int count = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4197/MersenneTwister.java
Used ingredient: int from2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4198/MersenneTwister.java
Used ingredient: int j = n - k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4199/MersenneTwister.java
Used ingredient: ntrits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4200/MersenneTwister.java
SuspiciousModificationPoint:         for (int k = FastMath.max(N, seed.length); k != 0; k--) {
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 176
Used ingredient: for (int row = FastMath.min(m, n) - 1; row >= 0; row--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4201/MersenneTwister.java
Used ingredient: for (int minor = FastMath.min(m, n)-1; minor >= 0; minor--){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4202/MersenneTwister.java
Used ingredient: for (int j = FastMath.max(i - 1, 0); j < n; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4203/MersenneTwister.java
Used ingredient: for (int k = 0; k < FastMath.max(nct, nrt); k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4204/MersenneTwister.java
Used ingredient: for (int j = FastMath.max(0, i + 1 - p.coefficients.length);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4205/MersenneTwister.java
Used ingredient: for (int i = a.mant.length - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4206/MersenneTwister.java
Used ingredient: for (int i = 0, max = Math.max(npt, nh); i < max; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4207/MersenneTwister.java
Used ingredient: for (int j = FastMath.max(i - 1, 0); j < matrixT.length; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4208/MersenneTwister.java
Used ingredient: for (int i = nData.length - 1; i >= 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4209/MersenneTwister.java
Used ingredient: for (int i = shiftedP.length - 1; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4210/MersenneTwister.java
Used ingredient: for (int i = derivatives.length - 1; i >= 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4211/MersenneTwister.java
Used ingredient: for (int k = 0; k <= FastMath.min(j, n - 1); k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4212/MersenneTwister.java
Used ingredient: for (int i = mant.length-1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4213/MersenneTwister.java
Used ingredient: for (int i = mant.length + 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4214/MersenneTwister.java
Used ingredient: for (int i = mant.length - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4215/MersenneTwister.java
Used ingredient: for (int i = array.length - 1; i >= 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4216/MersenneTwister.java
Used ingredient: for (int i = data.length - 2; i >= 0; i -= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4217/MersenneTwister.java
Used ingredient: for (int i = mant.length * 2 - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4218/MersenneTwister.java
Used ingredient: for (int j = rDiag.length - 1; j >= 0; --j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4219/MersenneTwister.java
Used ingredient: for (int i = vals.length-1; i > 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4220/MersenneTwister.java
Used ingredient: for (int i = FACT.length-1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4221/MersenneTwister.java
Used ingredient: for (int i = mant.length - 1; i > 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4222/MersenneTwister.java
Used ingredient: for (int i = hyp.length - 1; i >= 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4223/MersenneTwister.java
Used ingredient: for (int i = drop.length - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4224/MersenneTwister.java
Used ingredient: for (int i = coeffs.length - 2; i >= 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4225/MersenneTwister.java
Used ingredient: for (int i = 0, max = time.length; i < max; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4226/MersenneTwister.java
Used ingredient: for (int row = rDiag.length - 1; row >= 0; --row) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4227/MersenneTwister.java
Used ingredient: for (int i = LN_SPLIT_COEF.length-2; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4228/MersenneTwister.java
Used ingredient: for (int i = list.length - 1; i >= end; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4229/MersenneTwister.java
Used ingredient: for (int i = 0; i <= FastMath.min(iu, k + 3); i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4230/MersenneTwister.java
Used ingredient: for (int i = LN_QUICK_COEF.length - 2; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4231/MersenneTwister.java
Used ingredient: for (int i = list.length - 1; i >= start; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4232/MersenneTwister.java
Used ingredient: for (int i = LN_HI_PREC_COEF.length - 2; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4233/MersenneTwister.java
Used ingredient: for (int k = offset; eIndex < encoding.length; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4234/MersenneTwister.java
Used ingredient: for (int i = f.length - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4235/MersenneTwister.java
Used ingredient: for (int i = DELTA.length - 2; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4236/MersenneTwister.java
Used ingredient: for (int j = 0; j < FastMath.min(i + 1, n); ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4237/MersenneTwister.java
Used ingredient: for (int i = LANCZOS.length - 1; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4238/MersenneTwister.java
Used ingredient: for (int i = 0, max = point.length; i < max; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4239/MersenneTwister.java
Used ingredient: for (int i = seed.length; i < v.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4240/MersenneTwister.java
Used ingredient: optimalIter = FastMath.min(k, sequence.length - 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4241/MersenneTwister.java
Used ingredient: optimalIter = FastMath.min(k+1, sequence.length - 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4242/MersenneTwister.java
Used ingredient: for (int minor = 0; minor < FastMath.min(m, n); minor++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4243/MersenneTwister.java
Used ingredient: for (int k = N - 1; k != 0; k--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4244/MersenneTwister.java
Used ingredient: for (i = mant.length - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4245/MersenneTwister.java
Used ingredient: for (int i = 0; i < data.length && n > 0; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4246/MersenneTwister.java
Used ingredient: for (int i = 1; i < expected.length; i *= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4247/MersenneTwister.java
Used ingredient: for (int i = start; i < orig.length - 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4248/MersenneTwister.java
Used ingredient: for (int i = 0, dim = optimum.length; i < dim; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4249/MersenneTwister.java
Used ingredient: for (int m = fk[j].length - 1; m >= 2 * (l + 1); --m) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4250/MersenneTwister.java
Used ingredient: for (int minor = m - 1; minor >= FastMath.min(m, n); minor--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4251/MersenneTwister.java
Used ingredient: for (int k = nct - 1; k >= 0; k--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4252/MersenneTwister.java
Used ingredient: for (int k = 0; k < merged.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4253/MersenneTwister.java
Used ingredient: for (int i = poly.degree(); i >= 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4254/MersenneTwister.java
Used ingredient: for (int i = parameters - 1; i >= 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4255/MersenneTwister.java
Used ingredient: for (int k = 0; k < sequence.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4256/MersenneTwister.java
Used ingredient: for (int k = 0; k < expectedV.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4257/MersenneTwister.java
Used ingredient: for (int k = 0; k < sequence.length-1; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4258/MersenneTwister.java
Used ingredient: for (qd = mant.length+1; qd >= 0; qd--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4259/MersenneTwister.java
Used ingredient: for (int k = maxDegree; k < degree; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4260/MersenneTwister.java
Used ingredient: for (int i = 0; i < estimatedMean.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4261/MersenneTwister.java
Used ingredient: for (int i = 0; i < this.parameters.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4262/MersenneTwister.java
Used ingredient: for (int idx = 0; idx < indices.length; idx += 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4263/MersenneTwister.java
Used ingredient: for (int k = 0; k < interpolator.yDotK.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4264/MersenneTwister.java
Used ingredient: for (int i = polynomials.length; i < newPols.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4265/MersenneTwister.java
Used ingredient: for (int i = source.length; i < source.length + offset; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4266/MersenneTwister.java
Used ingredient: for (int k = n - 1; k >= 0; k--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4267/MersenneTwister.java
Used ingredient: for (int i = maxOrder; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4268/MersenneTwister.java
Used ingredient: for (int k = rank - 1; k >= 0; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4269/MersenneTwister.java
Used ingredient: int k = FastMath.max(0, n + 1 - xLen);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4270/MersenneTwister.java
Used ingredient: for (int i = 0; i < observed.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4271/MersenneTwister.java
Used ingredient: for (int k = 0; k < vertices.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4272/MersenneTwister.java
Used ingredient: for (int i = 0; i < observed1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4273/MersenneTwister.java
Used ingredient: for (int k = 0; k < yDotKLast.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4274/MersenneTwister.java
Used ingredient: for (int i = 0; i < parameters.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4275/MersenneTwister.java
Used ingredient: for (int i = 0; i < parameters.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4276/MersenneTwister.java
Used ingredient: for (int j = 0; j < selectedColumns.length; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4277/MersenneTwister.java
Used ingredient: for (int i = 0; i < updates.length - 1; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4278/MersenneTwister.java
Used ingredient: for (int k = 0; k < polynomials.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4279/MersenneTwister.java
Used ingredient: for (int i = 0; i < selectedRows.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4280/MersenneTwister.java
Used ingredient: for (int key = 0; key < values.length; key++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4281/MersenneTwister.java
Used ingredient: for (int i = 0; i < interpolatedY.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4282/MersenneTwister.java
Used ingredient: for (int i = 0; i < actualSequence.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4283/MersenneTwister.java
Used ingredient: for (int k = 0; k < derivatives[j].length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4284/MersenneTwister.java
Used ingredient: for (int k = 0; s != null && k < s.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4285/MersenneTwister.java
Used ingredient: for (int j = 0; j < cumulativeTestPoints.length; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4286/MersenneTwister.java
Used ingredient: for (int i = 0; i < source.length - offset; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4287/MersenneTwister.java
Used ingredient: for (int i = 0; i < dimensionSize.length - 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4288/MersenneTwister.java
Used ingredient: for (int i = 0; i < interpolatedState.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4289/MersenneTwister.java
Used ingredient: for (int i = 0; i < covMatEigenvalues.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4290/MersenneTwister.java
Used ingredient: for (int i = start + 1; i < orig.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4291/MersenneTwister.java
Used ingredient: for (int i = 0; i < binaryRepresentation.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4292/MersenneTwister.java
Used ingredient: for (int i = 0; i < cumulativeTestPoints.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4293/MersenneTwister.java
Used ingredient: for (int i = 0; i < theoreticalMinParams.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4294/MersenneTwister.java
Used ingredient: final int jStart = FastMath.max(column,    firstColumn);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4295/MersenneTwister.java
Used ingredient: for (int i = 0; i < SmallPrimes.PRIMES.length - 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4296/MersenneTwister.java
Used ingredient: for (int i = 1; i < binaryRepresentation.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4297/MersenneTwister.java
Used ingredient: for (int i = mant.length - 1; i >= mant.length - rounded.exp; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4298/MersenneTwister.java
Used ingredient: for (int i = 0; i < interpolatedSecondaryState.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4299/MersenneTwister.java
Used ingredient: for (int i = 0; i < referenceValuesUnscrambled.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4300/MersenneTwister.java
SuspiciousModificationPoint:             long l0 = (mt[i] & 0x7fffffffl)   | ((mt[i]   < 0) ? 0x80000000l : 0x0l);
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 177
Used ingredient: long l1 = (mt[i-1] & 0x7fffffffl) | ((mt[i-1] < 0) ? 0x80000000l : 0x0l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4301/MersenneTwister.java
Used ingredient: ((r & 0x7fffffffl) | ((r < 0) ? 0x80000000l : 0x0l)) / 4294967296.0,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4302/MersenneTwister.java
Used ingredient: Assert.assertEquals(refInt[i], (r & 0x7fffffffl) | ((r < 0) ? 0x80000000l : 0x0l));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4303/MersenneTwister.java
Used ingredient: final double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4304/MersenneTwister.java
Used ingredient: while (((m & 0x001ffffffffffffeL) != 0) && ((m & 0x1) == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4305/MersenneTwister.java
Used ingredient: double epsilon = x / Double.longBitsToDouble(bits & 0xfffffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4306/MersenneTwister.java
Used ingredient: return (xOptimum < xMin) ? xMin : ((xOptimum > xMax) ? xMax : xOptimum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4307/MersenneTwister.java
Used ingredient: int exponent = (int) ((bits & 0x7ff0000000000000L) >> 52) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4308/MersenneTwister.java
Used ingredient: int[] testValues = new int[] {4, 10, 12, 32, 100, 10000, 0, 0, 0, 0};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4309/MersenneTwister.java
Used ingredient: final long exponent = bits & 0x7ff0000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4310/MersenneTwister.java
Used ingredient: o0[0] = x00 - 0.5 * (x00 * mx00 + x01 * mx10 + x02 * mx20 - m0[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4311/MersenneTwister.java
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941l)) - i; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4312/MersenneTwister.java
Used ingredient: //double y = Double.longBitsToDouble(bits & 0xfffffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4313/MersenneTwister.java
Used ingredient: f[i] = y[i] - x1 * (v[i] * (v[i] + x2)) / (v[i] * (v[i] + x3) + x4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4314/MersenneTwister.java
Used ingredient: final int z0       = (0xFFFF8000 & v[indexRm1]) ^ (0x00007FFF & v[indexRm2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4315/MersenneTwister.java
Used ingredient: return ((data == null) || (data[0] == null)) ? 0 : data[0].length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4316/MersenneTwister.java
Used ingredient: final long sign     = bits & 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4317/MersenneTwister.java
Used ingredient: return (yOptimum < yMin) ? yMin : ((yOptimum > yMax) ? yMax : yOptimum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4318/MersenneTwister.java
Used ingredient: double mx00 = m0[0] * x00 + m1[0] * x10 + m2[0] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4319/MersenneTwister.java
Used ingredient: -1718875.0 / 39484.0,                      58000000.0 / 602131.0,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4320/MersenneTwister.java
Used ingredient: final double[] lnm = lnMant.LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4321/MersenneTwister.java
Used ingredient: x += Math.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4322/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4323/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4324/MersenneTwister.java
Used ingredient: final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4325/MersenneTwister.java
Used ingredient: final double ph0 = 0.5 * (currentState[i] + y1[i]) + 0.125 * (aspl + bspl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4326/MersenneTwister.java
Used ingredient: for (int trials = 500000; trials < 20000000; trials += 100000) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4327/MersenneTwister.java
Used ingredient: private static final long SIGN_MASK     = 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4328/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) (((mant[i] / 10) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4329/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4330/MersenneTwister.java
Used ingredient: rsl[j] = (int) (0x6c078965L * (k ^ k >> 30) + j & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4331/MersenneTwister.java
Used ingredient: * {@code gamma(x) = sqrt(2 * pi) / x * (x + g + 0.5) ^ (x + 0.5)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4332/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4333/MersenneTwister.java
Used ingredient: final double p = a[0] + x * (a[1] + x * (a[2] + x * a[3]));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4334/MersenneTwister.java
Used ingredient: bottom[i - j] = (bottom[i - j + 1] - bottom[i - j]) / (j * stepSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4335/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 0);  // round half-odd
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4336/MersenneTwister.java
Used ingredient: final int z4 = (z0 ^ (z0 << 11)) ^ (z1 ^ (z1 << 7)) ^ (z2 ^ (z2 << 13));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4337/MersenneTwister.java
Used ingredient: double ref = (x + dx) * (y + dy) * ((x + dx) * (y + dy) + (z + dz));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4338/MersenneTwister.java
Used ingredient: double mx10 = m0[1] * x00 + m1[1] * x10 + m2[1] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4339/MersenneTwister.java
Used ingredient: double mx20 = m0[2] * x00 + m1[2] * x10 + m2[2] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4340/MersenneTwister.java
Used ingredient: o0[1] = x01 - 0.5 * (x00 * mx01 + x01 * mx11 + x02 * mx21 - m0[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4341/MersenneTwister.java
Used ingredient: o1[0] = x10 - 0.5 * (x10 * mx00 + x11 * mx10 + x12 * mx20 - m1[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4342/MersenneTwister.java
Used ingredient: o0[2] = x02 - 0.5 * (x00 * mx02 + x01 * mx12 + x02 * mx22 - m0[2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4343/MersenneTwister.java
Used ingredient: o2[0] = x20 - 0.5 * (x20 * mx00 + x21 * mx10 + x22 * mx20 - m2[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4344/MersenneTwister.java
Used ingredient: return 2 * x[0] * x[0] - 3 * x[1] * x[1] + 4 * x[0] * x[1] - 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4345/MersenneTwister.java
Used ingredient: final double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4346/MersenneTwister.java
Used ingredient: double[] expected = { 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4347/MersenneTwister.java
Used ingredient: final double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4348/MersenneTwister.java
Used ingredient: x += FastMath.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4349/MersenneTwister.java
Used ingredient: checkCopy(m, subRows02Cols13,  new int[] { 0, 2 }, new int[] { 1, 3 },    false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4350/MersenneTwister.java
Used ingredient: checkCopy(m, subRows03Cols12,  new int[] { 0, 3 }, new int[] { 1, 2 },    false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4351/MersenneTwister.java
Used ingredient: return (sign < 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4352/MersenneTwister.java
Used ingredient: return (sign > 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4353/MersenneTwister.java
Used ingredient: return parameters[0] / x + (parameters.length < 2 ? 0 : parameters[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4354/MersenneTwister.java
Used ingredient: this.maxIter     = (maxNumIter   <= 0) ? 2 : maxNumIter;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4355/MersenneTwister.java
Used ingredient: boolean bisect = (x < x1 && (x1 - x0) > 0.95 * (x2 - x0)) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4356/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) (((mant[i] / 100) %10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4357/MersenneTwister.java
Used ingredient: private static final double K14_13 =             -4149.0 / 500000.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4358/MersenneTwister.java
Used ingredient: long sign = ((k & 0x1) == 0) ? 1 : -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4359/MersenneTwister.java
Used ingredient: final double v = (1 + c * x) * (1 + c * x) * (1 + c * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4360/MersenneTwister.java
Used ingredient: checkCopy(m, copy, new int[] { 0, 1 }, new int[] { 0, 1, 2 }, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4361/MersenneTwister.java
Used ingredient: return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4362/MersenneTwister.java
Used ingredient: double p = (matrixT[iu - 1][iu - 1] - matrixT[iu][iu]) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4363/MersenneTwister.java
Used ingredient: out[0] = 2 * (m0 * (x * m0 - (q2 * z - q3 * y)) + s * q1) - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4364/MersenneTwister.java
Used ingredient: f += 1e2 * (x[i] * x[i] - x[i + 1]) * (x[i] * x[i] - x[i + 1])
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4365/MersenneTwister.java
Used ingredient: f[i] = y[i] - (x01 * tmp1 + x02 * tmp2 + x03 * tmp3 + x04 * tmp4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4366/MersenneTwister.java
Used ingredient: result = prime * result + ((field == null) ? 0 : field.hashCode());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4367/MersenneTwister.java
Used ingredient: if ((m >= 0 && s >= 0) || (m < 0 && s < 0)) { // Sign is currently OK
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4368/MersenneTwister.java
Used ingredient: final long sign = bits & 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4369/MersenneTwister.java
Used ingredient: double mx01 = m0[0] * x01 + m1[0] * x11 + m2[0] * x21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4370/MersenneTwister.java
Used ingredient: double mx02 = m0[0] * x02 + m1[0] * x12 + m2[0] * x22;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4371/MersenneTwister.java
Used ingredient: double f3 = (f0 + x / (2 * y * f0)) / (4 * x * x * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4372/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 1);  // round half-even
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4373/MersenneTwister.java
Used ingredient: y = (mtNext & 0x80000000) | (mt[0] & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4374/MersenneTwister.java
Used ingredient: final double b = (2 * q + 1) * y2 - (1 + q) * (1 + q) * y1 + q * q * y0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4375/MersenneTwister.java
Used ingredient: * c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4376/MersenneTwister.java
Used ingredient: long mask  = 0xffffffff00000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4377/MersenneTwister.java
Used ingredient: * c1 = (1 0  | 1 0 1 0  | 0 1 1)    X   c2 = (0 1  | 1 0 0 1  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4378/MersenneTwister.java
Used ingredient: 2479159.0 / 157936.0,                    -18750000.0 / 602131.0,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4379/MersenneTwister.java
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1664525l)) + seed[j] + j; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4380/MersenneTwister.java
Used ingredient: (1.0 / (i + 2) - scaledX2 * (1.0 / (6 * i + 24) - scaledX2 / (120 * i + 720)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4381/MersenneTwister.java
Used ingredient: // lnm is a log of a number in the range of 1.0 - 2.0, so 0 <= lnm < ln(2)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4382/MersenneTwister.java
Used ingredient: (1.0 / (i + 1) - scaledX2 * (1.0 / (2 * i + 6) - scaledX2 / (24 * i + 120)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4383/MersenneTwister.java
Used ingredient: x += StrictMath.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4384/MersenneTwister.java
Used ingredient: return 1 + ((left  == null) ? 0 : left.size()) + ((right == null) ? 0 : right.size());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4385/MersenneTwister.java
Used ingredient: checkCopy(m, subRows31Cols31,  new int[] { 3, 1 }, new int[] { 3, 1 },    false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4386/MersenneTwister.java
Used ingredient: for (int i = 0; i < N-1; i += (i == 0 ? 2 : 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4387/MersenneTwister.java
Used ingredient: return (sign < 0) && ((mant[mant.length - 1] != 0) || isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4388/MersenneTwister.java
Used ingredient: return (sign > 0) && ((mant[mant.length - 1] != 0) || isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4389/MersenneTwister.java
Used ingredient: long bits = mantissa | ((exponent + 1023L) << 52);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4390/MersenneTwister.java
Used ingredient: int r = mant[i] * x.mant[j];    // multiply the 2 digits
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4391/MersenneTwister.java
Used ingredient: // monomial(t) = (t - t0) * (t - t1) * ... * (t - t(i-1))
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4392/MersenneTwister.java
Used ingredient: if (((bits & 0x8000000000000000L) != 0 || x != x) && x != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4393/MersenneTwister.java
Used ingredient: final int z2       = (vM2 ^ (vM2 << 10)) ^ (vM3 << 26);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4394/MersenneTwister.java
Used ingredient: private static final long EXPONENT_MASK = 0x7ff0000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4395/MersenneTwister.java
Used ingredient: final int z1 = (vi ^ (vi << 16))   ^ (vi1 ^ (vi1 << 15));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4396/MersenneTwister.java
Used ingredient: private static final double E2_12 =             69869.0 / 3084480.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4397/MersenneTwister.java
Used ingredient: Assert.assertEquals((i == 0 ? x.getValue() : (i == 1 ? 1.0 : 0.0)) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4398/MersenneTwister.java
Used ingredient: final double xN = (x - xval[i]) / (xval[i + 1] - xval[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4399/MersenneTwister.java
Used ingredient: final double b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4400/MersenneTwister.java
SuspiciousModificationPoint:             long l1 = (mt[i-1] & 0x7fffffffl) | ((mt[i-1] < 0) ? 0x80000000l : 0x0l);
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 178
Used ingredient: long l0 = (mt[i] & 0x7fffffffl)   | ((mt[i]   < 0) ? 0x80000000l : 0x0l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4401/MersenneTwister.java
Used ingredient: ((r & 0x7fffffffl) | ((r < 0) ? 0x80000000l : 0x0l)) / 4294967296.0,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4402/MersenneTwister.java
Used ingredient: Assert.assertEquals(refInt[i], (r & 0x7fffffffl) | ((r < 0) ? 0x80000000l : 0x0l));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4403/MersenneTwister.java
Used ingredient: final double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4404/MersenneTwister.java
Used ingredient: while (((m & 0x001ffffffffffffeL) != 0) && ((m & 0x1) == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4405/MersenneTwister.java
Used ingredient: double epsilon = x / Double.longBitsToDouble(bits & 0xfffffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4406/MersenneTwister.java
Used ingredient: int exponent = (int) ((bits & 0x7ff0000000000000L) >> 52) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4407/MersenneTwister.java
Used ingredient: final long exponent = bits & 0x7ff0000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4408/MersenneTwister.java
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941l)) - i; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4409/MersenneTwister.java
Used ingredient: //double y = Double.longBitsToDouble(bits & 0xfffffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4410/MersenneTwister.java
Used ingredient: double mx10 = m0[1] * x00 + m1[1] * x10 + m2[1] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4411/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4412/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4413/MersenneTwister.java
Used ingredient: return (xOptimum < xMin) ? xMin : ((xOptimum > xMax) ? xMax : xOptimum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4414/MersenneTwister.java
Used ingredient: int[] testValues = new int[] {4, 10, 12, 32, 100, 10000, 0, 0, 0, 0};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4415/MersenneTwister.java
Used ingredient: f[i] = y[i] - x1 * (v[i] * (v[i] + x2)) / (v[i] * (v[i] + x3) + x4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4416/MersenneTwister.java
Used ingredient: return ((data == null) || (data[0] == null)) ? 0 : data[0].length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4417/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4418/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4419/MersenneTwister.java
Used ingredient: final double[] lnm = lnMant.LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4420/MersenneTwister.java
Used ingredient: final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4421/MersenneTwister.java
Used ingredient: final int z0       = (0xFFFF8000 & v[indexRm1]) ^ (0x00007FFF & v[indexRm2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4422/MersenneTwister.java
Used ingredient: final long sign     = bits & 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4423/MersenneTwister.java
Used ingredient: double mx00 = m0[0] * x00 + m1[0] * x10 + m2[0] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4424/MersenneTwister.java
Used ingredient: for (int trials = 500000; trials < 20000000; trials += 100000) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4425/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) (((mant[i] / 10) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4426/MersenneTwister.java
Used ingredient: o0[1] = x01 - 0.5 * (x00 * mx01 + x01 * mx11 + x02 * mx21 - m0[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4427/MersenneTwister.java
Used ingredient: final double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4428/MersenneTwister.java
Used ingredient: double[] expected = { 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4429/MersenneTwister.java
Used ingredient: return (sign < 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4430/MersenneTwister.java
Used ingredient: return (sign > 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4431/MersenneTwister.java
Used ingredient: boolean bisect = (x < x1 && (x1 - x0) > 0.95 * (x2 - x0)) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4432/MersenneTwister.java
Used ingredient: double p = (matrixT[iu - 1][iu - 1] - matrixT[iu][iu]) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4433/MersenneTwister.java
Used ingredient: ya = (tmp1 + tmp2 - tmp1) * HEX_40000000 * HEX_40000000;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4434/MersenneTwister.java
Used ingredient: double mx12 = m0[1] * x02 + m1[1] * x12 + m2[1] * x22;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4435/MersenneTwister.java
Used ingredient: double mx11 = m0[1] * x01 + m1[1] * x11 + m2[1] * x21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4436/MersenneTwister.java
Used ingredient: x += Math.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4437/MersenneTwister.java
Used ingredient: final double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4438/MersenneTwister.java
Used ingredient: final double ph0 = 0.5 * (currentState[i] + y1[i]) + 0.125 * (aspl + bspl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4439/MersenneTwister.java
Used ingredient: o0[0] = x00 - 0.5 * (x00 * mx00 + x01 * mx10 + x02 * mx20 - m0[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4440/MersenneTwister.java
Used ingredient: return (yOptimum < yMin) ? yMin : ((yOptimum > yMax) ? yMax : yOptimum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4441/MersenneTwister.java
Used ingredient: final double p = a[0] + x * (a[1] + x * (a[2] + x * a[3]));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4442/MersenneTwister.java
Used ingredient: bottom[i - j] = (bottom[i - j + 1] - bottom[i - j]) / (j * stepSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4443/MersenneTwister.java
Used ingredient: final int z4 = (z0 ^ (z0 << 11)) ^ (z1 ^ (z1 << 7)) ^ (z2 ^ (z2 << 13));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4444/MersenneTwister.java
Used ingredient: double mx20 = m0[2] * x00 + m1[2] * x10 + m2[2] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4445/MersenneTwister.java
Used ingredient: o1[0] = x10 - 0.5 * (x10 * mx00 + x11 * mx10 + x12 * mx20 - m1[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4446/MersenneTwister.java
Used ingredient: return parameters[0] / x + (parameters.length < 2 ? 0 : parameters[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4447/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) (((mant[i] / 100) %10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4448/MersenneTwister.java
Used ingredient: long sign = ((k & 0x1) == 0) ? 1 : -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4449/MersenneTwister.java
Used ingredient: final double v = (1 + c * x) * (1 + c * x) * (1 + c * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4450/MersenneTwister.java
Used ingredient: f += 1e2 * (x[i] * x[i] - x[i + 1]) * (x[i] * x[i] - x[i + 1])
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4451/MersenneTwister.java
Used ingredient: f[i] = y[i] - (x01 * tmp1 + x02 * tmp2 + x03 * tmp3 + x04 * tmp4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4452/MersenneTwister.java
Used ingredient: result = prime * result + ((field == null) ? 0 : field.hashCode());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4453/MersenneTwister.java
Used ingredient: final long sign = bits & 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4454/MersenneTwister.java
Used ingredient: double mx01 = m0[0] * x01 + m1[0] * x11 + m2[0] * x21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4455/MersenneTwister.java
Used ingredient: y = (mtNext & 0x80000000) | (mt[0] & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4456/MersenneTwister.java
Used ingredient: * c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4457/MersenneTwister.java
Used ingredient: long mask  = 0xffffffff00000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4458/MersenneTwister.java
Used ingredient: * c1 = (1 0  | 1 0 1 0  | 0 1 1)    X   c2 = (0 1  | 1 0 0 1  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4459/MersenneTwister.java
Used ingredient: return (sign < 0) && ((mant[mant.length - 1] != 0) || isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4460/MersenneTwister.java
Used ingredient: return (sign > 0) && ((mant[mant.length - 1] != 0) || isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4461/MersenneTwister.java
Used ingredient: final double b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4462/MersenneTwister.java
Used ingredient: while ( (mantissa & 0x0010000000000000L) == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4463/MersenneTwister.java
Used ingredient: y[i] = ((((3 * t - 15) * t + 60) * t - 180) * t + 360) * t - 360;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4464/MersenneTwister.java
Used ingredient: checkDensity(1, 1, x, new double[] { 0.00, 0.00, 0.00, 1.00, 0.25 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4465/MersenneTwister.java
Used ingredient: longMT = (1812433253l * (longMT ^ (longMT >> 30)) + mti) & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4466/MersenneTwister.java
Used ingredient: last[i] = diag[0][i] + coeff[k+offset][k-1] * (diag[0][i] - last[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4467/MersenneTwister.java
Used ingredient: * f[x0,x1,...,xk] = (f[x1,...,xk] - f[x0,...,x[k-1]]) / (xk - x0)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4468/MersenneTwister.java
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1664525l)) + seed[j] + j; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4469/MersenneTwister.java
Used ingredient: checkDensity(1.1, 1, x, new double[] { 0.000, 0.000, 0.000, 0.000, 0.275 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4470/MersenneTwister.java
Used ingredient: x += FastMath.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4471/MersenneTwister.java
Used ingredient: private static final long SIGN_MASK     = 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4472/MersenneTwister.java
Used ingredient: rsl[j] = (int) (0x6c078965L * (k ^ k >> 30) + j & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4473/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 0);  // round half-odd
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4474/MersenneTwister.java
Used ingredient: return 2 * x[0] * x[0] - 3 * x[1] * x[1] + 4 * x[0] * x[1] - 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4475/MersenneTwister.java
Used ingredient: return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4476/MersenneTwister.java
Used ingredient: double mx02 = m0[0] * x02 + m1[0] * x12 + m2[0] * x22;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4477/MersenneTwister.java
Used ingredient: final double b = (2 * q + 1) * y2 - (1 + q) * (1 + q) * y1 + q * q * y0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4478/MersenneTwister.java
Used ingredient: long bits = mantissa | ((exponent + 1023L) << 52);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4479/MersenneTwister.java
Used ingredient: // monomial(t) = (t - t0) * (t - t1) * ... * (t - t(i-1))
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4480/MersenneTwister.java
Used ingredient: private static final long EXPONENT_MASK = 0x7ff0000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4481/MersenneTwister.java
Used ingredient: Assert.assertEquals((i == 0 ? x.getValue() : (i == 1 ? 1.0 : 0.0)) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4482/MersenneTwister.java
Used ingredient: final double xN = (x - xval[i]) / (xval[i + 1] - xval[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4483/MersenneTwister.java
Used ingredient: final long m = (sign(bits) == 0L) ? mantissa(bits) : -mantissa(bits);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4484/MersenneTwister.java
Used ingredient: boolean bita = (bd & 0x8000000000000000L) != 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4485/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) ((mant[i] / 1000) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4486/MersenneTwister.java
Used ingredient: boolean bitsum = (prodB & 0x8000000000000000L) != 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4487/MersenneTwister.java
Used ingredient: long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4488/MersenneTwister.java
Used ingredient: buffer[p++] = (char) (((mant[i] / 10) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4489/MersenneTwister.java
Used ingredient: return (size2 < size1) ? -1 : ((o1 == o2) ? 0 : +1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4490/MersenneTwister.java
Used ingredient: buffer[p++] = (char) (((mant[i] / 100) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4491/MersenneTwister.java
Used ingredient: final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4492/MersenneTwister.java
Used ingredient: final int z0 = (0x80000000 & v[indexRm1]) ^ (0x7FFFFFFF & v[indexRm2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4493/MersenneTwister.java
Used ingredient: final Integer[] p1 = new Integer[] { 1, 0, 1, 0, 0, 1, 0, 1, 1 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4494/MersenneTwister.java
Used ingredient: y = (mtCurr & 0x80000000) | (mtNext & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4495/MersenneTwister.java
Used ingredient: xTransformed[j] = xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4496/MersenneTwister.java
Used ingredient: double p2 = Double.longBitsToDouble((inbits & 0x8000000000000000L) |
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4497/MersenneTwister.java
Used ingredient: * p1 = (1 0 1 0 0 1  | 0 1 1)    X    p2 = (0 1 1 0 1 0  | 1 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4498/MersenneTwister.java
Used ingredient: long mask = 0xffffffffc0000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4499/MersenneTwister.java
Used ingredient: * p1 = (1 0  | 1 0 0 1 | 0 1 1)    X    p2 = (0 1  | 1 0 1 0  | 1 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4500/MersenneTwister.java
SuspiciousModificationPoint:             long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1664525l)) + seed[j] + j; // non linear
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 179
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941l)) - i; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4501/MersenneTwister.java
Used ingredient: final int z4       = z0 ^ (z1 ^ (z1 >>> 20)) ^ z2Second ^ z3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4502/MersenneTwister.java
Used ingredient: final long np = 1L << (n-1);           // number of new points in this stage
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4503/MersenneTwister.java
Used ingredient: longMT = (1812433253l * (longMT ^ (longMT >> 30)) + mti) & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4504/MersenneTwister.java
Used ingredient: int z4             = z0 ^ (z1 ^ (z1 >>> 20)) ^ z2Second ^ z3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4505/MersenneTwister.java
Used ingredient: final int z4 = z0 ^ (z1 ^ (z1 << 9)) ^ (z2 ^ (z2 << 21)) ^ (z3 ^ (z3 >>> 21));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4506/MersenneTwister.java
Used ingredient: final int z4 = (z0 ^ (z0 << 11)) ^ (z1 ^ (z1 << 7)) ^ (z2 ^ (z2 << 13));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4507/MersenneTwister.java
Used ingredient: final double b = (2 * q + 1) * y2 - (1 + q) * (1 + q) * y1 + q * q * y0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4508/MersenneTwister.java
Used ingredient: inc = (sign == -1) && (n != 0 || discarded != 0);  // round floor
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4509/MersenneTwister.java
Used ingredient: int z4 = z0 ^ (z1 ^ (z1 << 9)) ^ (z2 ^ (z2 << 21)) ^ (z3 ^ (z3 >>> 21));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4510/MersenneTwister.java
Used ingredient: * U1 = R1 - (n1 * (n1 + 1)) / 2 where R1 is sum of ranks for sample 1,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4511/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 1);  // round half-even
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4512/MersenneTwister.java
Used ingredient: inc = (sign == 1) && (n != 0 || discarded != 0);  // round ceil
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4513/MersenneTwister.java
Used ingredient: final double delta = 1 - (y1 * y2) / (y3 * y3);  // delta > 1 due to bracketing
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4514/MersenneTwister.java
Used ingredient: (n == 5 && discarded == 0 && ((lsb / lsbthreshold) & 1) == 1);  // round half-even
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4515/MersenneTwister.java
Used ingredient: (n == 5 && discarded == 0 && ((lsb / lsbthreshold) & 1) == 0);  // round half-odd
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4516/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 0);  // round half-odd
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4517/MersenneTwister.java
Used ingredient: out[1] = 2 * (m0 * (y * m0 - (q3 * x - q1 * z)) + s * q2) - y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4518/MersenneTwister.java
Used ingredient: final int z1       = (v0 ^ (v0 << 24))  ^ (vM1 ^ (vM1 >>> 30));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4519/MersenneTwister.java
Used ingredient: out[1] = 2 * (q0 * (y * q0 - (q3 * x - q1 * z)) + s * q2) - y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4520/MersenneTwister.java
Used ingredient: out[0] = 2 * (m0 * (x * m0 - (q2 * z - q3 * y)) + s * q1) - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4521/MersenneTwister.java
Used ingredient: out[2] = 2 * (m0 * (z * m0 - (q1 * y - q2 * x)) + s * q3) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4522/MersenneTwister.java
Used ingredient: while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { // while u and v are
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4523/MersenneTwister.java
Used ingredient: out[0] = 2 * (q0 * (x * q0 - (q2 * z - q3 * y)) + s * q1) - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4524/MersenneTwister.java
Used ingredient: out[2] = 2 * (q0 * (z * q0 - (q1 * y - q2 * x)) + s * q3) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4525/MersenneTwister.java
Used ingredient: return new Vector3D(2 * (m0 * (x * m0 - (q2 * z - q3 * y)) + s * q1) - x,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4526/MersenneTwister.java
Used ingredient: return new Vector3D(2 * (q0 * (x * q0 - (q2 * z - q3 * y)) + s * q1) - x,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4527/MersenneTwister.java
Used ingredient: * Note that i - j + 1 > 0 <=> i + 1 > j instead of j'ing all the way to
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4528/MersenneTwister.java
Used ingredient: return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : a); // return +0.0/-0.0/NaN depending on a
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4529/MersenneTwister.java
Used ingredient: double ref = (x + dx) * (y + dy) * ((x + dx) * (y + dy) + (z + dz));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4530/MersenneTwister.java
Used ingredient: v[i] = (int) ((1812433253l * (l ^ (l >> 30)) + i) & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4531/MersenneTwister.java
Used ingredient: * <li>{@code 2 * (b - x) / [(b - a) * (b - c)]} if {@code c < x <= b},</li>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4532/MersenneTwister.java
Used ingredient: * <li>{@code 2 * (x - a) / [(b - a) * (c - a)]} if {@code a <= x < c},</li>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4533/MersenneTwister.java
Used ingredient: return rln10b * lnb + rln10b * lna + rln10a * lnb + rln10a * lna;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4534/MersenneTwister.java
Used ingredient: final double dot5 = theta2 * (3 + theta * (-12 + theta * (15 - 6 * theta)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4535/MersenneTwister.java
Used ingredient: // we write these relations for i = 1 to i= n-1 as a set of 2(n-1) linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4536/MersenneTwister.java
Used ingredient: (-b23 * d1 - (c3 * a1 - c1 * a3) * d2 - (c1 * a2 - c2 * a1) * d3) * r,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4537/MersenneTwister.java
Used ingredient: direction[d][i] ^= ((a >> (s - 1 - k)) & 1) * direction[d][i - k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4538/MersenneTwister.java
Used ingredient: final double pooledVariance = ((n1  - 1) * v1 + (n2 -1) * v2 ) / (n1 + n2 - 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4539/MersenneTwister.java
Used ingredient: (1.0 / (i + 1) - scaledX2 * (1.0 / (2 * i + 6) - scaledX2 / (24 * i + 120)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4540/MersenneTwister.java
Used ingredient: * <li>{@code 1 - (b - x)^2 / [(b - a) * (b - c)]} if {@code c < x <= b},</li>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4541/MersenneTwister.java
Used ingredient: return (a < 0.0f) ? -1.0f : ((a > 0.0f) ? 1.0f : a); // return +0.0/-0.0/NaN depending on a
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4542/MersenneTwister.java
Used ingredient: final double a2 = (twolpd / delta) * FastMath.exp(-delta * (1 + delta) / twolpd);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4543/MersenneTwister.java
Used ingredient: beta = dx * dx + dsq * (xoptsq + dx + dx + HALF * dsq) + beta - bsum; // Original
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4544/MersenneTwister.java
Used ingredient: final double dot6 = theta2 * theta * (4 + theta * (-15 + theta * (18 - 7 * theta)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4545/MersenneTwister.java
Used ingredient: long l0 = (mt[i] & 0x7fffffffl)   | ((mt[i]   < 0) ? 0x80000000l : 0x0l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4546/MersenneTwister.java
Used ingredient: final double ph0 = 0.5 * (currentState[i] + y1[i]) + 0.125 * (aspl + bspl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4547/MersenneTwister.java
Used ingredient: final double p = a[0] + x * (a[1] + x * (a[2] + x * a[3]));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4548/MersenneTwister.java
Used ingredient: final double v = (1 + c * x) * (1 + c * x) * (1 + c * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4549/MersenneTwister.java
Used ingredient: final double b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4550/MersenneTwister.java
Used ingredient: long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4551/MersenneTwister.java
Used ingredient: final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4552/MersenneTwister.java
Used ingredient: if ((m >= 0 && s >= 0) || (m < 0 && s < 0)) { // Sign is currently OK
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4553/MersenneTwister.java
Used ingredient: double f3 = (f0 + x / (2 * y * f0)) / (4 * x * x * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4554/MersenneTwister.java
Used ingredient: final double b5 = hTheta * (      theta * (-5.0/16.0  + theta *  5.0/12.0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4555/MersenneTwister.java
Used ingredient: *  one to get ln(x+1) - ln(1-x).  Note the even terms cancel out leaving
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4556/MersenneTwister.java
Used ingredient: final DSCompiler valueCompiler      = (p == 0) ? null : newCache[p - 1][o];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4557/MersenneTwister.java
Used ingredient: final double ppc = ((2 * j + 1) * c * pc - j * pmc) / (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4558/MersenneTwister.java
Used ingredient: final double bMinus = bin == 0 ? 0 : (bin - 1) * binMass + firstBinMass;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4559/MersenneTwister.java
Used ingredient: final int z1 = (v0 ^ (v0 << 25))  ^ (vM1 ^ (vM1 >>> 27));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4560/MersenneTwister.java
Used ingredient: final double a = q * (y2 - (1 + q) * y1 + q * y0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4561/MersenneTwister.java
Used ingredient: return (((v1 / n1) + (v2 / n2)) * ((v1 / n1) + (v2 / n2))) /
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4562/MersenneTwister.java
Used ingredient: final double dot3          = ((3 * theta - 4) * theta + 1) / h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4563/MersenneTwister.java
Used ingredient: return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4564/MersenneTwister.java
Used ingredient: meanX2 = ((x0 * x0 + x0 * x1 + x1 * x1) * p12 + (x2 * x2 + x2
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4565/MersenneTwister.java
Used ingredient: * final double VarW = ((double) (N * (N + 1) * (2*N + 1))) / 24;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4566/MersenneTwister.java
Used ingredient: final double coeff1     = s * (8 - 15 * theta + 2 * fourTheta2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4567/MersenneTwister.java
Used ingredient: *   0    0    1     1     0     0     0     1     4   &lt;= constraint 3
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4568/MersenneTwister.java
Used ingredient: 2 * (m0 * (z * m0 - (q1 * y - q2 * x)) + s * q3) - z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4569/MersenneTwister.java
Used ingredient: 2 * (q0 * (z * q0 - (q1 * y - q2 * x)) + s * q3) - z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4570/MersenneTwister.java
Used ingredient: * q_i = sum_{j=1}^i (ln 2)^j/j! = ln 2 + (ln 2)^2/2 + ... + (ln 2)^i/i!
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4571/MersenneTwister.java
Used ingredient: final double alpha = 0.001;         // Probability of false failure
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4572/MersenneTwister.java
Used ingredient: * <center>Δ(x) = log Γ(x) - (x - 0.5) log a + a - 0.5 log 2π,</center>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4573/MersenneTwister.java
Used ingredient: * Returns the value of log B(p, q) for 0 ≤ x ≤ 1 and p, q > 0. Based on the
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4574/MersenneTwister.java
Used ingredient: return new double[] { -3.0001,                 // below lower limit
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4575/MersenneTwister.java
Used ingredient: * <li>{@code 0.5 + 0.5 * erf((ln(x) - m) / (s * sqrt(2))} otherwise.</li>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4576/MersenneTwister.java
Used ingredient: *       set to -1.0, 0.0, or 1.0, the value being nonzero if and only if the
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4577/MersenneTwister.java
Used ingredient: *             if the specified provider is not installed
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4578/MersenneTwister.java
Used ingredient: long l1 = (mt[i-1] & 0x7fffffffl) | ((mt[i-1] < 0) ? 0x80000000l : 0x0l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4579/MersenneTwister.java
Used ingredient: (1.0 / (i + 2) - scaledX2 * (1.0 / (6 * i + 24) - scaledX2 / (120 * i + 720)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4580/MersenneTwister.java
Used ingredient: ret = ret * 31 + (11 * (row+1) + 17 * (col+1)) * getEntry(row, col).hashCode();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4581/MersenneTwister.java
Used ingredient: final int z4 = (z0 ^ (z0 << 2)) ^ (z1 ^ (z1 << 18)) ^ (z2 << 28) ^ (z3 ^ ((z3 << 5) & 0xda442d24));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4582/MersenneTwister.java
Used ingredient: final double bDot0 = 1 + theta * (-15.0/2.0 + theta * (16.0 - 10.0 * theta));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4583/MersenneTwister.java
Used ingredient: if ((sign >= 0 && sb >= 0) || (sign < 0 && sb < 0)) { // Sign is currently OK
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4584/MersenneTwister.java
Used ingredient: * new value = old value - 3 * (dev/n) * m2 + (n-1) * (n -2) * (dev^3/n^2)</p>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4585/MersenneTwister.java
Used ingredient: absAtanh = a * (1 + a2 * (F_1_3 + a2 * (F_1_5 + a2 * (F_1_7 + a2 * F_1_9))));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4586/MersenneTwister.java
Used ingredient: * " { { 1 , 1 , 1 } } " will be parsed without error and the same matrix will be
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4587/MersenneTwister.java
Used ingredient: final long grayCode = i ^ (i >> 1); // compute the gray code of i = i XOR floor(i / 2)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4588/MersenneTwister.java
Used ingredient: return FastMath.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4589/MersenneTwister.java
Used ingredient: final double rOffset = c1X * line.cos + c1Y * line.sin + c11 * line.originOffset;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4590/MersenneTwister.java
Used ingredient: interpolatedState[i] = p0 + theta * (p1 + oneMinusTheta * (p2 * theta + p3 * oneMinusTheta));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4591/MersenneTwister.java
Used ingredient: o0[1] = x01 - 0.5 * (x00 * mx01 + x01 * mx11 + x02 * mx21 - m0[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4592/MersenneTwister.java
Used ingredient: boolean bisect = (x < x1 && (x1 - x0) > 0.95 * (x2 - x0)) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4593/MersenneTwister.java
Used ingredient: double mx01 = m0[0] * x01 + m1[0] * x11 + m2[0] * x21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4594/MersenneTwister.java
Used ingredient: * c1 = (1 0  | 1 0 1 0  | 0 1 1)    X   c2 = (0 1  | 1 0 0 1  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4595/MersenneTwister.java
Used ingredient: y[i] = ((((3 * t - 15) * t + 60) * t - 180) * t + 360) * t - 360;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4596/MersenneTwister.java
Used ingredient: rsl[j] = (int) (0x6c078965L * (k ^ k >> 30) + j & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4597/MersenneTwister.java
Used ingredient: double mx02 = m0[0] * x02 + m1[0] * x12 + m2[0] * x22;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4598/MersenneTwister.java
Used ingredient: * p1 = (1 0  | 1 0 0 1 | 0 1 1)    X    p2 = (0 1  | 1 0 1 0  | 1 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4599/MersenneTwister.java
Used ingredient: * Introducing w2[k] = w[k] - s[1] * ... * s[k-1] * c[k] * v[1], we find,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4600/MersenneTwister.java
SuspiciousModificationPoint:             mt[i]   = (int) (l & 0xffffffffl);
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 180
Used ingredient: mt[i]   = (int) (l & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4601/MersenneTwister.java
Used ingredient: long b = inbits & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4602/MersenneTwister.java
Used ingredient: bytes[i]     = (byte) (random & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4603/MersenneTwister.java
Used ingredient: int mantissa   = bits & 0x007fffff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4604/MersenneTwister.java
Used ingredient: bits = bits & 0x7fffffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4605/MersenneTwister.java
Used ingredient: bytes[i++] = (byte) (random & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4606/MersenneTwister.java
Used ingredient: long d = shpiA & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4607/MersenneTwister.java
Used ingredient: mantissa = mantissa & 0x007fffff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4608/MersenneTwister.java
Used ingredient: long mantissa   = bits & 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4609/MersenneTwister.java
Used ingredient: d = shpi0 & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4610/MersenneTwister.java
Used ingredient: d = shpiB & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4611/MersenneTwister.java
Used ingredient: mantissa = mantissa & 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4612/MersenneTwister.java
Used ingredient: bits = bits | (((long) next(32)) & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4613/MersenneTwister.java
Used ingredient: long mantissa = bits & 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4614/MersenneTwister.java
Used ingredient: final double numer = bits & 0x3ffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4615/MersenneTwister.java
Used ingredient: int intFrac = (int) (x * 1024.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4616/MersenneTwister.java
Used ingredient: d = PI_O_4_BITS[1] & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4617/MersenneTwister.java
Used ingredient: d = PI_O_4_BITS[0] & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4618/MersenneTwister.java
Used ingredient: mantissa &= 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4619/MersenneTwister.java
Used ingredient: b = prodA & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4620/MersenneTwister.java
Used ingredient: b = prodB & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4621/MersenneTwister.java
Used ingredient: inbits &= 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4622/MersenneTwister.java
Used ingredient: final long  low  = ((long) next(32)) & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4623/MersenneTwister.java
Used ingredient: int idx = (int) ((xa * 8.0) + 0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4624/MersenneTwister.java
Used ingredient: bytes[i + 2] = (byte) ((random >> 16) & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4625/MersenneTwister.java
Used ingredient: bytes[i + 1] = (byte) ((random >>  8) & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4626/MersenneTwister.java
Used ingredient: bytes[i + 3] = (byte) ((random >> 24) & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4627/MersenneTwister.java
Used ingredient: bits = (bits << 8) | (((long) b) & 0xffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4628/MersenneTwister.java
Used ingredient: int  exponent  = (bits >>> 23) & 0xff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4629/MersenneTwister.java
Used ingredient: int k = (int) Math.ceil(n * d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4630/MersenneTwister.java
Used ingredient: long mask  = 0xffffffff00000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4631/MersenneTwister.java
Used ingredient: a = (int) (blbu % al);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4632/MersenneTwister.java
Used ingredient: long mask  = 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4633/MersenneTwister.java
Used ingredient: return hash & 0x7fffffff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4634/MersenneTwister.java
Used ingredient: final int k = (int) Math.ceil(n * d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4635/MersenneTwister.java
Used ingredient: mant[mant.length - 1] = (int) (x % RADIX);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4636/MersenneTwister.java
Used ingredient: long m              = bits & 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4637/MersenneTwister.java
Used ingredient: y = (mtNext & 0x80000000) | (mt[0] & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4638/MersenneTwister.java
Used ingredient: int result = (int) (nextDouble() * n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4639/MersenneTwister.java
Used ingredient: v[i] = (int) ((1812433253l * (l ^ (l >> 30)) + i) & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4640/MersenneTwister.java
Used ingredient: f[i] += 1.0 / (i * (i + 2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4641/MersenneTwister.java
Used ingredient: yDot[i] = t * (t * t - y[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4642/MersenneTwister.java
Used ingredient: int exp = (int)(bits >> 52)-1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4643/MersenneTwister.java
Used ingredient: iu = (int) (angbd * 17. + 3.1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4644/MersenneTwister.java
Used ingredient: int intPart = (int)(prodA >>> 62);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4645/MersenneTwister.java
Used ingredient: return (int) floor(x + 0.5f);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4646/MersenneTwister.java
Used ingredient: long mask = 0xffffffffc0000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4647/MersenneTwister.java
Used ingredient: final int num = (int) data.getN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4648/MersenneTwister.java
Used ingredient: data[i] = v.getEntry(i - index);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4649/MersenneTwister.java
Used ingredient: mt[mti]= (int) longMT;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4650/MersenneTwister.java
Used ingredient: y = (mtCurr & 0x80000000) | (mtNext & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4651/MersenneTwister.java
Used ingredient: int  exponent   = ((int) (bits >>> 52)) & 0x7ff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4652/MersenneTwister.java
Used ingredient: coeff[i + N * j] = (i + 1) * (j + 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4653/MersenneTwister.java
Used ingredient: return (int) ((m >> (k - e)) & 0x1L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4654/MersenneTwister.java
Used ingredient: rsl[j] = (int) (0x6c078965L * (k ^ k >> 30) + j & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4655/MersenneTwister.java
Used ingredient: jacobian[i][j] = (i + 1) * (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4656/MersenneTwister.java
Used ingredient: data[i][1] = i + 1/((double)i + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4657/MersenneTwister.java
Used ingredient: setSeed(new int[]{(int) (seed >>> 32), (int) (seed & 0xffffffffL)});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4658/MersenneTwister.java
Used ingredient: final int len = ((int) (max - min)) + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4659/MersenneTwister.java
Used ingredient: setSeed(new int[] { (int) (seed >>> 32), (int) (seed & 0xffffffffl) });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4660/MersenneTwister.java
Used ingredient: points[i] = points[i] * scale + shift;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4661/MersenneTwister.java
Used ingredient: ret = (t / x) * ((c - 0.5) - 0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4662/MersenneTwister.java
Used ingredient: t = y * (y + 1) / (2 * lambda);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4663/MersenneTwister.java
Used ingredient: x[i] = min + i * (max - min) / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4664/MersenneTwister.java
Used ingredient: y = (int) ((y2 + cst) % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4665/MersenneTwister.java
Used ingredient: mantissa = mantissa | (1L << 52);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4666/MersenneTwister.java
Used ingredient: pa[i][j] = (i == j) ? 1 : 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4667/MersenneTwister.java
Used ingredient: mantissa = mantissa | (1 << 23);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4668/MersenneTwister.java
Used ingredient: (value >= min) && (value <= max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4669/MersenneTwister.java
Used ingredient: s[i] = f.value(min + i * h);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4670/MersenneTwister.java
Used ingredient: minImpl[i]     = new Min();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4671/MersenneTwister.java
Used ingredient: meanImpl[i]    = new Mean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4672/MersenneTwister.java
Used ingredient: maxImpl[i]     = new Max();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4673/MersenneTwister.java
Used ingredient: c[i] = new Complex(real[i], 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4674/MersenneTwister.java
Used ingredient: sumImpl[i]     = new Sum();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4675/MersenneTwister.java
Used ingredient: y = (int) (square % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4676/MersenneTwister.java
Used ingredient: Dfp[] y  = interpolator.value(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4677/MersenneTwister.java
Used ingredient: target[i]  = point.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4678/MersenneTwister.java
Used ingredient: x[i] = new Complex(f.value(t));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4679/MersenneTwister.java
Used ingredient: q = (int) (prod % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4680/MersenneTwister.java
Used ingredient: init[i] = maxPoint[i] - 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4681/MersenneTwister.java
Used ingredient: init[i] = minPoint[i] - 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4682/MersenneTwister.java
Used ingredient: matrixT[i][idx - 1] = c.getReal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4683/MersenneTwister.java
Used ingredient: out[i] = getEntry(i, column);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4684/MersenneTwister.java
Used ingredient: mt[0]= (int) longMT;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4685/MersenneTwister.java
Used ingredient: int k = (int)(xa * 0.6366197723675814);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4686/MersenneTwister.java
Used ingredient: matrixT[i + 1][idx] = (-r - w * t) / x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4687/MersenneTwister.java
Used ingredient: return (int) ((1438542 ^ (bits >>> 32) ^ bits) & 0xffffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4688/MersenneTwister.java
Used ingredient: final int n = (int) FastMath.floor(a - 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4689/MersenneTwister.java
Used ingredient: exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4690/MersenneTwister.java
Used ingredient: f[i] = f[i].add(1.0 / (i * (i + 2)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4691/MersenneTwister.java
Used ingredient: result.sign = (byte) (sign * x.sign);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4692/MersenneTwister.java
Used ingredient: int k = ((int) (exponent >> 52)) - 1075;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4693/MersenneTwister.java
Used ingredient: final double fact2 = n / (n - 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4694/MersenneTwister.java
Used ingredient: final int iMed = (iMin + iMax) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4695/MersenneTwister.java
Used ingredient: double[] insigma = point(DIM, 0.1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4696/MersenneTwister.java
Used ingredient: root[i] = solve(subarray, initial);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4697/MersenneTwister.java
Used ingredient: double[] insigma = point(DIM, 0.3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4698/MersenneTwister.java
Used ingredient: final int sign = bits & 0x80000000;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4699/MersenneTwister.java
Used ingredient: int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4700/MersenneTwister.java
SuspiciousModificationPoint:             i++; j++;
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 181
Used ingredient: sig ++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4701/MersenneTwister.java
Used ingredient: intVal++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4702/MersenneTwister.java
Used ingredient: i += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4703/MersenneTwister.java
Used ingredient: int _j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4704/MersenneTwister.java
Used ingredient: index++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4705/MersenneTwister.java
Used ingredient: i, j);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4706/MersenneTwister.java
Used ingredient: its++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4707/MersenneTwister.java
Used ingredient: idx++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4708/MersenneTwister.java
Used ingredient: ih++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4709/MersenneTwister.java
Used ingredient: i++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4710/MersenneTwister.java
Used ingredient: ++j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4711/MersenneTwister.java
Used ingredient: j++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4712/MersenneTwister.java
Used ingredient: int j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4713/MersenneTwister.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4714/MersenneTwister.java
Used ingredient: mant[i]++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4715/MersenneTwister.java
Used ingredient: nSing = j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4716/MersenneTwister.java
Used ingredient: sign = +1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4717/MersenneTwister.java
Used ingredient: c.gridx++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4718/MersenneTwister.java
Used ingredient: c.gridy++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4719/MersenneTwister.java
Used ingredient: c[i+1] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4720/MersenneTwister.java
Used ingredient: binWidth++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4721/MersenneTwister.java
Used ingredient: mantissa++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4722/MersenneTwister.java
Used ingredient: int j = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4723/MersenneTwister.java
Used ingredient: int jpt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4724/MersenneTwister.java
Used ingredient: mti = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4725/MersenneTwister.java
Used ingredient: y[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4726/MersenneTwister.java
Used ingredient: p[i] = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4727/MersenneTwister.java
Used ingredient: pos = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4728/MersenneTwister.java
Used ingredient: a[i] = a[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4729/MersenneTwister.java
Used ingredient: b[i] = b[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4730/MersenneTwister.java
Used ingredient: int l=10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4731/MersenneTwister.java
Used ingredient: int i, j, k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4732/MersenneTwister.java
Used ingredient: min = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4733/MersenneTwister.java
Used ingredient: y[i] = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4734/MersenneTwister.java
Used ingredient: m += inc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4735/MersenneTwister.java
Used ingredient: mid = xB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4736/MersenneTwister.java
Used ingredient: n += jWidth;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4737/MersenneTwister.java
Used ingredient: min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4738/MersenneTwister.java
Used ingredient: min = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4739/MersenneTwister.java
Used ingredient: iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4740/MersenneTwister.java
Used ingredient: bits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4741/MersenneTwister.java
Used ingredient: k += jWidth;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4742/MersenneTwister.java
Used ingredient: min = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4743/MersenneTwister.java
Used ingredient: idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4744/MersenneTwister.java
Used ingredient: out += i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4745/MersenneTwister.java
Used ingredient: b += tol;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4746/MersenneTwister.java
Used ingredient: isbd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4747/MersenneTwister.java
Used ingredient: ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4748/MersenneTwister.java
Used ingredient: int next;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4749/MersenneTwister.java
Used ingredient: hi = tmp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4750/MersenneTwister.java
Used ingredient: int idx2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4751/MersenneTwister.java
Used ingredient: int idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4752/MersenneTwister.java
Used ingredient: iact = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4753/MersenneTwister.java
Used ingredient: isav = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4754/MersenneTwister.java
Used ingredient: int shf;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4755/MersenneTwister.java
Used ingredient: int val;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4756/MersenneTwister.java
Used ingredient: int lr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4757/MersenneTwister.java
Used ingredient: int l;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4758/MersenneTwister.java
Used ingredient: hi = xC;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4759/MersenneTwister.java
Used ingredient: fHi = fC;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4760/MersenneTwister.java
Used ingredient: int ix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4761/MersenneTwister.java
Used ingredient: inc = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4762/MersenneTwister.java
Used ingredient: x0 += dx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4763/MersenneTwister.java
Used ingredient: sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4764/MersenneTwister.java
Used ingredient: inc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4765/MersenneTwister.java
Used ingredient: ix >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4766/MersenneTwister.java
Used ingredient: y += 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4767/MersenneTwister.java
Used ingredient: dMin = d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4768/MersenneTwister.java
Used ingredient: dim - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4769/MersenneTwister.java
Used ingredient: i - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4770/MersenneTwister.java
Used ingredient: yMin = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4771/MersenneTwister.java
Used ingredient: vector[i]++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4772/MersenneTwister.java
Used ingredient: i = pos1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4773/MersenneTwister.java
Used ingredient: i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4774/MersenneTwister.java
Used ingredient: t1 += c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4775/MersenneTwister.java
Used ingredient: iu -= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4776/MersenneTwister.java
Used ingredient: int kase;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4777/MersenneTwister.java
Used ingredient: sum += d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4778/MersenneTwister.java
Used ingredient: sum += u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4779/MersenneTwister.java
Used ingredient: sum += v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4780/MersenneTwister.java
Used ingredient: int mp1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4781/MersenneTwister.java
Used ingredient: int m1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4782/MersenneTwister.java
Used ingredient: int bits;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4783/MersenneTwister.java
Used ingredient: int isav;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4784/MersenneTwister.java
Used ingredient: int inc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4785/MersenneTwister.java
Used ingredient: int m2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4786/MersenneTwister.java
Used ingredient: r += i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4787/MersenneTwister.java
Used ingredient: int pos1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4788/MersenneTwister.java
Used ingredient: int ae;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4789/MersenneTwister.java
Used ingredient: int ks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4790/MersenneTwister.java
Used ingredient: int pos2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4791/MersenneTwister.java
Used ingredient: int e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4792/MersenneTwister.java
Used ingredient: int pos;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4793/MersenneTwister.java
Used ingredient: int m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4794/MersenneTwister.java
Used ingredient: int ui;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4795/MersenneTwister.java
Used ingredient: int iu;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4796/MersenneTwister.java
Used ingredient: int i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4797/MersenneTwister.java
Used ingredient: int _i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4798/MersenneTwister.java
Used ingredient: int k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4799/MersenneTwister.java
Used ingredient: int b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4800/MersenneTwister.java
SuspiciousModificationPoint:             i++; j++;
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 181
Used ingredient: sig ++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4801/MersenneTwister.java
Used ingredient: intVal++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4802/MersenneTwister.java
Used ingredient: i += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4803/MersenneTwister.java
Used ingredient: int _j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4804/MersenneTwister.java
Used ingredient: index++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4805/MersenneTwister.java
Used ingredient: i, j);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4806/MersenneTwister.java
Used ingredient: its++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4807/MersenneTwister.java
Used ingredient: idx++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4808/MersenneTwister.java
Used ingredient: ih++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4809/MersenneTwister.java
Used ingredient: i++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4810/MersenneTwister.java
Used ingredient: ++j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4811/MersenneTwister.java
Used ingredient: j++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4812/MersenneTwister.java
Used ingredient: int j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4813/MersenneTwister.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4814/MersenneTwister.java
Used ingredient: mant[i]++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4815/MersenneTwister.java
Used ingredient: nSing = j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4816/MersenneTwister.java
Used ingredient: sign = +1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4817/MersenneTwister.java
Used ingredient: c.gridx++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4818/MersenneTwister.java
Used ingredient: c.gridy++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4819/MersenneTwister.java
Used ingredient: c[i+1] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4820/MersenneTwister.java
Used ingredient: binWidth++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4821/MersenneTwister.java
Used ingredient: mantissa++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4822/MersenneTwister.java
Used ingredient: int j = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4823/MersenneTwister.java
Used ingredient: int jpt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4824/MersenneTwister.java
Used ingredient: mti = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4825/MersenneTwister.java
Used ingredient: y[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4826/MersenneTwister.java
Used ingredient: p[i] = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4827/MersenneTwister.java
Used ingredient: pos = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4828/MersenneTwister.java
Used ingredient: a[i] = a[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4829/MersenneTwister.java
Used ingredient: b[i] = b[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4830/MersenneTwister.java
Used ingredient: int l=10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4831/MersenneTwister.java
Used ingredient: int i, j, k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4832/MersenneTwister.java
Used ingredient: min = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4833/MersenneTwister.java
Used ingredient: y[i] = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4834/MersenneTwister.java
Used ingredient: m += inc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4835/MersenneTwister.java
Used ingredient: mid = xB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4836/MersenneTwister.java
Used ingredient: n += jWidth;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4837/MersenneTwister.java
Used ingredient: min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4838/MersenneTwister.java
Used ingredient: min = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4839/MersenneTwister.java
Used ingredient: iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4840/MersenneTwister.java
Used ingredient: bits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4841/MersenneTwister.java
Used ingredient: k += jWidth;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4842/MersenneTwister.java
Used ingredient: min = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4843/MersenneTwister.java
Used ingredient: idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4844/MersenneTwister.java
Used ingredient: out += i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4845/MersenneTwister.java
Used ingredient: b += tol;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4846/MersenneTwister.java
Used ingredient: isbd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4847/MersenneTwister.java
Used ingredient: ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4848/MersenneTwister.java
Used ingredient: int next;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4849/MersenneTwister.java
Used ingredient: hi = tmp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4850/MersenneTwister.java
Used ingredient: int idx2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4851/MersenneTwister.java
Used ingredient: int idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4852/MersenneTwister.java
Used ingredient: iact = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4853/MersenneTwister.java
Used ingredient: isav = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4854/MersenneTwister.java
Used ingredient: int shf;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4855/MersenneTwister.java
Used ingredient: int val;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4856/MersenneTwister.java
Used ingredient: int lr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4857/MersenneTwister.java
Used ingredient: int l;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4858/MersenneTwister.java
Used ingredient: hi = xC;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4859/MersenneTwister.java
Used ingredient: fHi = fC;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4860/MersenneTwister.java
Used ingredient: int ix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4861/MersenneTwister.java
Used ingredient: inc = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4862/MersenneTwister.java
Used ingredient: x0 += dx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4863/MersenneTwister.java
Used ingredient: sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4864/MersenneTwister.java
Used ingredient: inc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4865/MersenneTwister.java
Used ingredient: ix >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4866/MersenneTwister.java
Used ingredient: y += 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4867/MersenneTwister.java
Used ingredient: dMin = d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4868/MersenneTwister.java
Used ingredient: dim - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4869/MersenneTwister.java
Used ingredient: i - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4870/MersenneTwister.java
Used ingredient: yMin = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4871/MersenneTwister.java
Used ingredient: vector[i]++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4872/MersenneTwister.java
Used ingredient: i = pos1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4873/MersenneTwister.java
Used ingredient: i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4874/MersenneTwister.java
Used ingredient: t1 += c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4875/MersenneTwister.java
Used ingredient: iu -= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4876/MersenneTwister.java
Used ingredient: int kase;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4877/MersenneTwister.java
Used ingredient: sum += d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4878/MersenneTwister.java
Used ingredient: sum += u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4879/MersenneTwister.java
Used ingredient: sum += v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4880/MersenneTwister.java
Used ingredient: int mp1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4881/MersenneTwister.java
Used ingredient: int m1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4882/MersenneTwister.java
Used ingredient: int bits;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4883/MersenneTwister.java
Used ingredient: int isav;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4884/MersenneTwister.java
Used ingredient: int inc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4885/MersenneTwister.java
Used ingredient: int m2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4886/MersenneTwister.java
Used ingredient: r += i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4887/MersenneTwister.java
Used ingredient: int pos1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4888/MersenneTwister.java
Used ingredient: int ae;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4889/MersenneTwister.java
Used ingredient: int ks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4890/MersenneTwister.java
Used ingredient: int pos2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4891/MersenneTwister.java
Used ingredient: int e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4892/MersenneTwister.java
Used ingredient: int pos;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4893/MersenneTwister.java
Used ingredient: int m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4894/MersenneTwister.java
Used ingredient: int ui;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4895/MersenneTwister.java
Used ingredient: int iu;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4896/MersenneTwister.java
Used ingredient: int i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4897/MersenneTwister.java
Used ingredient: int _i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4898/MersenneTwister.java
Used ingredient: int k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4899/MersenneTwister.java
Used ingredient: int b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4900/MersenneTwister.java
SuspiciousModificationPoint:             if (i >= N) {
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 182
Used ingredient: if (i > j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4901/MersenneTwister.java
Used ingredient: if (i == j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4902/MersenneTwister.java
Used ingredient: if (i != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4903/MersenneTwister.java
Used ingredient: if (i > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4904/MersenneTwister.java
Used ingredient: if (i > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4905/MersenneTwister.java
Used ingredient: if (i > 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4906/MersenneTwister.java
Used ingredient: if (i > 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4907/MersenneTwister.java
Used ingredient: if ( i > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4908/MersenneTwister.java
Used ingredient: if (i == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4909/MersenneTwister.java
Used ingredient: if (i != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4910/MersenneTwister.java
Used ingredient: if (m >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4911/MersenneTwister.java
Used ingredient: if (e >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4912/MersenneTwister.java
Used ingredient: if (d >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4913/MersenneTwister.java
Used ingredient: if (g >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4914/MersenneTwister.java
Used ingredient: if (p >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4915/MersenneTwister.java
Used ingredient: if (q >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4916/MersenneTwister.java
Used ingredient: if (i <= 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4917/MersenneTwister.java
Used ingredient: if (i != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4918/MersenneTwister.java
Used ingredient: if (a >= b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4919/MersenneTwister.java
Used ingredient: if (r >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4920/MersenneTwister.java
Used ingredient: if (i == k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4921/MersenneTwister.java
Used ingredient: if (i >= npt) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4922/MersenneTwister.java
Used ingredient: if (_i > _j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4923/MersenneTwister.java
Used ingredient: if (min > e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4924/MersenneTwister.java
Used ingredient: if (ipt > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4925/MersenneTwister.java
Used ingredient: if (f1 >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4926/MersenneTwister.java
Used ingredient: if (mu >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4927/MersenneTwister.java
Used ingredient: if (i == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4928/MersenneTwister.java
Used ingredient: if (pm >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4929/MersenneTwister.java
Used ingredient: if (j > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4930/MersenneTwister.java
Used ingredient: if (i < j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4931/MersenneTwister.java
Used ingredient: if (j == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4932/MersenneTwister.java
Used ingredient: if (j != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4933/MersenneTwister.java
Used ingredient: if (j == l) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4934/MersenneTwister.java
Used ingredient: if (m != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4935/MersenneTwister.java
Used ingredient: if (j != k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4936/MersenneTwister.java
Used ingredient: if (k != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4937/MersenneTwister.java
Used ingredient: if (t > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4938/MersenneTwister.java
Used ingredient: if (n > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4939/MersenneTwister.java
Used ingredient: if (i < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4940/MersenneTwister.java
Used ingredient: if (m > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4941/MersenneTwister.java
Used ingredient: if (g > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4942/MersenneTwister.java
Used ingredient: if (k > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4943/MersenneTwister.java
Used ingredient: if (x > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4944/MersenneTwister.java
Used ingredient: if (p > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4945/MersenneTwister.java
Used ingredient: if (u > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4946/MersenneTwister.java
Used ingredient: if (y > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4947/MersenneTwister.java
Used ingredient: if (v > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4948/MersenneTwister.java
Used ingredient: if (q > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4949/MersenneTwister.java
Used ingredient: if (n > 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4950/MersenneTwister.java
Used ingredient: if (n > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4951/MersenneTwister.java
Used ingredient: if (i < 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4952/MersenneTwister.java
Used ingredient: if (k > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4953/MersenneTwister.java
Used ingredient: if (i < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4954/MersenneTwister.java
Used ingredient: if (d > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4955/MersenneTwister.java
Used ingredient: if (k > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4956/MersenneTwister.java
Used ingredient: if (k > 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4957/MersenneTwister.java
Used ingredient: if (a > b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4958/MersenneTwister.java
Used ingredient: if (c > b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4959/MersenneTwister.java
Used ingredient: if (n > 20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4960/MersenneTwister.java
Used ingredient: if (n <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4961/MersenneTwister.java
Used ingredient: if (n == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4962/MersenneTwister.java
Used ingredient: if (n != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4963/MersenneTwister.java
Used ingredient: if (1 == n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4964/MersenneTwister.java
Used ingredient: if (d != n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4965/MersenneTwister.java
Used ingredient: if (k != i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4966/MersenneTwister.java
Used ingredient: if (y > 0)  {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4967/MersenneTwister.java
Used ingredient: if (mu > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4968/MersenneTwister.java
Used ingredient: if (x > 20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4969/MersenneTwister.java
Used ingredient: if (fp > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4970/MersenneTwister.java
Used ingredient: if (m != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4971/MersenneTwister.java
Used ingredient: if (e <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4972/MersenneTwister.java
Used ingredient: if (g <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4973/MersenneTwister.java
Used ingredient: if (k <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4974/MersenneTwister.java
Used ingredient: if (x <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4975/MersenneTwister.java
Used ingredient: if (p <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4976/MersenneTwister.java
Used ingredient: if (r <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4977/MersenneTwister.java
Used ingredient: if (v <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4978/MersenneTwister.java
Used ingredient: if (s != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4979/MersenneTwister.java
Used ingredient: if (d != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4980/MersenneTwister.java
Used ingredient: if (k == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4981/MersenneTwister.java
Used ingredient: if (e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4982/MersenneTwister.java
Used ingredient: if (s == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4983/MersenneTwister.java
Used ingredient: if (a == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4984/MersenneTwister.java
Used ingredient: if (p == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4985/MersenneTwister.java
Used ingredient: if (r == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4986/MersenneTwister.java
Used ingredient: if (h == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4987/MersenneTwister.java
Used ingredient: if (y == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4988/MersenneTwister.java
Used ingredient: if (x == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4989/MersenneTwister.java
Used ingredient: if (q == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4990/MersenneTwister.java
Used ingredient: if (p <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4991/MersenneTwister.java
Used ingredient: if (1 == y) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4992/MersenneTwister.java
Used ingredient: if (n == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4993/MersenneTwister.java
Used ingredient: if (k == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4994/MersenneTwister.java
Used ingredient: if (n != 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4995/MersenneTwister.java
Used ingredient: if (n == 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4996/MersenneTwister.java
Used ingredient: if (p == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4997/MersenneTwister.java
Used ingredient: if (0 == q) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4998/MersenneTwister.java
Used ingredient: if (v > hi) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/4999/MersenneTwister.java
Used ingredient: if (i < nh) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5000/MersenneTwister.java
SuspiciousModificationPoint:                 mt[0] = mt[N - 1];
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 183
Used ingredient: mant[i] = mant[i-1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5001/MersenneTwister.java
Used ingredient: mtNext = mt[k + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5002/MersenneTwister.java
Used ingredient: p[n] = -p[n - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5003/MersenneTwister.java
Used ingredient: sc[n] = sc[n - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5004/MersenneTwister.java
Used ingredient: mant[i] = mant[i+1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5005/MersenneTwister.java
Used ingredient: f[i] = f[i - 2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5006/MersenneTwister.java
Used ingredient: yDot[0] =  y[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5007/MersenneTwister.java
Used ingredient: dot[0] = -y[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5008/MersenneTwister.java
Used ingredient: tol[m] = tol[mp1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5009/MersenneTwister.java
Used ingredient: tmp[0] = data[off + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5010/MersenneTwister.java
Used ingredient: d[i] = x[i] - x1[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5011/MersenneTwister.java
Used ingredient: ort[m] = ort[m] - g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5012/MersenneTwister.java
Used ingredient: r[pos] = r[pos - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5013/MersenneTwister.java
Used ingredient: dFdP[0] = cy - y[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5014/MersenneTwister.java
Used ingredient: f[i] = i * sum - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5015/MersenneTwister.java
Used ingredient: z[i] = y[i] - x[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5016/MersenneTwister.java
Used ingredient: arr[1] += mem[j + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5017/MersenneTwister.java
Used ingredient: e[nrt] = A[nrt][p - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5018/MersenneTwister.java
Used ingredient: first = from - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5019/MersenneTwister.java
Used ingredient: t = t - 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5020/MersenneTwister.java
Used ingredient: mu[i] = h[i] / g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5021/MersenneTwister.java
Used ingredient: in[0] = in[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5022/MersenneTwister.java
Used ingredient: t = U[i][k + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5023/MersenneTwister.java
Used ingredient: t = V[i][k + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5024/MersenneTwister.java
Used ingredient: c[0] = 0 + 1e-5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5025/MersenneTwister.java
Used ingredient: c[0] = 2 + 1e-5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5026/MersenneTwister.java
Used ingredient: mt = new int[N];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5027/MersenneTwister.java
Used ingredient: c[1] = 1 - 1e-5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5028/MersenneTwister.java
Used ingredient: c[1] = 2 - 1e-5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5029/MersenneTwister.java
Used ingredient: y[0] = cosE - e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5030/MersenneTwister.java
Used ingredient: p[0] = p[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5031/MersenneTwister.java
Used ingredient: q[0] = q[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5032/MersenneTwister.java
Used ingredient: p[0] = -p[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5033/MersenneTwister.java
Used ingredient: next = length - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5034/MersenneTwister.java
Used ingredient: dy[2] = x * dy[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5035/MersenneTwister.java
Used ingredient: yDot[0] = y[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5036/MersenneTwister.java
Used ingredient: yDot[0] = y[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5037/MersenneTwister.java
Used ingredient: arr[0] += mem[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5038/MersenneTwister.java
Used ingredient: arr[0] += arr[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5039/MersenneTwister.java
Used ingredient: result[0] = ys[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5040/MersenneTwister.java
Used ingredient: result[0] = zs[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5041/MersenneTwister.java
Used ingredient: result[1] = ys[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5042/MersenneTwister.java
Used ingredient: result[1] = zs[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5043/MersenneTwister.java
Used ingredient: f[i] = mo2 * f[i - 2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5044/MersenneTwister.java
Used ingredient: data[i] = data[i] - d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5045/MersenneTwister.java
Used ingredient: v2[i] = yDot0 - v1[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5046/MersenneTwister.java
Used ingredient: p = matrixT[k][k - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5047/MersenneTwister.java
Used ingredient: a[0] = (c + z) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5048/MersenneTwister.java
Used ingredient: ta[i][i] = main[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5049/MersenneTwister.java
Used ingredient: f = -sn * e[j - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5050/MersenneTwister.java
Used ingredient: int mtNext = mt[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5051/MersenneTwister.java
Used ingredient: top[i] = bottom[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5052/MersenneTwister.java
Used ingredient: dFdY[1][0] = b - p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5053/MersenneTwister.java
Used ingredient: double[] m1 = m[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5054/MersenneTwister.java
Used ingredient: int n0 = lastN0 << 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5055/MersenneTwister.java
Used ingredient: arr[1] += rsl[j + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5056/MersenneTwister.java
Used ingredient: arr[2] += mem[j + 2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5057/MersenneTwister.java
Used ingredient: arr[5] += mem[j + 5];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5058/MersenneTwister.java
Used ingredient: arr[6] += mem[j + 6];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5059/MersenneTwister.java
Used ingredient: arr[3] += mem[j + 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5060/MersenneTwister.java
Used ingredient: arr[4] += mem[j + 4];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5061/MersenneTwister.java
Used ingredient: arr[7] += mem[j + 7];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5062/MersenneTwister.java
Used ingredient: ans[0] = a[0] + b[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5063/MersenneTwister.java
Used ingredient: t = -t / V[k + 1][k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5064/MersenneTwister.java
Used ingredient: ans[1] = a[1] + b[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5065/MersenneTwister.java
Used ingredient: ans[0] = a[0] * b[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5066/MersenneTwister.java
Used ingredient: facts[0] = -facts[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5067/MersenneTwister.java
Used ingredient: facts[1] = -facts[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5068/MersenneTwister.java
Used ingredient: termJ[0] += termK[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5069/MersenneTwister.java
Used ingredient: temps[0] = -temps[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5070/MersenneTwister.java
Used ingredient: temps[1] = -temps[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5071/MersenneTwister.java
Used ingredient: z = matrixT[iu - 1][j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5072/MersenneTwister.java
Used ingredient: z = matrixP[i][iu - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5073/MersenneTwister.java
Used ingredient: z = matrixT[i][iu - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5074/MersenneTwister.java
Used ingredient: tmp[2] = tmp[0] * tmp[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5075/MersenneTwister.java
Used ingredient: int i = j - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5076/MersenneTwister.java
Used ingredient: int iu = n - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5077/MersenneTwister.java
Used ingredient: int i = n - k + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5078/MersenneTwister.java
Used ingredient: x[i] = a - b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5079/MersenneTwister.java
Used ingredient: int j = end - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5080/MersenneTwister.java
Used ingredient: int l = idx - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5081/MersenneTwister.java
Used ingredient: y0[i] = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5082/MersenneTwister.java
Used ingredient: x[n - i] = a - b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5083/MersenneTwister.java
Used ingredient: int m = 2 * k - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5084/MersenneTwister.java
Used ingredient: // P0 = [ 1 1 ]
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5085/MersenneTwister.java
Used ingredient: iter = iter + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5086/MersenneTwister.java
Used ingredient: maxPoint[i] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5087/MersenneTwister.java
Used ingredient: minPoint[i] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5088/MersenneTwister.java
Used ingredient: function[0] = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5089/MersenneTwister.java
Used ingredient: dfwg += num - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5090/MersenneTwister.java
Used ingredient: t = t + 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5091/MersenneTwister.java
Used ingredient: mp1 = m + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5092/MersenneTwister.java
Used ingredient: m = m >> 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5093/MersenneTwister.java
Used ingredient: y[0] =  1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5094/MersenneTwister.java
Used ingredient: f[n - 1] = prod - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5095/MersenneTwister.java
Used ingredient: ipt = jpt + tmp1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5096/MersenneTwister.java
Used ingredient: y[i] = c * y0[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5097/MersenneTwister.java
Used ingredient: f[0] = inv * sin;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5098/MersenneTwister.java
Used ingredient: jpt = ipt - n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5099/MersenneTwister.java
Used ingredient: d[j] = td * w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5100/MersenneTwister.java
SuspiciousModificationPoint:                 i = 1;
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 184
Used ingredient: r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5101/MersenneTwister.java
Used ingredient: q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5102/MersenneTwister.java
Used ingredient: inc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5103/MersenneTwister.java
Used ingredient: i - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5104/MersenneTwister.java
Used ingredient: s = s1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5105/MersenneTwister.java
Used ingredient: dx = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5106/MersenneTwister.java
Used ingredient: i += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5107/MersenneTwister.java
Used ingredient: ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5108/MersenneTwister.java
Used ingredient: min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5109/MersenneTwister.java
Used ingredient: inc = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5110/MersenneTwister.java
Used ingredient: ix >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5111/MersenneTwister.java
Used ingredient: sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5112/MersenneTwister.java
Used ingredient: i = pos1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5113/MersenneTwister.java
Used ingredient: t = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5114/MersenneTwister.java
Used ingredient: t = 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5115/MersenneTwister.java
Used ingredient: t = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5116/MersenneTwister.java
Used ingredient: s = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5117/MersenneTwister.java
Used ingredient: v = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5118/MersenneTwister.java
Used ingredient: d = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5119/MersenneTwister.java
Used ingredient: x = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5120/MersenneTwister.java
Used ingredient: k = j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5121/MersenneTwister.java
Used ingredient: n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5122/MersenneTwister.java
Used ingredient: l = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5123/MersenneTwister.java
Used ingredient: a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5124/MersenneTwister.java
Used ingredient: x = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5125/MersenneTwister.java
Used ingredient: j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5126/MersenneTwister.java
Used ingredient: p = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5127/MersenneTwister.java
Used ingredient: z = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5128/MersenneTwister.java
Used ingredient: q = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5129/MersenneTwister.java
Used ingredient: w = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5130/MersenneTwister.java
Used ingredient: a = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5131/MersenneTwister.java
Used ingredient: b = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5132/MersenneTwister.java
Used ingredient: r = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5133/MersenneTwister.java
Used ingredient: e = d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5134/MersenneTwister.java
Used ingredient: s = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5135/MersenneTwister.java
Used ingredient: x = 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5136/MersenneTwister.java
Used ingredient: x = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5137/MersenneTwister.java
Used ingredient: s = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5138/MersenneTwister.java
Used ingredient: a = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5139/MersenneTwister.java
Used ingredient: x = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5140/MersenneTwister.java
Used ingredient: a = b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5141/MersenneTwister.java
Used ingredient: a = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5142/MersenneTwister.java
Used ingredient: c = a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5143/MersenneTwister.java
Used ingredient: w = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5144/MersenneTwister.java
Used ingredient: b = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5145/MersenneTwister.java
Used ingredient: v = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5146/MersenneTwister.java
Used ingredient: u = v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5147/MersenneTwister.java
Used ingredient: z = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5148/MersenneTwister.java
Used ingredient: v = w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5149/MersenneTwister.java
Used ingredient: z = w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5150/MersenneTwister.java
Used ingredient: b = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5151/MersenneTwister.java
Used ingredient: mti = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5152/MersenneTwister.java
Used ingredient: min = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5153/MersenneTwister.java
Used ingredient: f0 = f1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5154/MersenneTwister.java
Used ingredient: z = -10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5155/MersenneTwister.java
Used ingredient: x0 = x1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5156/MersenneTwister.java
Used ingredient: pmc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5157/MersenneTwister.java
Used ingredient: a0 = a1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5158/MersenneTwister.java
Used ingredient: r0 = r1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5159/MersenneTwister.java
Used ingredient: p0 = p1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5160/MersenneTwister.java
Used ingredient: y0 = y1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5161/MersenneTwister.java
Used ingredient: q0 = q1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5162/MersenneTwister.java
Used ingredient: min = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5163/MersenneTwister.java
Used ingredient: min = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5164/MersenneTwister.java
Used ingredient: k >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5165/MersenneTwister.java
Used ingredient: p >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5166/MersenneTwister.java
Used ingredient: s = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5167/MersenneTwister.java
Used ingredient: a = 1.2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5168/MersenneTwister.java
Used ingredient: p2 = p1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5169/MersenneTwister.java
Used ingredient: idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5170/MersenneTwister.java
Used ingredient: hi = xC;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5171/MersenneTwister.java
Used ingredient: iu -= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5172/MersenneTwister.java
Used ingredient: int t = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5173/MersenneTwister.java
Used ingredient: iact = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5174/MersenneTwister.java
Used ingredient: int i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5175/MersenneTwister.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5176/MersenneTwister.java
Used ingredient: int n = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5177/MersenneTwister.java
Used ingredient: int p = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5178/MersenneTwister.java
Used ingredient: int r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5179/MersenneTwister.java
Used ingredient: int c = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5180/MersenneTwister.java
Used ingredient: int q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5181/MersenneTwister.java
Used ingredient: sign = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5182/MersenneTwister.java
Used ingredient: isav = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5183/MersenneTwister.java
Used ingredient: iflag = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5184/MersenneTwister.java
Used ingredient: sign = +1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5185/MersenneTwister.java
Used ingredient: t0 = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5186/MersenneTwister.java
Used ingredient: m = -m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5187/MersenneTwister.java
Used ingredient: f = -f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5188/MersenneTwister.java
Used ingredient: md = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5189/MersenneTwister.java
Used ingredient: u = -t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5190/MersenneTwister.java
Used ingredient: x = -x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5191/MersenneTwister.java
Used ingredient: v *= t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5192/MersenneTwister.java
Used ingredient: e = -e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5193/MersenneTwister.java
Used ingredient: s = -s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5194/MersenneTwister.java
Used ingredient: y = -3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5195/MersenneTwister.java
Used ingredient: k = -m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5196/MersenneTwister.java
Used ingredient: a = -a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5197/MersenneTwister.java
Used ingredient: h = -h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5198/MersenneTwister.java
Used ingredient: u = -u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5199/MersenneTwister.java
Used ingredient: b = -b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5200/MersenneTwister.java
SuspiciousModificationPoint:             if (j >= seed.length) {
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 186
Used ingredient: if (q < striped.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5201/MersenneTwister.java
Used ingredient: if (idx >= length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5202/MersenneTwister.java
Used ingredient: if (len != b.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5203/MersenneTwister.java
Used ingredient: if (xLen != f.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5204/MersenneTwister.java
Used ingredient: if (n != sample2.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5205/MersenneTwister.java
Used ingredient: if (exp >= mant.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5206/MersenneTwister.java
Used ingredient: if (len > nameLength) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5207/MersenneTwister.java
Used ingredient: if (xLen != dFdX.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5208/MersenneTwister.java
Used ingredient: if (xLen != dFdY.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5209/MersenneTwister.java
Used ingredient: if (xLen != dFdZ.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5210/MersenneTwister.java
Used ingredient: if (nsqd > mant.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5211/MersenneTwister.java
Used ingredient: if (steps.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5212/MersenneTwister.java
Used ingredient: if (observed1.length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5213/MersenneTwister.java
Used ingredient: index >= simplex.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5214/MersenneTwister.java
Used ingredient: if (expected.length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5215/MersenneTwister.java
Used ingredient: if (d.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5216/MersenneTwister.java
Used ingredient: if (data.length < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5217/MersenneTwister.java
Used ingredient: if (d[0].length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5218/MersenneTwister.java
Used ingredient: if (data.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5219/MersenneTwister.java
Used ingredient: if (args.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5220/MersenneTwister.java
Used ingredient: if (data.length != n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5221/MersenneTwister.java
Used ingredient: if (s.length() > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5222/MersenneTwister.java
Used ingredient: if (data.length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5223/MersenneTwister.java
Used ingredient: if (knots.length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5224/MersenneTwister.java
Used ingredient: if (p != rawdigits.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5225/MersenneTwister.java
Used ingredient: if (md > (mant.length-1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5226/MersenneTwister.java
Used ingredient: if (m.length != n.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5227/MersenneTwister.java
Used ingredient: if (y.length != x.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5228/MersenneTwister.java
Used ingredient: if (t.length != w.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5229/MersenneTwister.java
Used ingredient: if (a.length != b.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5230/MersenneTwister.java
Used ingredient: if (x.length != y.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5231/MersenneTwister.java
Used ingredient: if (hex.length() == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5232/MersenneTwister.java
Used ingredient: if (rule.length() > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5233/MersenneTwister.java
Used ingredient: if (xLen != d2FdXdY.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5234/MersenneTwister.java
Used ingredient: if (xLen != d2FdXdZ.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5235/MersenneTwister.java
Used ingredient: if (xLen != d2FdYdZ.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5236/MersenneTwister.java
Used ingredient: if (seed.length < v.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5237/MersenneTwister.java
Used ingredient: if (i < main.length - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5238/MersenneTwister.java
Used ingredient: while (i < bytes.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5239/MersenneTwister.java
Used ingredient: int n = sample1.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5240/MersenneTwister.java
Used ingredient: if (f.length > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5241/MersenneTwister.java
Used ingredient: if (x.length < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5242/MersenneTwister.java
Used ingredient: if (x.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5243/MersenneTwister.java
Used ingredient: if (v.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5244/MersenneTwister.java
Used ingredient: if (y.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5245/MersenneTwister.java
Used ingredient: if (z.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5246/MersenneTwister.java
Used ingredient: if (x.length != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5247/MersenneTwister.java
Used ingredient: if (v.length != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5248/MersenneTwister.java
Used ingredient: if (v.length != 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5249/MersenneTwister.java
Used ingredient: if (i >= this.nvars) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5250/MersenneTwister.java
Used ingredient: if (y.length != len) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5251/MersenneTwister.java
Used ingredient: if (params.length > 1){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5252/MersenneTwister.java
Used ingredient: if (edge != inserted) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5253/MersenneTwister.java
Used ingredient: if (xval.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5254/MersenneTwister.java
Used ingredient: if (v.length != rows) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5255/MersenneTwister.java
Used ingredient: if (x.length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5256/MersenneTwister.java
Used ingredient: if (x.length < 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5257/MersenneTwister.java
Used ingredient: if (in.length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5258/MersenneTwister.java
Used ingredient: if (i > numElements) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5259/MersenneTwister.java
Used ingredient: if (in[0].length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5260/MersenneTwister.java
Used ingredient: if (seedLen < rslLen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5261/MersenneTwister.java
Used ingredient: if (count == t.length - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5262/MersenneTwister.java
Used ingredient: if (end != rawLoop.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5263/MersenneTwister.java
Used ingredient: if (n < stirlingS2.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5264/MersenneTwister.java
Used ingredient: if (values.length == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5265/MersenneTwister.java
Used ingredient: if (j == (array.length - 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5266/MersenneTwister.java
Used ingredient: if (vals.length != dim) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5267/MersenneTwister.java
Used ingredient: if (values.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5268/MersenneTwister.java
Used ingredient: if (dataRI.length != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5269/MersenneTwister.java
Used ingredient: if (mIndex >= mBlock.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5270/MersenneTwister.java
Used ingredient: if (v.length != sums.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5271/MersenneTwister.java
Used ingredient: if (p == fpdecimal.length()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5272/MersenneTwister.java
Used ingredient: if (data[i].length < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5273/MersenneTwister.java
Used ingredient: if ( i >= polynomials.length ) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5274/MersenneTwister.java
Used ingredient: if (dsValue.length != nR) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5275/MersenneTwister.java
Used ingredient: if (j < (array.length - 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5276/MersenneTwister.java
Used ingredient: if (param.length != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5277/MersenneTwister.java
Used ingredient: if (param.length != 6) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5278/MersenneTwister.java
Used ingredient: if (param.length != 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5279/MersenneTwister.java
Used ingredient: if (v.length != nCols) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5280/MersenneTwister.java
Used ingredient: if (v.length != nRows) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5281/MersenneTwister.java
Used ingredient: if (v.length != means.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5282/MersenneTwister.java
Used ingredient: if (bytesOut == bytes.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5283/MersenneTwister.java
Used ingredient: if (selectedRows.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5284/MersenneTwister.java
Used ingredient: if (xLen != d3FdXdYdZ.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5285/MersenneTwister.java
Used ingredient: if (node < pivotsHeap.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5286/MersenneTwister.java
Used ingredient: if (doubles.length >= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5287/MersenneTwister.java
Used ingredient: if (next >= list.length + pos1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5288/MersenneTwister.java
Used ingredient: if (subVector.length == d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5289/MersenneTwister.java
Used ingredient: if (length != yArray.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5290/MersenneTwister.java
Used ingredient: int n = x.length - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5291/MersenneTwister.java
Used ingredient: if (length == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5292/MersenneTwister.java
Used ingredient: if (i >= npt) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5293/MersenneTwister.java
Used ingredient: int end = x.length - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5294/MersenneTwister.java
Used ingredient: if (x <= scale) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5295/MersenneTwister.java
Used ingredient: if (ratio >= 1.0e-4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5296/MersenneTwister.java
Used ingredient: if (ruleLength == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5297/MersenneTwister.java
Used ingredient: if (length != m) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5298/MersenneTwister.java
Used ingredient: if (length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5299/MersenneTwister.java
Used ingredient: if (q == offset) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5300/MersenneTwister.java
SuspiciousModificationPoint:                 j = 0;
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 187
Used ingredient: n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5301/MersenneTwister.java
Used ingredient: a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5302/MersenneTwister.java
Used ingredient: x = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5303/MersenneTwister.java
Used ingredient: p = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5304/MersenneTwister.java
Used ingredient: z = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5305/MersenneTwister.java
Used ingredient: q = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5306/MersenneTwister.java
Used ingredient: ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5307/MersenneTwister.java
Used ingredient: j += k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5308/MersenneTwister.java
Used ingredient: j -= k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5309/MersenneTwister.java
Used ingredient: y = x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5310/MersenneTwister.java
Used ingredient: s = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5311/MersenneTwister.java
Used ingredient: v = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5312/MersenneTwister.java
Used ingredient: r = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5313/MersenneTwister.java
Used ingredient: e = d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5314/MersenneTwister.java
Used ingredient: s = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5315/MersenneTwister.java
Used ingredient: i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5316/MersenneTwister.java
Used ingredient: r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5317/MersenneTwister.java
Used ingredient: q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5318/MersenneTwister.java
Used ingredient: t = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5319/MersenneTwister.java
Used ingredient: t = 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5320/MersenneTwister.java
Used ingredient: t = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5321/MersenneTwister.java
Used ingredient: d = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5322/MersenneTwister.java
Used ingredient: x = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5323/MersenneTwister.java
Used ingredient: k = j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5324/MersenneTwister.java
Used ingredient: l = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5325/MersenneTwister.java
Used ingredient: w = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5326/MersenneTwister.java
Used ingredient: a = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5327/MersenneTwister.java
Used ingredient: b = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5328/MersenneTwister.java
Used ingredient: x = 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5329/MersenneTwister.java
Used ingredient: x = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5330/MersenneTwister.java
Used ingredient: s = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5331/MersenneTwister.java
Used ingredient: a = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5332/MersenneTwister.java
Used ingredient: x = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5333/MersenneTwister.java
Used ingredient: a = b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5334/MersenneTwister.java
Used ingredient: a = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5335/MersenneTwister.java
Used ingredient: c = a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5336/MersenneTwister.java
Used ingredient: w = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5337/MersenneTwister.java
Used ingredient: b = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5338/MersenneTwister.java
Used ingredient: v = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5339/MersenneTwister.java
Used ingredient: u = v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5340/MersenneTwister.java
Used ingredient: z = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5341/MersenneTwister.java
Used ingredient: v = w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5342/MersenneTwister.java
Used ingredient: z = w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5343/MersenneTwister.java
Used ingredient: b = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5344/MersenneTwister.java
Used ingredient: mti = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5345/MersenneTwister.java
Used ingredient: min = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5346/MersenneTwister.java
Used ingredient: s = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5347/MersenneTwister.java
Used ingredient: idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5348/MersenneTwister.java
Used ingredient: off = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5349/MersenneTwister.java
Used ingredient: r = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5350/MersenneTwister.java
Used ingredient: w = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5351/MersenneTwister.java
Used ingredient: z = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5352/MersenneTwister.java
Used ingredient: X = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5353/MersenneTwister.java
Used ingredient: y = 0.5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5354/MersenneTwister.java
Used ingredient: ej *= v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5355/MersenneTwister.java
Used ingredient: z = -10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5356/MersenneTwister.java
Used ingredient: max = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5357/MersenneTwister.java
Used ingredient: ret = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5358/MersenneTwister.java
Used ingredient: sum = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5359/MersenneTwister.java
Used ingredient: pos = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5360/MersenneTwister.java
Used ingredient: val = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5361/MersenneTwister.java
Used ingredient: exp = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5362/MersenneTwister.java
Used ingredient: int j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5363/MersenneTwister.java
Used ingredient: s = s1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5364/MersenneTwister.java
Used ingredient: i += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5365/MersenneTwister.java
Used ingredient: t0 = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5366/MersenneTwister.java
Used ingredient: f = -f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5367/MersenneTwister.java
Used ingredient: u = -t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5368/MersenneTwister.java
Used ingredient: v *= t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5369/MersenneTwister.java
Used ingredient: e = -e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5370/MersenneTwister.java
Used ingredient: s = -s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5371/MersenneTwister.java
Used ingredient: h = -h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5372/MersenneTwister.java
Used ingredient: f += 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5373/MersenneTwister.java
Used ingredient: f += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5374/MersenneTwister.java
Used ingredient: b += d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5375/MersenneTwister.java
Used ingredient: a = lo;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5376/MersenneTwister.java
Used ingredient: b = lo;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5377/MersenneTwister.java
Used ingredient: a = hi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5378/MersenneTwister.java
Used ingredient: b = hi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5379/MersenneTwister.java
Used ingredient: ae = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5380/MersenneTwister.java
Used ingredient: s = sa;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5381/MersenneTwister.java
Used ingredient: k = ks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5382/MersenneTwister.java
Used ingredient: dx = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5383/MersenneTwister.java
Used ingredient: m = -m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5384/MersenneTwister.java
Used ingredient: md = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5385/MersenneTwister.java
Used ingredient: x = -x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5386/MersenneTwister.java
Used ingredient: y = -3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5387/MersenneTwister.java
Used ingredient: k = -m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5388/MersenneTwister.java
Used ingredient: a = -a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5389/MersenneTwister.java
Used ingredient: u = -u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5390/MersenneTwister.java
Used ingredient: b = -b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5391/MersenneTwister.java
Used ingredient: p = -p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5392/MersenneTwister.java
Used ingredient: v = -v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5393/MersenneTwister.java
Used ingredient: q = -q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5394/MersenneTwister.java
Used ingredient: r += i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5395/MersenneTwister.java
Used ingredient: l += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5396/MersenneTwister.java
Used ingredient: k += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5397/MersenneTwister.java
Used ingredient: p += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5398/MersenneTwister.java
Used ingredient: q += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5399/MersenneTwister.java
Used ingredient: x1 = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5400/MersenneTwister.java
SuspiciousModificationPoint:         for (int k = N - 1; k != 0; k--) {
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 191
Used ingredient: for (int k = n - 1; k >= 0; k--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5401/MersenneTwister.java
Used ingredient: for (int k = nct - 1; k >= 0; k--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5402/MersenneTwister.java
Used ingredient: for (int k = m - 1; k >= 1; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5403/MersenneTwister.java
Used ingredient: for (int k = m - 1; k >= p; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5404/MersenneTwister.java
Used ingredient: for (int k = n - 1; k >= p; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5405/MersenneTwister.java
Used ingredient: for (int j = m - 1; j >= 0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5406/MersenneTwister.java
Used ingredient: for (int j = n - 1; j >= 0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5407/MersenneTwister.java
Used ingredient: for (int i = n - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5408/MersenneTwister.java
Used ingredient: for (int k = n - 1; k >= 0; k -= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5409/MersenneTwister.java
Used ingredient: for (int k = rank - 1; k >= 0; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5410/MersenneTwister.java
Used ingredient: for (int j = n - 2; j >= 0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5411/MersenneTwister.java
Used ingredient: for (int i = n - 1; i > 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5412/MersenneTwister.java
Used ingredient: for (int k = n + 1; k >= 0; k -= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5413/MersenneTwister.java
Used ingredient: for (int i = idx - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5414/MersenneTwister.java
Used ingredient: for (int j = n -1; j >=0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5415/MersenneTwister.java
Used ingredient: for (int j = n-1; j >= 0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5416/MersenneTwister.java
Used ingredient: for (int k = n; k >= 0; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5417/MersenneTwister.java
Used ingredient: for (k = p - 2; k >= 0; k--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5418/MersenneTwister.java
Used ingredient: for (int i = n-1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5419/MersenneTwister.java
Used ingredient: for (int k = n; k >= 0; k -= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5420/MersenneTwister.java
Used ingredient: for (int j = p - 2; j >= k; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5421/MersenneTwister.java
Used ingredient: for (ks = p - 1; ks >= k; ks--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5422/MersenneTwister.java
Used ingredient: for (int i = idx - 2; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5423/MersenneTwister.java
Used ingredient: for (int j = end - 1; j > i; --j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5424/MersenneTwister.java
Used ingredient: for (int j = n-2; j >= 0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5425/MersenneTwister.java
Used ingredient: for (int k = n; k > 0; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5426/MersenneTwister.java
Used ingredient: for (int k = 0; k <= 20; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5427/MersenneTwister.java
Used ingredient: for (int k = 1; k <= BITS; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5428/MersenneTwister.java
Used ingredient: for (int k = 1; k <= s - 1; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5429/MersenneTwister.java
Used ingredient: for (int j = nSing - 1; j >= 0; --j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5430/MersenneTwister.java
Used ingredient: for (int j = n - i - 1; j >= 0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5431/MersenneTwister.java
Used ingredient: for (int i = nvars - 1; i > 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5432/MersenneTwister.java
Used ingredient: for (int m = high - 1; m >= 1; m--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5433/MersenneTwister.java
Used ingredient: for (int k = N - M; k < N - 1; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5434/MersenneTwister.java
Used ingredient: for (j = i - 1; j >= 0; --j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5435/MersenneTwister.java
Used ingredient: for (int j = n-i; j > 0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5436/MersenneTwister.java
Used ingredient: for (int j = order; j >= 0; --j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5437/MersenneTwister.java
Used ingredient: for (int k = 0; k <= n; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5438/MersenneTwister.java
Used ingredient: for (int i = 100; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5439/MersenneTwister.java
Used ingredient: for (int i = last; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5440/MersenneTwister.java
Used ingredient: for (int i = -100; i <= 0; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5441/MersenneTwister.java
Used ingredient: for (int j = iu - 1; j < n; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5442/MersenneTwister.java
Used ingredient: for (i = m - 1; i >= j; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5443/MersenneTwister.java
Used ingredient: for (int k = 1; k < size; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5444/MersenneTwister.java
Used ingredient: for (int k = 1; k < stages; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5445/MersenneTwister.java
Used ingredient: for (int dk = nC - 1 - k; dk > 0; --dk) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5446/MersenneTwister.java
Used ingredient: for (int q = order - 1; q > i; --q) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5447/MersenneTwister.java
Used ingredient: for (int i = nreq - 1; i > -1; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5448/MersenneTwister.java
Used ingredient: for (int k = i + 1; k < nvars; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5449/MersenneTwister.java
Used ingredient: for (int col = m - 1; col >= 0; col--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5450/MersenneTwister.java
Used ingredient: for (int idx = n - 1; idx >= 0; idx--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5451/MersenneTwister.java
Used ingredient: for (int k = col + 1; k < nreq; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5452/MersenneTwister.java
Used ingredient: for (int i = f.length - 1; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5453/MersenneTwister.java
Used ingredient: for (int j = i; j > 0; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5454/MersenneTwister.java
Used ingredient: for (int k = 0; k < n; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5455/MersenneTwister.java
Used ingredient: for (int k = 0; k < n; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5456/MersenneTwister.java
Used ingredient: for (int k = 0; k < N; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5457/MersenneTwister.java
Used ingredient: for (int k = 0; k < N; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5458/MersenneTwister.java
Used ingredient: for (int k = 0; k < i; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5459/MersenneTwister.java
Used ingredient: for (int k = 0; k < m; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5460/MersenneTwister.java
Used ingredient: for (int k = 0; k < m; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5461/MersenneTwister.java
Used ingredient: for (int k = 0; k < 9; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5462/MersenneTwister.java
Used ingredient: for (int k = 0; k < 7; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5463/MersenneTwister.java
Used ingredient: for (int k = 0; k < n ; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5464/MersenneTwister.java
Used ingredient: for (int k = 0; k < nC; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5465/MersenneTwister.java
Used ingredient: for (int k = 0; k < 12; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5466/MersenneTwister.java
Used ingredient: for (int k = 0; k < npt; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5467/MersenneTwister.java
Used ingredient: for (int j = -1; j <= 1; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5468/MersenneTwister.java
Used ingredient: for (int i = 1; i <= 10; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5469/MersenneTwister.java
Used ingredient: for (int i = last; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5470/MersenneTwister.java
Used ingredient: for (int k = 0; k < size; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5471/MersenneTwister.java
Used ingredient: for (int k = 0; k < zLen; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5472/MersenneTwister.java
Used ingredient: for (int x = -10; x < 10; x++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5473/MersenneTwister.java
Used ingredient: for (int k = 0; k < kMax; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5474/MersenneTwister.java
Used ingredient: for (int j = high; j >= m; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5475/MersenneTwister.java
Used ingredient: for (int j = i + 1; j < n; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5476/MersenneTwister.java
Used ingredient: for (int j = k + 1; j < n; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5477/MersenneTwister.java
Used ingredient: for (int j = k + 1; j < n; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5478/MersenneTwister.java
Used ingredient: for (int k = 0; k < lastK; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5479/MersenneTwister.java
Used ingredient: for (int i = order; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5480/MersenneTwister.java
Used ingredient: for (int j = i + 1; j < m; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5481/MersenneTwister.java
Used ingredient: for (int j = r + 1; j < i; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5482/MersenneTwister.java
Used ingredient: for (int j = k + 1; j < m; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5483/MersenneTwister.java
Used ingredient: for (int k = 0; k < nColB; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5484/MersenneTwister.java
Used ingredient: for (int k = 0; k < bSize; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5485/MersenneTwister.java
Used ingredient: for (int k = 0; k < m - 1; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5486/MersenneTwister.java
Used ingredient: for (int k = 0; k < N - M; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5487/MersenneTwister.java
Used ingredient: for (int k = 0; k < kWidth; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5488/MersenneTwister.java
Used ingredient: for (int n = -100; n < 100; ++n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5489/MersenneTwister.java
Used ingredient: for (int k = 0; k < lambda; k++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5490/MersenneTwister.java
Used ingredient: for (int i = -1; i <= 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5491/MersenneTwister.java
Used ingredient: for (int i = high; i >= m; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5492/MersenneTwister.java
Used ingredient: for (int i = k + 1; i < n; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5493/MersenneTwister.java
Used ingredient: for (int i = k + 1; i < m; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5494/MersenneTwister.java
Used ingredient: for (int i = k + 1; i < m; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5495/MersenneTwister.java
Used ingredient: for (int i = j + 1; i < m; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5496/MersenneTwister.java
Used ingredient: for (int k = 1; k <= maxOrder; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5497/MersenneTwister.java
Used ingredient: for (int j = end - 1; j >= start; --j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5498/MersenneTwister.java
Used ingredient: for (int k = p - 1; k >= diagOffset; --k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5499/MersenneTwister.java
Used ingredient: for (int j = -10; j <= 10; j += 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5500/MersenneTwister.java
SuspiciousModificationPoint:             long l0 = (mt[i] & 0x7fffffffl)   | ((mt[i]   < 0) ? 0x80000000l : 0x0l);
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 192
Used ingredient: long l1 = (mt[i-1] & 0x7fffffffl) | ((mt[i-1] < 0) ? 0x80000000l : 0x0l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5501/MersenneTwister.java
Used ingredient: ((r & 0x7fffffffl) | ((r < 0) ? 0x80000000l : 0x0l)) / 4294967296.0,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5502/MersenneTwister.java
Used ingredient: Assert.assertEquals(refInt[i], (r & 0x7fffffffl) | ((r < 0) ? 0x80000000l : 0x0l));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5503/MersenneTwister.java
Used ingredient: final double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5504/MersenneTwister.java
Used ingredient: while (((m & 0x001ffffffffffffeL) != 0) && ((m & 0x1) == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5505/MersenneTwister.java
Used ingredient: return (xOptimum < xMin) ? xMin : ((xOptimum > xMax) ? xMax : xOptimum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5506/MersenneTwister.java
Used ingredient: double epsilon = x / Double.longBitsToDouble(bits & 0xfffffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5507/MersenneTwister.java
Used ingredient: final long exponent = bits & 0x7ff0000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5508/MersenneTwister.java
Used ingredient: o0[0] = x00 - 0.5 * (x00 * mx00 + x01 * mx10 + x02 * mx20 - m0[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5509/MersenneTwister.java
Used ingredient: int[] testValues = new int[] {4, 10, 12, 32, 100, 10000, 0, 0, 0, 0};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5510/MersenneTwister.java
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941l)) - i; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5511/MersenneTwister.java
Used ingredient: int exponent = (int) ((bits & 0x7ff0000000000000L) >> 52) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5512/MersenneTwister.java
Used ingredient: f[i] = y[i] - x1 * (v[i] * (v[i] + x2)) / (v[i] * (v[i] + x3) + x4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5513/MersenneTwister.java
Used ingredient: //double y = Double.longBitsToDouble(bits & 0xfffffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5514/MersenneTwister.java
Used ingredient: final int z0       = (0xFFFF8000 & v[indexRm1]) ^ (0x00007FFF & v[indexRm2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5515/MersenneTwister.java
Used ingredient: final long sign     = bits & 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5516/MersenneTwister.java
Used ingredient: double mx00 = m0[0] * x00 + m1[0] * x10 + m2[0] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5517/MersenneTwister.java
Used ingredient: return ((data == null) || (data[0] == null)) ? 0 : data[0].length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5518/MersenneTwister.java
Used ingredient: return (yOptimum < yMin) ? yMin : ((yOptimum > yMax) ? yMax : yOptimum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5519/MersenneTwister.java
Used ingredient: -1718875.0 / 39484.0,                      58000000.0 / 602131.0,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5520/MersenneTwister.java
Used ingredient: final double[] lnm = lnMant.LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5521/MersenneTwister.java
Used ingredient: x += Math.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5522/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5523/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5524/MersenneTwister.java
Used ingredient: final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5525/MersenneTwister.java
Used ingredient: final double ph0 = 0.5 * (currentState[i] + y1[i]) + 0.125 * (aspl + bspl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5526/MersenneTwister.java
Used ingredient: for (int trials = 500000; trials < 20000000; trials += 100000) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5527/MersenneTwister.java
Used ingredient: rsl[j] = (int) (0x6c078965L * (k ^ k >> 30) + j & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5528/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) (((mant[i] / 10) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5529/MersenneTwister.java
Used ingredient: final double p = a[0] + x * (a[1] + x * (a[2] + x * a[3]));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5530/MersenneTwister.java
Used ingredient: return 2 * x[0] * x[0] - 3 * x[1] * x[1] + 4 * x[0] * x[1] - 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5531/MersenneTwister.java
Used ingredient: final int z4 = (z0 ^ (z0 << 11)) ^ (z1 ^ (z1 << 7)) ^ (z2 ^ (z2 << 13));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5532/MersenneTwister.java
Used ingredient: private static final long SIGN_MASK     = 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5533/MersenneTwister.java
Used ingredient: double mx10 = m0[1] * x00 + m1[1] * x10 + m2[1] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5534/MersenneTwister.java
Used ingredient: double mx20 = m0[2] * x00 + m1[2] * x10 + m2[2] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5535/MersenneTwister.java
Used ingredient: o1[0] = x10 - 0.5 * (x10 * mx00 + x11 * mx10 + x12 * mx20 - m1[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5536/MersenneTwister.java
Used ingredient: o2[0] = x20 - 0.5 * (x20 * mx00 + x21 * mx10 + x22 * mx20 - m2[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5537/MersenneTwister.java
Used ingredient: * {@code gamma(x) = sqrt(2 * pi) / x * (x + g + 0.5) ^ (x + 0.5)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5538/MersenneTwister.java
Used ingredient: bottom[i - j] = (bottom[i - j + 1] - bottom[i - j]) / (j * stepSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5539/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 0);  // round half-odd
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5540/MersenneTwister.java
Used ingredient: o0[1] = x01 - 0.5 * (x00 * mx01 + x01 * mx11 + x02 * mx21 - m0[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5541/MersenneTwister.java
Used ingredient: o0[2] = x02 - 0.5 * (x00 * mx02 + x01 * mx12 + x02 * mx22 - m0[2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5542/MersenneTwister.java
Used ingredient: double ref = (x + dx) * (y + dy) * ((x + dx) * (y + dy) + (z + dz));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5543/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5544/MersenneTwister.java
Used ingredient: double[] expected = { 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5545/MersenneTwister.java
Used ingredient: final double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5546/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5547/MersenneTwister.java
Used ingredient: final double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5548/MersenneTwister.java
Used ingredient: x += FastMath.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5549/MersenneTwister.java
Used ingredient: checkCopy(m, subRows02Cols13,  new int[] { 0, 2 }, new int[] { 1, 3 },    false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5550/MersenneTwister.java
Used ingredient: checkCopy(m, subRows03Cols12,  new int[] { 0, 3 }, new int[] { 1, 2 },    false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5551/MersenneTwister.java
Used ingredient: long sign = ((k & 0x1) == 0) ? 1 : -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5552/MersenneTwister.java
Used ingredient: boolean bisect = (x < x1 && (x1 - x0) > 0.95 * (x2 - x0)) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5553/MersenneTwister.java
Used ingredient: long mask  = 0xffffffff00000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5554/MersenneTwister.java
Used ingredient: final double v = (1 + c * x) * (1 + c * x) * (1 + c * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5555/MersenneTwister.java
Used ingredient: this.maxIter     = (maxNumIter   <= 0) ? 2 : maxNumIter;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5556/MersenneTwister.java
Used ingredient: return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5557/MersenneTwister.java
Used ingredient: final long sign = bits & 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5558/MersenneTwister.java
Used ingredient: return (sign > 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5559/MersenneTwister.java
Used ingredient: return (sign < 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5560/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) (((mant[i] / 100) %10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5561/MersenneTwister.java
Used ingredient: double f3 = (f0 + x / (2 * y * f0)) / (4 * x * x * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5562/MersenneTwister.java
Used ingredient: double mx01 = m0[0] * x01 + m1[0] * x11 + m2[0] * x21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5563/MersenneTwister.java
Used ingredient: double mx02 = m0[0] * x02 + m1[0] * x12 + m2[0] * x22;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5564/MersenneTwister.java
Used ingredient: out[0] = 2 * (m0 * (x * m0 - (q2 * z - q3 * y)) + s * q1) - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5565/MersenneTwister.java
Used ingredient: f += 1e2 * (x[i] * x[i] - x[i + 1]) * (x[i] * x[i] - x[i + 1])
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5566/MersenneTwister.java
Used ingredient: double p = (matrixT[iu - 1][iu - 1] - matrixT[iu][iu]) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5567/MersenneTwister.java
Used ingredient: final double b = (2 * q + 1) * y2 - (1 + q) * (1 + q) * y1 + q * q * y0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5568/MersenneTwister.java
Used ingredient: private static final double K14_13 =             -4149.0 / 500000.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5569/MersenneTwister.java
Used ingredient: checkCopy(m, copy, new int[] { 0, 1 }, new int[] { 0, 1, 2 }, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5570/MersenneTwister.java
Used ingredient: if ((m >= 0 && s >= 0) || (m < 0 && s < 0)) { // Sign is currently OK
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5571/MersenneTwister.java
Used ingredient: * c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5572/MersenneTwister.java
Used ingredient: f[i] = y[i] - (x01 * tmp1 + x02 * tmp2 + x03 * tmp3 + x04 * tmp4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5573/MersenneTwister.java
Used ingredient: y = (mtNext & 0x80000000) | (mt[0] & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5574/MersenneTwister.java
Used ingredient: * c1 = (1 0  | 1 0 1 0  | 0 1 1)    X   c2 = (0 1  | 1 0 0 1  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5575/MersenneTwister.java
Used ingredient: result = prime * result + ((field == null) ? 0 : field.hashCode());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5576/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 1);  // round half-even
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5577/MersenneTwister.java
Used ingredient: return parameters[0] / x + (parameters.length < 2 ? 0 : parameters[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5578/MersenneTwister.java
Used ingredient: 2479159.0 / 157936.0,                    -18750000.0 / 602131.0,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5579/MersenneTwister.java
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1664525l)) + seed[j] + j; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5580/MersenneTwister.java
Used ingredient: (1.0 / (i + 2) - scaledX2 * (1.0 / (6 * i + 24) - scaledX2 / (120 * i + 720)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5581/MersenneTwister.java
Used ingredient: // lnm is a log of a number in the range of 1.0 - 2.0, so 0 <= lnm < ln(2)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5582/MersenneTwister.java
Used ingredient: (1.0 / (i + 1) - scaledX2 * (1.0 / (2 * i + 6) - scaledX2 / (24 * i + 120)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5583/MersenneTwister.java
Used ingredient: x += StrictMath.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5584/MersenneTwister.java
Used ingredient: return 1 + ((left  == null) ? 0 : left.size()) + ((right == null) ? 0 : right.size());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5585/MersenneTwister.java
Used ingredient: checkCopy(m, subRows31Cols31,  new int[] { 3, 1 }, new int[] { 3, 1 },    false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5586/MersenneTwister.java
Used ingredient: for (int i = 0; i < N-1; i += (i == 0 ? 2 : 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5587/MersenneTwister.java
Used ingredient: long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5588/MersenneTwister.java
Used ingredient: (n0 * (n0 + 1)) / ((n0 - 1) * (n0 - 2) * (n0 - 3));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5589/MersenneTwister.java
Used ingredient: return (size2 < size1) ? -1 : ((o1 == o2) ? 0 : +1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5590/MersenneTwister.java
Used ingredient: boolean bita = (bd & 0x8000000000000000L) != 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5591/MersenneTwister.java
Used ingredient: // monomial(t) = (t - t0) * (t - t1) * ... * (t - t(i-1))
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5592/MersenneTwister.java
Used ingredient: if (((bits & 0x8000000000000000L) != 0 || x != x) && x != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5593/MersenneTwister.java
Used ingredient: final int z2       = (vM2 ^ (vM2 << 10)) ^ (vM3 << 26);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5594/MersenneTwister.java
Used ingredient: final int z1 = (vi ^ (vi << 16))   ^ (vi1 ^ (vi1 << 15));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5595/MersenneTwister.java
Used ingredient: buffer[p++] = (char) (((mant[i] / 10) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5596/MersenneTwister.java
Used ingredient: while ( (mantissa & 0x0010000000000000L) == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5597/MersenneTwister.java
Used ingredient: buffer[p++] = (char) (((mant[i] / 100) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5598/MersenneTwister.java
Used ingredient: boolean bitsum = (prodB & 0x8000000000000000L) != 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5599/MersenneTwister.java
Used ingredient: final int z1       = (v0 ^ (v0 << 24))  ^ (vM1 ^ (vM1 >>> 30));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5600/MersenneTwister.java
SuspiciousModificationPoint:             long l1 = (mt[i-1] & 0x7fffffffl) | ((mt[i-1] < 0) ? 0x80000000l : 0x0l);
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 193
Used ingredient: long l0 = (mt[i] & 0x7fffffffl)   | ((mt[i]   < 0) ? 0x80000000l : 0x0l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5601/MersenneTwister.java
Used ingredient: ((r & 0x7fffffffl) | ((r < 0) ? 0x80000000l : 0x0l)) / 4294967296.0,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5602/MersenneTwister.java
Used ingredient: Assert.assertEquals(refInt[i], (r & 0x7fffffffl) | ((r < 0) ? 0x80000000l : 0x0l));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5603/MersenneTwister.java
Used ingredient: final double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5604/MersenneTwister.java
Used ingredient: while (((m & 0x001ffffffffffffeL) != 0) && ((m & 0x1) == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5605/MersenneTwister.java
Used ingredient: double epsilon = x / Double.longBitsToDouble(bits & 0xfffffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5606/MersenneTwister.java
Used ingredient: final long exponent = bits & 0x7ff0000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5607/MersenneTwister.java
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941l)) - i; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5608/MersenneTwister.java
Used ingredient: int exponent = (int) ((bits & 0x7ff0000000000000L) >> 52) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5609/MersenneTwister.java
Used ingredient: //double y = Double.longBitsToDouble(bits & 0xfffffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5610/MersenneTwister.java
Used ingredient: double mx10 = m0[1] * x00 + m1[1] * x10 + m2[1] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5611/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5612/MersenneTwister.java
Used ingredient: return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5613/MersenneTwister.java
Used ingredient: return (xOptimum < xMin) ? xMin : ((xOptimum > xMax) ? xMax : xOptimum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5614/MersenneTwister.java
Used ingredient: int[] testValues = new int[] {4, 10, 12, 32, 100, 10000, 0, 0, 0, 0};
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5615/MersenneTwister.java
Used ingredient: f[i] = y[i] - x1 * (v[i] * (v[i] + x2)) / (v[i] * (v[i] + x3) + x4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5616/MersenneTwister.java
Used ingredient: return ((data == null) || (data[0] == null)) ? 0 : data[0].length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5617/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) - 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5618/MersenneTwister.java
Used ingredient: return Float.intBitsToFloat(sign | ((bits & 0x7fffffff) + 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5619/MersenneTwister.java
Used ingredient: final double[] lnm = lnMant.LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5620/MersenneTwister.java
Used ingredient: final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5621/MersenneTwister.java
Used ingredient: final int z0       = (0xFFFF8000 & v[indexRm1]) ^ (0x00007FFF & v[indexRm2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5622/MersenneTwister.java
Used ingredient: final long sign     = bits & 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5623/MersenneTwister.java
Used ingredient: double mx00 = m0[0] * x00 + m1[0] * x10 + m2[0] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5624/MersenneTwister.java
Used ingredient: for (int trials = 500000; trials < 20000000; trials += 100000) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5625/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) (((mant[i] / 10) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5626/MersenneTwister.java
Used ingredient: o0[1] = x01 - 0.5 * (x00 * mx01 + x01 * mx11 + x02 * mx21 - m0[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5627/MersenneTwister.java
Used ingredient: double[] expected = { 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5628/MersenneTwister.java
Used ingredient: final double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5629/MersenneTwister.java
Used ingredient: boolean bisect = (x < x1 && (x1 - x0) > 0.95 * (x2 - x0)) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5630/MersenneTwister.java
Used ingredient: return (sign > 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5631/MersenneTwister.java
Used ingredient: return (sign < 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5632/MersenneTwister.java
Used ingredient: double p = (matrixT[iu - 1][iu - 1] - matrixT[iu][iu]) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5633/MersenneTwister.java
Used ingredient: ya = (tmp1 + tmp2 - tmp1) * HEX_40000000 * HEX_40000000;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5634/MersenneTwister.java
Used ingredient: double mx12 = m0[1] * x02 + m1[1] * x12 + m2[1] * x22;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5635/MersenneTwister.java
Used ingredient: double mx11 = m0[1] * x01 + m1[1] * x11 + m2[1] * x21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5636/MersenneTwister.java
Used ingredient: x += Math.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5637/MersenneTwister.java
Used ingredient: final double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5638/MersenneTwister.java
Used ingredient: final double ph0 = 0.5 * (currentState[i] + y1[i]) + 0.125 * (aspl + bspl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5639/MersenneTwister.java
Used ingredient: o0[0] = x00 - 0.5 * (x00 * mx00 + x01 * mx10 + x02 * mx20 - m0[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5640/MersenneTwister.java
Used ingredient: return (yOptimum < yMin) ? yMin : ((yOptimum > yMax) ? yMax : yOptimum);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5641/MersenneTwister.java
Used ingredient: final double p = a[0] + x * (a[1] + x * (a[2] + x * a[3]));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5642/MersenneTwister.java
Used ingredient: final int z4 = (z0 ^ (z0 << 11)) ^ (z1 ^ (z1 << 7)) ^ (z2 ^ (z2 << 13));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5643/MersenneTwister.java
Used ingredient: double mx20 = m0[2] * x00 + m1[2] * x10 + m2[2] * x20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5644/MersenneTwister.java
Used ingredient: o1[0] = x10 - 0.5 * (x10 * mx00 + x11 * mx10 + x12 * mx20 - m1[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5645/MersenneTwister.java
Used ingredient: bottom[i - j] = (bottom[i - j + 1] - bottom[i - j]) / (j * stepSize);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5646/MersenneTwister.java
Used ingredient: long sign = ((k & 0x1) == 0) ? 1 : -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5647/MersenneTwister.java
Used ingredient: long mask  = 0xffffffff00000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5648/MersenneTwister.java
Used ingredient: final double v = (1 + c * x) * (1 + c * x) * (1 + c * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5649/MersenneTwister.java
Used ingredient: final long sign = bits & 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5650/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) (((mant[i] / 100) %10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5651/MersenneTwister.java
Used ingredient: double mx01 = m0[0] * x01 + m1[0] * x11 + m2[0] * x21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5652/MersenneTwister.java
Used ingredient: f += 1e2 * (x[i] * x[i] - x[i + 1]) * (x[i] * x[i] - x[i + 1])
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5653/MersenneTwister.java
Used ingredient: * c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5654/MersenneTwister.java
Used ingredient: f[i] = y[i] - (x01 * tmp1 + x02 * tmp2 + x03 * tmp3 + x04 * tmp4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5655/MersenneTwister.java
Used ingredient: y = (mtNext & 0x80000000) | (mt[0] & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5656/MersenneTwister.java
Used ingredient: * c1 = (1 0  | 1 0 1 0  | 0 1 1)    X   c2 = (0 1  | 1 0 0 1  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5657/MersenneTwister.java
Used ingredient: result = prime * result + ((field == null) ? 0 : field.hashCode());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5658/MersenneTwister.java
Used ingredient: return parameters[0] / x + (parameters.length < 2 ? 0 : parameters[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5659/MersenneTwister.java
Used ingredient: while ( (mantissa & 0x0010000000000000L) == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5660/MersenneTwister.java
Used ingredient: return (sign > 0) && ((mant[mant.length - 1] != 0) || isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5661/MersenneTwister.java
Used ingredient: return (sign < 0) && ((mant[mant.length - 1] != 0) || isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5662/MersenneTwister.java
Used ingredient: y[i] = ((((3 * t - 15) * t + 60) * t - 180) * t + 360) * t - 360;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5663/MersenneTwister.java
Used ingredient: final double b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5664/MersenneTwister.java
Used ingredient: longMT = (1812433253l * (longMT ^ (longMT >> 30)) + mti) & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5665/MersenneTwister.java
Used ingredient: checkDensity(1, 1, x, new double[] { 0.00, 0.00, 0.00, 1.00, 0.25 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5666/MersenneTwister.java
Used ingredient: last[i] = diag[0][i] + coeff[k+offset][k-1] * (diag[0][i] - last[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5667/MersenneTwister.java
Used ingredient: * f[x0,x1,...,xk] = (f[x1,...,xk] - f[x0,...,x[k-1]]) / (xk - x0)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5668/MersenneTwister.java
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1664525l)) + seed[j] + j; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5669/MersenneTwister.java
Used ingredient: checkDensity(1.1, 1, x, new double[] { 0.000, 0.000, 0.000, 0.000, 0.275 });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5670/MersenneTwister.java
Used ingredient: x += FastMath.atan2((i - max/2) * (100.0 / max), (j - max/2) * (100.0 / max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5671/MersenneTwister.java
Used ingredient: rsl[j] = (int) (0x6c078965L * (k ^ k >> 30) + j & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5672/MersenneTwister.java
Used ingredient: return 2 * x[0] * x[0] - 3 * x[1] * x[1] + 4 * x[0] * x[1] - 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5673/MersenneTwister.java
Used ingredient: private static final long SIGN_MASK     = 0x8000000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5674/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 0);  // round half-odd
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5675/MersenneTwister.java
Used ingredient: return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5676/MersenneTwister.java
Used ingredient: double mx02 = m0[0] * x02 + m1[0] * x12 + m2[0] * x22;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5677/MersenneTwister.java
Used ingredient: final double b = (2 * q + 1) * y2 - (1 + q) * (1 + q) * y1 + q * q * y0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5678/MersenneTwister.java
Used ingredient: long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5679/MersenneTwister.java
Used ingredient: return (size2 < size1) ? -1 : ((o1 == o2) ? 0 : +1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5680/MersenneTwister.java
Used ingredient: boolean bita = (bd & 0x8000000000000000L) != 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5681/MersenneTwister.java
Used ingredient: // monomial(t) = (t - t0) * (t - t1) * ... * (t - t(i-1))
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5682/MersenneTwister.java
Used ingredient: buffer[p++] = (char) (((mant[i] / 10) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5683/MersenneTwister.java
Used ingredient: buffer[p++] = (char) (((mant[i] / 100) % 10) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5684/MersenneTwister.java
Used ingredient: boolean bitsum = (prodB & 0x8000000000000000L) != 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5685/MersenneTwister.java
Used ingredient: long bits = mantissa | ((exponent + 1023L) << 52);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5686/MersenneTwister.java
Used ingredient: final double xN = (x - xval[i]) / (xval[i + 1] - xval[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5687/MersenneTwister.java
Used ingredient: rawdigits[p++] = (char) ((mant[i] / 1000) + '0');
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5688/MersenneTwister.java
Used ingredient: long mask = 0xffffffffc0000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5689/MersenneTwister.java
Used ingredient: final Integer[] p1 = new Integer[] { 1, 0, 1, 0, 0, 1, 0, 1, 1 };
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5690/MersenneTwister.java
Used ingredient: final int z0 = (0x80000000 & v[indexRm1]) ^ (0x7FFFFFFF & v[indexRm2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5691/MersenneTwister.java
Used ingredient: Assert.assertEquals((i == 0 ? x.getValue() : (i == 1 ? 1.0 : 0.0)) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5692/MersenneTwister.java
Used ingredient: final long m = (sign(bits) == 0L) ? mantissa(bits) : -mantissa(bits);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5693/MersenneTwister.java
Used ingredient: * p1 = (1 0 1 0 0 1  | 0 1 1)    X    p2 = (0 1 1 0 1 0  | 1 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5694/MersenneTwister.java
Used ingredient: y = (mtCurr & 0x80000000) | (mtNext & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5695/MersenneTwister.java
Used ingredient: * p1 = (1 0  | 1 0 0 1 | 0 1 1)    X    p2 = (0 1  | 1 0 1 0  | 1 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5696/MersenneTwister.java
Used ingredient: final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5697/MersenneTwister.java
Used ingredient: private static final long EXPONENT_MASK = 0x7ff0000000000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5698/MersenneTwister.java
Used ingredient: xTransformed[j] = xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5699/MersenneTwister.java
Used ingredient: double p2 = Double.longBitsToDouble((inbits & 0x8000000000000000L) |
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5700/MersenneTwister.java
SuspiciousModificationPoint:             long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1566083941l)) - i; // non linear
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 194
Used ingredient: long l  = (l0 ^ ((l1 ^ (l1 >> 30)) * 1664525l)) + seed[j] + j; // non linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5701/MersenneTwister.java
Used ingredient: longMT = (1812433253l * (longMT ^ (longMT >> 30)) + mti) & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5702/MersenneTwister.java
Used ingredient: final int z4       = z0 ^ (z1 ^ (z1 >>> 20)) ^ z2Second ^ z3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5703/MersenneTwister.java
Used ingredient: while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { // while u and v are
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5704/MersenneTwister.java
Used ingredient: final int z1       = (v0 ^ (v0 << 24))  ^ (vM1 ^ (vM1 >>> 30));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5705/MersenneTwister.java
Used ingredient: int z4             = z0 ^ (z1 ^ (z1 >>> 20)) ^ z2Second ^ z3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5706/MersenneTwister.java
Used ingredient: final int z4 = (z0 ^ (z0 << 11)) ^ (z1 ^ (z1 << 7)) ^ (z2 ^ (z2 << 13));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5707/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 1);  // round half-even
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5708/MersenneTwister.java
Used ingredient: int z4 = z0 ^ (z1 ^ (z1 << 9)) ^ (z2 ^ (z2 << 21)) ^ (z3 ^ (z3 >>> 21));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5709/MersenneTwister.java
Used ingredient: inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 0);  // round half-odd
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5710/MersenneTwister.java
Used ingredient: final long np = 1L << (n-1);           // number of new points in this stage
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5711/MersenneTwister.java
Used ingredient: final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5712/MersenneTwister.java
Used ingredient: inc = (sign == -1) && (n != 0 || discarded != 0);  // round floor
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5713/MersenneTwister.java
Used ingredient: v[i] = (int) ((1812433253l * (l ^ (l >> 30)) + i) & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5714/MersenneTwister.java
Used ingredient: * U1 = R1 - (n1 * (n1 + 1)) / 2 where R1 is sum of ranks for sample 1,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5715/MersenneTwister.java
Used ingredient: final int z4 = z0 ^ (z1 ^ (z1 << 9)) ^ (z2 ^ (z2 << 21)) ^ (z3 ^ (z3 >>> 21));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5716/MersenneTwister.java
Used ingredient: long l0 = (mt[i] & 0x7fffffffl)   | ((mt[i]   < 0) ? 0x80000000l : 0x0l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5717/MersenneTwister.java
Used ingredient: long l1 = (mt[i-1] & 0x7fffffffl) | ((mt[i-1] < 0) ? 0x80000000l : 0x0l);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5718/MersenneTwister.java
Used ingredient: boolean bisect = (x < x1 && (x1 - x0) > 0.95 * (x2 - x0)) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5719/MersenneTwister.java
Used ingredient: if ((m >= 0 && s >= 0) || (m < 0 && s < 0)) { // Sign is currently OK
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5720/MersenneTwister.java
Used ingredient: inc = (sign == 1) && (n != 0 || discarded != 0);  // round ceil
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5721/MersenneTwister.java
Used ingredient: out[0] = 2 * (m0 * (x * m0 - (q2 * z - q3 * y)) + s * q1) - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5722/MersenneTwister.java
Used ingredient: out[2] = 2 * (m0 * (z * m0 - (q1 * y - q2 * x)) + s * q3) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5723/MersenneTwister.java
Used ingredient: return rln10b * lnb + rln10b * lna + rln10a * lnb + rln10a * lna;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5724/MersenneTwister.java
Used ingredient: out[0] = 2 * (q0 * (x * q0 - (q2 * z - q3 * y)) + s * q1) - x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5725/MersenneTwister.java
Used ingredient: out[2] = 2 * (q0 * (z * q0 - (q1 * y - q2 * x)) + s * q3) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5726/MersenneTwister.java
Used ingredient: final double alpha = 0.001;         // Probability of false failure
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5727/MersenneTwister.java
Used ingredient: (n == 5 && discarded == 0 && ((lsb / lsbthreshold) & 1) == 1);  // round half-even
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5728/MersenneTwister.java
Used ingredient: final double b = (2 * q + 1) * y2 - (1 + q) * (1 + q) * y1 + q * q * y0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5729/MersenneTwister.java
Used ingredient: (n == 5 && discarded == 0 && ((lsb / lsbthreshold) & 1) == 0);  // round half-odd
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5730/MersenneTwister.java
Used ingredient: final double delta = 1 - (y1 * y2) / (y3 * y3);  // delta > 1 due to bracketing
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5731/MersenneTwister.java
Used ingredient: double f3 = (f0 + x / (2 * y * f0)) / (4 * x * x * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5732/MersenneTwister.java
Used ingredient: final int z1 = (vi ^ (vi << 16))   ^ (vi1 ^ (vi1 << 15));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5733/MersenneTwister.java
Used ingredient: out[1] = 2 * (m0 * (y * m0 - (q3 * x - q1 * z)) + s * q2) - y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5734/MersenneTwister.java
Used ingredient: final double Wminus = (((double) (N * (N + 1))) / 2.0) - Wplus;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5735/MersenneTwister.java
Used ingredient: out[1] = 2 * (q0 * (y * q0 - (q3 * x - q1 * z)) + s * q2) - y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5736/MersenneTwister.java
Used ingredient: f[i] = x1 * FastMath.exp(x2 / (5.0 * (i + 1) + 45.0 + x3)) - y[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5737/MersenneTwister.java
Used ingredient: double f3 = (x / (8 * y * f0) - 2 * f0) / (y * y * y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5738/MersenneTwister.java
Used ingredient: double w = xB - ((xB - xC) * tmp2 - (xB - xA) * tmp1) / denom;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5739/MersenneTwister.java
Used ingredient: final int z1 = (v0 ^ (v0 << 25))  ^ (vM1 ^ (vM1 >>> 27));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5740/MersenneTwister.java
Used ingredient: return (((v1 / n1) + (v2 / n2)) * ((v1 / n1) + (v2 / n2))) /
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5741/MersenneTwister.java
Used ingredient: * final double VarW = ((double) (N * (N + 1) * (2*N + 1))) / 24;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5742/MersenneTwister.java
Used ingredient: historySize = 10 + (int) (3 * 10 * dimension / (double) lambda);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5743/MersenneTwister.java
Used ingredient: final int z2 = (vM2 ^ (vM2 << 19)) ^ (vM3 ^ (vM3 << 14));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5744/MersenneTwister.java
Used ingredient: final int len = 10;        // length of values array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5745/MersenneTwister.java
Used ingredient: direction[d][i] ^= ((a >> (s - 1 - k)) & 1) * direction[d][i - k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5746/MersenneTwister.java
Used ingredient: int cur = 0;          // beginning of current partition segment
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5747/MersenneTwister.java
Used ingredient: * c1 = (1 0  | 1 0 1 0  | 0 1 1)    X   c2 = (0 1  | 1 0 0 1  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5748/MersenneTwister.java
Used ingredient: * p1 = (1 0  | 1 0 0 1 | 0 1 1)    X    p2 = (0 1  | 1 0 1 0  | 1 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5749/MersenneTwister.java
Used ingredient: (-b23 * d1 - (c3 * a1 - c1 * a3) * d2 - (c1 * a2 - c2 * a1) * d3) * r,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5750/MersenneTwister.java
Used ingredient: // we write these relations for i = 1 to i= n-1 as a set of 2(n-1) linear
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5751/MersenneTwister.java
Used ingredient: double x = ((generator.nextDouble() * 16.0) - 8.0) * generator.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5752/MersenneTwister.java
Used ingredient: final double dot5 = theta2 * (3 + theta * (-12 + theta * (15 - 6 * theta)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5753/MersenneTwister.java
Used ingredient: return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : a); // return +0.0/-0.0/NaN depending on a
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5754/MersenneTwister.java
Used ingredient: * Note that i - j + 1 > 0 <=> i + 1 > j instead of j'ing all the way to
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5755/MersenneTwister.java
Used ingredient: final double bDot0 = 1 + theta * (-15.0/2.0 + theta * (16.0 - 10.0 * theta));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5756/MersenneTwister.java
Used ingredient: if ((sign >= 0 && sb >= 0) || (sign < 0 && sb < 0)) { // Sign is currently OK
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5757/MersenneTwister.java
Used ingredient: o0[1] = x01 - 0.5 * (x00 * mx01 + x01 * mx11 + x02 * mx21 - m0[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5758/MersenneTwister.java
Used ingredient: final double v = (1 + c * x) * (1 + c * x) * (1 + c * x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5759/MersenneTwister.java
Used ingredient: * c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5760/MersenneTwister.java
Used ingredient: final double b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5761/MersenneTwister.java
Used ingredient: long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5762/MersenneTwister.java
Used ingredient: * p1 = (1 0 1 0 0 1  | 0 1 1)    X    p2 = (0 1 1 0 1 0  | 1 1 1)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5763/MersenneTwister.java
Used ingredient: (n0 * (n0 + 1)) / ((n0 - 1) * (n0 - 2) * (n0 - 3));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5764/MersenneTwister.java
Used ingredient: o1[1] = x11 - 0.5 * (x10 * mx01 + x11 * mx11 + x12 * mx21 - m1[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5765/MersenneTwister.java
Used ingredient: * p1 = (8 4 7 3 6 2 5 1 9 0)    X   c1 = (8 1 2 3 4 5 6 7 9 0)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5766/MersenneTwister.java
Used ingredient: final double ppc = ((2 * j + 1) * c * pc - j * pmc) / (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5767/MersenneTwister.java
Used ingredient: double f2 = (f0 - x / (4 * y * f0)) / (y * y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5768/MersenneTwister.java
Used ingredient: final double a = q * (y2 - (1 + q) * y1 + q * y0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5769/MersenneTwister.java
Used ingredient: return ((x0 + x1) * p12 + (x2 + x3) * (1.0 - p12)) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5770/MersenneTwister.java
Used ingredient: m3 = m3 - 3.0 * nDev * prevM2 + (n0 - 1) * (n0 - 2) * nDevSq * dev;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5771/MersenneTwister.java
Used ingredient: final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5772/MersenneTwister.java
Used ingredient: final int z2Prime  = ((z2 << 9) ^ (z2 >>> 23)) & 0xfbffffff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5773/MersenneTwister.java
Used ingredient: final int cBlocks        = (columns + blockSize - 1) / blockSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5774/MersenneTwister.java
Used ingredient: 2 * (m0 * (z * m0 - (q1 * y - q2 * x)) + s * q3) - z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5775/MersenneTwister.java
Used ingredient: 2 * (q0 * (z * q0 - (q1 * y - q2 * x)) + s * q3) - z);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5776/MersenneTwister.java
Used ingredient: for (int i = 0; i < 100; i++) { // make sure no convergence exception
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5777/MersenneTwister.java
Used ingredient: absAsinh = a * (1 - a2 * (F_1_3 - a2 * F_1_5 * F_3_4) * F_1_2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5778/MersenneTwister.java
Used ingredient: output[ (col2 - 1 - in) * (col2 - in) / 2 + col1 - in] =
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5779/MersenneTwister.java
Used ingredient: {  -3.0 / 1024,   5.0 / 1024,  -3.0 / 1024,   5.0 / 1024 }
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5780/MersenneTwister.java
Used ingredient: {  -3.0 / 1024,   5.0 / 1024,  -3.0 / 1024,   5.0 / 1024 },
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5781/MersenneTwister.java
Used ingredient: return new double[] { -3.0001,                 // below lower limit
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5782/MersenneTwister.java
Used ingredient: * {@code k = 0, ..., n - 1}, {@code w = exp(2 * pi * i / n)} and
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5783/MersenneTwister.java
Used ingredient: final int z1 = v0  ^ (vM1 ^ (vM1 >>> 8));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5784/MersenneTwister.java
Used ingredient: final int sampleSize = 1000;        // Number of deviates to generate
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5785/MersenneTwister.java
Used ingredient: out.printf("        %s%n", format(d)); // one entry per line
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5786/MersenneTwister.java
Used ingredient: final double bMinus = bin == 0 ? 0 : (bin - 1) * binMass + firstBinMass;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5787/MersenneTwister.java
Used ingredient: *   0    0    1     1     0     0     0     1     4   &lt;= constraint 3
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5788/MersenneTwister.java
Used ingredient: *   0    0    0     1     0     0     1     0     3   &lt;= constraint 2
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5789/MersenneTwister.java
Used ingredient: * Returns the value of 1 / &Gamma;(1 + x) - 1 for -0&#46;5 &le; x &le;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5790/MersenneTwister.java
Used ingredient: * new value = old value - 4 * (dev/n) * m3 + 6 * (dev/n)^2 * m2 + <br>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5791/MersenneTwister.java
Used ingredient: * <center>Δ(x) = log Γ(x) - (x - 0.5) log a + a - 0.5 log 2π,</center>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5792/MersenneTwister.java
Used ingredient: return new Vector3D(2 * (m0 * (x * m0 - (q2 * z - q3 * y)) + s * q1) - x,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5793/MersenneTwister.java
Used ingredient: return new Vector3D(2 * (q0 * (x * q0 - (q2 * z - q3 * y)) + s * q1) - x,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5794/MersenneTwister.java
Used ingredient: final double pooledVariance = ((n1  - 1) * v1 + (n2 -1) * v2 ) / (n1 + n2 - 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5795/MersenneTwister.java
Used ingredient: final double bDot3 = theta * (-44.0 + theta * (152.0 - 120.0 * theta));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5796/MersenneTwister.java
Used ingredient: *     = M^(-1) * P' * (P * (A - shift * I) * P' * v[k] -alpha[k] * v[k]
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5797/MersenneTwister.java
Used ingredient: return (a < 0.0f) ? -1.0f : ((a > 0.0f) ? 1.0f : a); // return +0.0/-0.0/NaN depending on a
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5798/MersenneTwister.java
Used ingredient: double x = ((generator.nextDouble() * 1416.0) - 708.0) * generator.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5799/MersenneTwister.java
Used ingredient: return FastMath.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5800/MersenneTwister.java
SuspiciousModificationPoint:             mt[i]   = (int) (l & 0xffffffffL);
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 195
Used ingredient: mt[i]   = (int) (l & 0xffffffffl);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5801/MersenneTwister.java
Used ingredient: long b = inbits & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5802/MersenneTwister.java
Used ingredient: bits = bits & 0x7fffffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5803/MersenneTwister.java
Used ingredient: bytes[i]     = (byte) (random & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5804/MersenneTwister.java
Used ingredient: int mantissa   = bits & 0x007fffff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5805/MersenneTwister.java
Used ingredient: long d = shpiA & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5806/MersenneTwister.java
Used ingredient: bytes[i++] = (byte) (random & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5807/MersenneTwister.java
Used ingredient: mantissa = mantissa & 0x007fffff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5808/MersenneTwister.java
Used ingredient: d = shpi0 & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5809/MersenneTwister.java
Used ingredient: d = shpiB & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5810/MersenneTwister.java
Used ingredient: long mantissa   = bits & 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5811/MersenneTwister.java
Used ingredient: mantissa = mantissa & 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5812/MersenneTwister.java
Used ingredient: bits = bits | (((long) next(32)) & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5813/MersenneTwister.java
Used ingredient: long mantissa = bits & 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5814/MersenneTwister.java
Used ingredient: final double numer = bits & 0x3ffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5815/MersenneTwister.java
Used ingredient: d = PI_O_4_BITS[1] & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5816/MersenneTwister.java
Used ingredient: d = PI_O_4_BITS[0] & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5817/MersenneTwister.java
Used ingredient: mantissa &= 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5818/MersenneTwister.java
Used ingredient: inbits &= 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5819/MersenneTwister.java
Used ingredient: b = prodA & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5820/MersenneTwister.java
Used ingredient: b = prodB & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5821/MersenneTwister.java
Used ingredient: final long  low  = ((long) next(32)) & 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5822/MersenneTwister.java
Used ingredient: bits = (bits << 8) | (((long) b) & 0xffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5823/MersenneTwister.java
Used ingredient: int intFrac = (int) (x * 1024.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5824/MersenneTwister.java
Used ingredient: long mask  = 0xffffffff00000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5825/MersenneTwister.java
Used ingredient: long mask  = 0xffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5826/MersenneTwister.java
Used ingredient: int idx = (int) ((xa * 8.0) + 0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5827/MersenneTwister.java
Used ingredient: bytes[i + 1] = (byte) ((random >>  8) & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5828/MersenneTwister.java
Used ingredient: bytes[i + 2] = (byte) ((random >> 16) & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5829/MersenneTwister.java
Used ingredient: bytes[i + 3] = (byte) ((random >> 24) & 0xff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5830/MersenneTwister.java
Used ingredient: int  exponent  = (bits >>> 23) & 0xff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5831/MersenneTwister.java
Used ingredient: int k = (int) Math.ceil(n * d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5832/MersenneTwister.java
Used ingredient: long mask = 0xffffffffc0000000L;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5833/MersenneTwister.java
Used ingredient: return hash & 0x7fffffff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5834/MersenneTwister.java
Used ingredient: long m              = bits & 0x000fffffffffffffL;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5835/MersenneTwister.java
Used ingredient: v[i] = (int) ((1812433253l * (l ^ (l >> 30)) + i) & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5836/MersenneTwister.java
Used ingredient: return (int) ((m >> (k - e)) & 0x1L);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5837/MersenneTwister.java
Used ingredient: final int k = (int) Math.ceil(n * d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5838/MersenneTwister.java
Used ingredient: mant[mant.length - 1] = (int) (x % RADIX);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5839/MersenneTwister.java
Used ingredient: y = (mtNext & 0x80000000) | (mt[0] & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5840/MersenneTwister.java
Used ingredient: int result = (int) (nextDouble() * n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5841/MersenneTwister.java
Used ingredient: rsl[j] = (int) (0x6c078965L * (k ^ k >> 30) + j & 0xffffffffL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5842/MersenneTwister.java
Used ingredient: setSeed(new int[]{(int) (seed >>> 32), (int) (seed & 0xffffffffL)});
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5843/MersenneTwister.java
Used ingredient: int exp = (int)(bits >> 52)-1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5844/MersenneTwister.java
Used ingredient: yDot[i] = t * (t * t - y[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5845/MersenneTwister.java
Used ingredient: f[i] += 1.0 / (i * (i + 2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5846/MersenneTwister.java
Used ingredient: iu = (int) (angbd * 17. + 3.1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5847/MersenneTwister.java
Used ingredient: int intPart = (int)(prodA >>> 62);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5848/MersenneTwister.java
Used ingredient: return (int) floor(x + 0.5f);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5849/MersenneTwister.java
Used ingredient: a = (int) (blbu % al);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5850/MersenneTwister.java
Used ingredient: final int num = (int) data.getN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5851/MersenneTwister.java
Used ingredient: data[i] = v.getEntry(i - index);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5852/MersenneTwister.java
Used ingredient: mt[mti]= (int) longMT;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5853/MersenneTwister.java
Used ingredient: y = (mtCurr & 0x80000000) | (mtNext & 0x7fffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5854/MersenneTwister.java
Used ingredient: int  exponent   = ((int) (bits >>> 52)) & 0x7ff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5855/MersenneTwister.java
Used ingredient: coeff[i + N * j] = (i + 1) * (j + 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5856/MersenneTwister.java
Used ingredient: jacobian[i][j] = (i + 1) * (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5857/MersenneTwister.java
Used ingredient: data[i][1] = i + 1/((double)i + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5858/MersenneTwister.java
Used ingredient: final int len = ((int) (max - min)) + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5859/MersenneTwister.java
Used ingredient: points[i] = points[i] * scale + shift;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5860/MersenneTwister.java
Used ingredient: ret = (t / x) * ((c - 0.5) - 0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5861/MersenneTwister.java
Used ingredient: x[i] = min + i * (max - min) / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5862/MersenneTwister.java
Used ingredient: y = (int) ((y2 + cst) % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5863/MersenneTwister.java
Used ingredient: pa[i][j] = (i == j) ? 1 : 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5864/MersenneTwister.java
Used ingredient: mantissa = mantissa | (1 << 23);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5865/MersenneTwister.java
Used ingredient: mantissa = mantissa | (1L << 52);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5866/MersenneTwister.java
Used ingredient: (value >= min) && (value <= max));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5867/MersenneTwister.java
Used ingredient: s[i] = f.value(min + i * h);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5868/MersenneTwister.java
Used ingredient: minImpl[i]     = new Min();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5869/MersenneTwister.java
Used ingredient: maxImpl[i]     = new Max();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5870/MersenneTwister.java
Used ingredient: meanImpl[i]    = new Mean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5871/MersenneTwister.java
Used ingredient: c[i] = new Complex(real[i], 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5872/MersenneTwister.java
Used ingredient: sumImpl[i]     = new Sum();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5873/MersenneTwister.java
Used ingredient: sumLogImpl[i]  = new SumOfLogs();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5874/MersenneTwister.java
Used ingredient: Dfp[] y  = interpolator.value(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5875/MersenneTwister.java
Used ingredient: final int nI = nextIndex(i, xLen);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5876/MersenneTwister.java
Used ingredient: q = (int) (prod % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5877/MersenneTwister.java
Used ingredient: y = (int) (square % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5878/MersenneTwister.java
Used ingredient: init[i] = minPoint[i] - 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5879/MersenneTwister.java
Used ingredient: matrixT[i][idx - 1] = c.getReal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5880/MersenneTwister.java
Used ingredient: target[i]  = point.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5881/MersenneTwister.java
Used ingredient: init[i] = maxPoint[i] - 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5882/MersenneTwister.java
Used ingredient: mt[0]= (int) longMT;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5883/MersenneTwister.java
Used ingredient: int k = (int)(xa * 0.6366197723675814);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5884/MersenneTwister.java
Used ingredient: matrixT[i + 1][idx] = (-r - w * t) / x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5885/MersenneTwister.java
Used ingredient: return (int) ((1438542 ^ (bits >>> 32) ^ bits) & 0xffffffff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5886/MersenneTwister.java
Used ingredient: final int n = (int) FastMath.floor(a - 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5887/MersenneTwister.java
Used ingredient: setSeed(new int[] { (int) (seed >>> 32), (int) (seed & 0xffffffffl) });
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5888/MersenneTwister.java
Used ingredient: exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5889/MersenneTwister.java
Used ingredient: f[i] = f[i].add(1.0 / (i * (i + 2)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5890/MersenneTwister.java
Used ingredient: result.sign = (byte) (sign * x.sign);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5891/MersenneTwister.java
Used ingredient: int k = ((int) (exponent >> 52)) - 1075;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5892/MersenneTwister.java
Used ingredient: final double fact2 = n / (n - 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5893/MersenneTwister.java
Used ingredient: final int iMed = (iMin + iMax) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5894/MersenneTwister.java
Used ingredient: double[] insigma = point(DIM, 0.1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5895/MersenneTwister.java
Used ingredient: double[] insigma = point(DIM, 0.3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5896/MersenneTwister.java
Used ingredient: final int sign = bits & 0x80000000;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5897/MersenneTwister.java
Used ingredient: root[i] = solve(subarray, initial);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5898/MersenneTwister.java
Used ingredient: int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5899/MersenneTwister.java
Used ingredient: f[i] = (((k & 0x1) == 0) ? 1 : -1) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5900/MersenneTwister.java
SuspiciousModificationPoint:             i++;
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 196
Used ingredient: ih++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5901/MersenneTwister.java
Used ingredient: ++i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5902/MersenneTwister.java
Used ingredient: n++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5903/MersenneTwister.java
Used ingredient: ++n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5904/MersenneTwister.java
Used ingredient: ++x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5905/MersenneTwister.java
Used ingredient: r++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5906/MersenneTwister.java
Used ingredient: ++r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5907/MersenneTwister.java
Used ingredient: ++k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5908/MersenneTwister.java
Used ingredient: k++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5909/MersenneTwister.java
Used ingredient: ++j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5910/MersenneTwister.java
Used ingredient: j++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5911/MersenneTwister.java
Used ingredient: e++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5912/MersenneTwister.java
Used ingredient: p++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5913/MersenneTwister.java
Used ingredient: c++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5914/MersenneTwister.java
Used ingredient: q++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5915/MersenneTwister.java
Used ingredient: its++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5916/MersenneTwister.java
Used ingredient: idx++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5917/MersenneTwister.java
Used ingredient: ++m1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5918/MersenneTwister.java
Used ingredient: ++m2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5919/MersenneTwister.java
Used ingredient: p2++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5920/MersenneTwister.java
Used ingredient: sig ++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5921/MersenneTwister.java
Used ingredient: index++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5922/MersenneTwister.java
Used ingredient: ++off;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5923/MersenneTwister.java
Used ingredient: cnt++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5924/MersenneTwister.java
Used ingredient: i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5925/MersenneTwister.java
Used ingredient: ++idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5926/MersenneTwister.java
Used ingredient: --i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5927/MersenneTwister.java
Used ingredient: i--;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5928/MersenneTwister.java
Used ingredient: num++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5929/MersenneTwister.java
Used ingredient: ++rnk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5930/MersenneTwister.java
Used ingredient: ++end;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5931/MersenneTwister.java
Used ingredient: ptr++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5932/MersenneTwister.java
Used ingredient: exp++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5933/MersenneTwister.java
Used ingredient: ++pos;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5934/MersenneTwister.java
Used ingredient: row++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5935/MersenneTwister.java
Used ingredient: intVal++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5936/MersenneTwister.java
Used ingredient: i++; j++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5937/MersenneTwister.java
Used ingredient: i += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5938/MersenneTwister.java
Used ingredient: ++iter;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5939/MersenneTwister.java
Used ingredient: ++next;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5940/MersenneTwister.java
Used ingredient: ++nact;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5941/MersenneTwister.java
Used ingredient: rank++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5942/MersenneTwister.java
Used ingredient: ++size;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5943/MersenneTwister.java
Used ingredient: nsqd++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5944/MersenneTwister.java
Used ingredient: ++nobs;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5945/MersenneTwister.java
Used ingredient: ++walk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5946/MersenneTwister.java
Used ingredient: ++pos1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5947/MersenneTwister.java
Used ingredient: pos2++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5948/MersenneTwister.java
Used ingredient: ++pos2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5949/MersenneTwister.java
Used ingredient: mant[i]++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5950/MersenneTwister.java
Used ingredient: min);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5951/MersenneTwister.java
Used ingredient: c.gridx++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5952/MersenneTwister.java
Used ingredient: + y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5953/MersenneTwister.java
Used ingredient: c.gridy++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5954/MersenneTwister.java
Used ingredient: im--;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5955/MersenneTwister.java
Used ingredient: iu--;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5956/MersenneTwister.java
Used ingredient: ++index;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5957/MersenneTwister.java
Used ingredient: count++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5958/MersenneTwister.java
Used ingredient: ++count;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5959/MersenneTwister.java
Used ingredient: ++nextr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5960/MersenneTwister.java
Used ingredient: ++iterc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5961/MersenneTwister.java
Used ingredient: ++itest;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5962/MersenneTwister.java
Used ingredient: ++start;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5963/MersenneTwister.java
Used ingredient: lower++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5964/MersenneTwister.java
Used ingredient: from1++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5965/MersenneTwister.java
Used ingredient: ++calls;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5966/MersenneTwister.java
Used ingredient: from2++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5967/MersenneTwister.java
Used ingredient: prodA++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5968/MersenneTwister.java
Used ingredient: binWidth++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5969/MersenneTwister.java
Used ingredient: mantissa++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5970/MersenneTwister.java
Used ingredient: int l;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5971/MersenneTwister.java
Used ingredient: l = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5972/MersenneTwister.java
Used ingredient: i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5973/MersenneTwister.java
Used ingredient: int i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5974/MersenneTwister.java
Used ingredient: int e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5975/MersenneTwister.java
Used ingredient: int m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5976/MersenneTwister.java
Used ingredient: init);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5977/MersenneTwister.java
Used ingredient: vector[i]++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5978/MersenneTwister.java
Used ingredient: int k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5979/MersenneTwister.java
Used ingredient: int b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5980/MersenneTwister.java
Used ingredient: int p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5981/MersenneTwister.java
Used ingredient: int y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5982/MersenneTwister.java
Used ingredient: int q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5983/MersenneTwister.java
Used ingredient: ++ntrits;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5984/MersenneTwister.java
Used ingredient: i, j);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5985/MersenneTwister.java
Used ingredient: entry1++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5986/MersenneTwister.java
Used ingredient: --idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5987/MersenneTwister.java
Used ingredient: ++agingB;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5988/MersenneTwister.java
Used ingredient: ++agingA;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5989/MersenneTwister.java
Used ingredient: entry2++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5990/MersenneTwister.java
Used ingredient: zIndex++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5991/MersenneTwister.java
Used ingredient: ++pBlock;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5992/MersenneTwister.java
Used ingredient: ++qBlock;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5993/MersenneTwister.java
Used ingredient: ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5994/MersenneTwister.java
Used ingredient: prod2A++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5995/MersenneTwister.java
Used ingredient: lineNumber++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5996/MersenneTwister.java
Used ingredient: sign = +1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5997/MersenneTwister.java
Used ingredient: ++mcCount;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5998/MersenneTwister.java
Used ingredient: counter++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/5999/MersenneTwister.java
Used ingredient: ++nbSteps;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6000/MersenneTwister.java
SuspiciousModificationPoint:             if (i >= N) {
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 197
Used ingredient: if (i > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6001/MersenneTwister.java
Used ingredient: if (i > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6002/MersenneTwister.java
Used ingredient: if (i > 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6003/MersenneTwister.java
Used ingredient: if (i > 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6004/MersenneTwister.java
Used ingredient: if (i > j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6005/MersenneTwister.java
Used ingredient: if ( i > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6006/MersenneTwister.java
Used ingredient: if (i == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6007/MersenneTwister.java
Used ingredient: if (i != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6008/MersenneTwister.java
Used ingredient: if (m >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6009/MersenneTwister.java
Used ingredient: if (e >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6010/MersenneTwister.java
Used ingredient: if (d >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6011/MersenneTwister.java
Used ingredient: if (g >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6012/MersenneTwister.java
Used ingredient: if (p >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6013/MersenneTwister.java
Used ingredient: if (q >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6014/MersenneTwister.java
Used ingredient: if (i <= 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6015/MersenneTwister.java
Used ingredient: if (a >= b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6016/MersenneTwister.java
Used ingredient: if (r >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6017/MersenneTwister.java
Used ingredient: if (i == k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6018/MersenneTwister.java
Used ingredient: if (i == j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6019/MersenneTwister.java
Used ingredient: if (i != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6020/MersenneTwister.java
Used ingredient: if (i != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6021/MersenneTwister.java
Used ingredient: if (i >= npt) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6022/MersenneTwister.java
Used ingredient: if (min > e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6023/MersenneTwister.java
Used ingredient: if (ipt > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6024/MersenneTwister.java
Used ingredient: if (f1 >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6025/MersenneTwister.java
Used ingredient: if (mu >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6026/MersenneTwister.java
Used ingredient: if (i == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6027/MersenneTwister.java
Used ingredient: if (pm >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6028/MersenneTwister.java
Used ingredient: if (_i > _j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6029/MersenneTwister.java
Used ingredient: if (t > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6030/MersenneTwister.java
Used ingredient: if (n > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6031/MersenneTwister.java
Used ingredient: if (i < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6032/MersenneTwister.java
Used ingredient: if (m > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6033/MersenneTwister.java
Used ingredient: if (k > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6034/MersenneTwister.java
Used ingredient: if (j > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6035/MersenneTwister.java
Used ingredient: if (g > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6036/MersenneTwister.java
Used ingredient: if (x > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6037/MersenneTwister.java
Used ingredient: if (p > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6038/MersenneTwister.java
Used ingredient: if (u > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6039/MersenneTwister.java
Used ingredient: if (y > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6040/MersenneTwister.java
Used ingredient: if (v > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6041/MersenneTwister.java
Used ingredient: if (q > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6042/MersenneTwister.java
Used ingredient: if (n > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6043/MersenneTwister.java
Used ingredient: if (i < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6044/MersenneTwister.java
Used ingredient: if (i < 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6045/MersenneTwister.java
Used ingredient: if (k > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6046/MersenneTwister.java
Used ingredient: if (n > 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6047/MersenneTwister.java
Used ingredient: if (i < j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6048/MersenneTwister.java
Used ingredient: if (k > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6049/MersenneTwister.java
Used ingredient: if (d > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6050/MersenneTwister.java
Used ingredient: if (k > 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6051/MersenneTwister.java
Used ingredient: if (a > b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6052/MersenneTwister.java
Used ingredient: if (c > b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6053/MersenneTwister.java
Used ingredient: if (n > 20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6054/MersenneTwister.java
Used ingredient: if (n <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6055/MersenneTwister.java
Used ingredient: if (n == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6056/MersenneTwister.java
Used ingredient: if (n != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6057/MersenneTwister.java
Used ingredient: if (1 == n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6058/MersenneTwister.java
Used ingredient: if (k != i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6059/MersenneTwister.java
Used ingredient: if (d != n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6060/MersenneTwister.java
Used ingredient: if (y > 0)  {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6061/MersenneTwister.java
Used ingredient: if (mu > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6062/MersenneTwister.java
Used ingredient: if (x > 20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6063/MersenneTwister.java
Used ingredient: if (fp > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6064/MersenneTwister.java
Used ingredient: if (m != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6065/MersenneTwister.java
Used ingredient: if (k <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6066/MersenneTwister.java
Used ingredient: if (e <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6067/MersenneTwister.java
Used ingredient: if (g <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6068/MersenneTwister.java
Used ingredient: if (x <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6069/MersenneTwister.java
Used ingredient: if (p <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6070/MersenneTwister.java
Used ingredient: if (r <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6071/MersenneTwister.java
Used ingredient: if (v <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6072/MersenneTwister.java
Used ingredient: if (i < nh) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6073/MersenneTwister.java
Used ingredient: if (k == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6074/MersenneTwister.java
Used ingredient: if (j == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6075/MersenneTwister.java
Used ingredient: if (s != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6076/MersenneTwister.java
Used ingredient: if (d != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6077/MersenneTwister.java
Used ingredient: if (e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6078/MersenneTwister.java
Used ingredient: if (s == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6079/MersenneTwister.java
Used ingredient: if (a == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6080/MersenneTwister.java
Used ingredient: if (p == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6081/MersenneTwister.java
Used ingredient: if (r == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6082/MersenneTwister.java
Used ingredient: if (h == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6083/MersenneTwister.java
Used ingredient: if (y == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6084/MersenneTwister.java
Used ingredient: if (x == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6085/MersenneTwister.java
Used ingredient: if (q == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6086/MersenneTwister.java
Used ingredient: if (p <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6087/MersenneTwister.java
Used ingredient: if (1 == y) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6088/MersenneTwister.java
Used ingredient: if (n == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6089/MersenneTwister.java
Used ingredient: if (k == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6090/MersenneTwister.java
Used ingredient: if (n != 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6091/MersenneTwister.java
Used ingredient: if (j == l) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6092/MersenneTwister.java
Used ingredient: if (p == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6093/MersenneTwister.java
Used ingredient: if (0 == q) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6094/MersenneTwister.java
Used ingredient: if (v > hi) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6095/MersenneTwister.java
Used ingredient: if (m != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6096/MersenneTwister.java
Used ingredient: if (x != x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6097/MersenneTwister.java
Used ingredient: if (x <= m) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6098/MersenneTwister.java
Used ingredient: if (a <= b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6099/MersenneTwister.java
Used ingredient: if (u <= v) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6100/MersenneTwister.java
SuspiciousModificationPoint:                 mt[0] = mt[N - 1];
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 198
Used ingredient: mant[i] = mant[i-1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6101/MersenneTwister.java
Used ingredient: mtNext = mt[k + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6102/MersenneTwister.java
Used ingredient: p[n] = -p[n - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6103/MersenneTwister.java
Used ingredient: sc[n] = sc[n - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6104/MersenneTwister.java
Used ingredient: mant[i] = mant[i+1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6105/MersenneTwister.java
Used ingredient: f[i] = f[i - 2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6106/MersenneTwister.java
Used ingredient: yDot[0] =  y[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6107/MersenneTwister.java
Used ingredient: dot[0] = -y[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6108/MersenneTwister.java
Used ingredient: tol[m] = tol[mp1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6109/MersenneTwister.java
Used ingredient: tmp[0] = data[off + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6110/MersenneTwister.java
Used ingredient: d[i] = x[i] - x1[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6111/MersenneTwister.java
Used ingredient: ort[m] = ort[m] - g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6112/MersenneTwister.java
Used ingredient: r[pos] = r[pos - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6113/MersenneTwister.java
Used ingredient: dFdP[0] = cy - y[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6114/MersenneTwister.java
Used ingredient: f[i] = i * sum - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6115/MersenneTwister.java
Used ingredient: z[i] = y[i] - x[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6116/MersenneTwister.java
Used ingredient: arr[1] += mem[j + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6117/MersenneTwister.java
Used ingredient: e[nrt] = A[nrt][p - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6118/MersenneTwister.java
Used ingredient: first = from - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6119/MersenneTwister.java
Used ingredient: t = t - 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6120/MersenneTwister.java
Used ingredient: mu[i] = h[i] / g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6121/MersenneTwister.java
Used ingredient: in[0] = in[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6122/MersenneTwister.java
Used ingredient: t = U[i][k + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6123/MersenneTwister.java
Used ingredient: t = V[i][k + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6124/MersenneTwister.java
Used ingredient: mt = new int[N];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6125/MersenneTwister.java
Used ingredient: c[0] = 0 + 1e-5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6126/MersenneTwister.java
Used ingredient: c[0] = 2 + 1e-5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6127/MersenneTwister.java
Used ingredient: c[1] = 1 - 1e-5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6128/MersenneTwister.java
Used ingredient: c[1] = 2 - 1e-5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6129/MersenneTwister.java
Used ingredient: y[0] = cosE - e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6130/MersenneTwister.java
Used ingredient: p[0] = p[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6131/MersenneTwister.java
Used ingredient: q[0] = q[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6132/MersenneTwister.java
Used ingredient: p[0] = -p[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6133/MersenneTwister.java
Used ingredient: next = length - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6134/MersenneTwister.java
Used ingredient: dy[2] = x * dy[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6135/MersenneTwister.java
Used ingredient: yDot[0] = y[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6136/MersenneTwister.java
Used ingredient: yDot[0] = y[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6137/MersenneTwister.java
Used ingredient: arr[0] += arr[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6138/MersenneTwister.java
Used ingredient: arr[0] += mem[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6139/MersenneTwister.java
Used ingredient: result[0] = ys[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6140/MersenneTwister.java
Used ingredient: result[0] = zs[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6141/MersenneTwister.java
Used ingredient: result[1] = ys[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6142/MersenneTwister.java
Used ingredient: result[1] = zs[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6143/MersenneTwister.java
Used ingredient: f[i] = mo2 * f[i - 2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6144/MersenneTwister.java
Used ingredient: data[i] = data[i] - d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6145/MersenneTwister.java
Used ingredient: v2[i] = yDot0 - v1[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6146/MersenneTwister.java
Used ingredient: p = matrixT[k][k - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6147/MersenneTwister.java
Used ingredient: a[0] = (c + z) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6148/MersenneTwister.java
Used ingredient: ta[i][i] = main[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6149/MersenneTwister.java
Used ingredient: int mtNext = mt[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6150/MersenneTwister.java
Used ingredient: f = -sn * e[j - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6151/MersenneTwister.java
Used ingredient: top[i] = bottom[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6152/MersenneTwister.java
Used ingredient: dFdY[1][0] = b - p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6153/MersenneTwister.java
Used ingredient: double[] m1 = m[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6154/MersenneTwister.java
Used ingredient: int n0 = lastN0 << 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6155/MersenneTwister.java
Used ingredient: arr[1] += rsl[j + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6156/MersenneTwister.java
Used ingredient: arr[5] += mem[j + 5];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6157/MersenneTwister.java
Used ingredient: arr[6] += mem[j + 6];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6158/MersenneTwister.java
Used ingredient: arr[3] += mem[j + 3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6159/MersenneTwister.java
Used ingredient: arr[4] += mem[j + 4];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6160/MersenneTwister.java
Used ingredient: arr[7] += mem[j + 7];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6161/MersenneTwister.java
Used ingredient: arr[2] += mem[j + 2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6162/MersenneTwister.java
Used ingredient: ans[0] = a[0] + b[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6163/MersenneTwister.java
Used ingredient: t = -t / V[k + 1][k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6164/MersenneTwister.java
Used ingredient: ans[1] = a[1] + b[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6165/MersenneTwister.java
Used ingredient: ans[0] = a[0] * b[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6166/MersenneTwister.java
Used ingredient: facts[0] = -facts[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6167/MersenneTwister.java
Used ingredient: facts[1] = -facts[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6168/MersenneTwister.java
Used ingredient: termJ[0] += termK[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6169/MersenneTwister.java
Used ingredient: temps[0] = -temps[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6170/MersenneTwister.java
Used ingredient: temps[1] = -temps[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6171/MersenneTwister.java
Used ingredient: z = matrixP[i][iu - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6172/MersenneTwister.java
Used ingredient: z = matrixT[i][iu - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6173/MersenneTwister.java
Used ingredient: z = matrixT[iu - 1][j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6174/MersenneTwister.java
Used ingredient: tmp[2] = tmp[0] * tmp[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6175/MersenneTwister.java
Used ingredient: int i = j - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6176/MersenneTwister.java
Used ingredient: int iu = n - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6177/MersenneTwister.java
Used ingredient: int i = n - k + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6178/MersenneTwister.java
Used ingredient: x[i] = a - b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6179/MersenneTwister.java
Used ingredient: int l = idx - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6180/MersenneTwister.java
Used ingredient: int j = end - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6181/MersenneTwister.java
Used ingredient: y0[i] = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6182/MersenneTwister.java
Used ingredient: x[n - i] = a - b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6183/MersenneTwister.java
Used ingredient: int m = 2 * k - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6184/MersenneTwister.java
Used ingredient: // P0 = [ 1 1 ]
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6185/MersenneTwister.java
Used ingredient: iter = iter + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6186/MersenneTwister.java
Used ingredient: maxPoint[i] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6187/MersenneTwister.java
Used ingredient: minPoint[i] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6188/MersenneTwister.java
Used ingredient: function[0] = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6189/MersenneTwister.java
Used ingredient: dfwg += num - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6190/MersenneTwister.java
Used ingredient: t = t + 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6191/MersenneTwister.java
Used ingredient: mp1 = m + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6192/MersenneTwister.java
Used ingredient: m = m >> 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6193/MersenneTwister.java
Used ingredient: y[0] =  1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6194/MersenneTwister.java
Used ingredient: f[n - 1] = prod - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6195/MersenneTwister.java
Used ingredient: ipt = jpt + tmp1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6196/MersenneTwister.java
Used ingredient: y[i] = c * y0[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6197/MersenneTwister.java
Used ingredient: f[0] = inv * sin;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6198/MersenneTwister.java
Used ingredient: jpt = ipt - n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6199/MersenneTwister.java
Used ingredient: d[j] = td * w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6200/MersenneTwister.java
SuspiciousModificationPoint:                 i = 1;
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 199
Used ingredient: r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6201/MersenneTwister.java
Used ingredient: q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6202/MersenneTwister.java
Used ingredient: inc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6203/MersenneTwister.java
Used ingredient: i - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6204/MersenneTwister.java
Used ingredient: s = s1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6205/MersenneTwister.java
Used ingredient: dx = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6206/MersenneTwister.java
Used ingredient: i += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6207/MersenneTwister.java
Used ingredient: ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6208/MersenneTwister.java
Used ingredient: min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6209/MersenneTwister.java
Used ingredient: inc = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6210/MersenneTwister.java
Used ingredient: ix >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6211/MersenneTwister.java
Used ingredient: sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6212/MersenneTwister.java
Used ingredient: i = pos1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6213/MersenneTwister.java
Used ingredient: t = 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6214/MersenneTwister.java
Used ingredient: t = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6215/MersenneTwister.java
Used ingredient: s = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6216/MersenneTwister.java
Used ingredient: v = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6217/MersenneTwister.java
Used ingredient: t = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6218/MersenneTwister.java
Used ingredient: d = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6219/MersenneTwister.java
Used ingredient: x = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6220/MersenneTwister.java
Used ingredient: l = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6221/MersenneTwister.java
Used ingredient: n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6222/MersenneTwister.java
Used ingredient: a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6223/MersenneTwister.java
Used ingredient: x = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6224/MersenneTwister.java
Used ingredient: p = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6225/MersenneTwister.java
Used ingredient: z = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6226/MersenneTwister.java
Used ingredient: q = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6227/MersenneTwister.java
Used ingredient: j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6228/MersenneTwister.java
Used ingredient: w = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6229/MersenneTwister.java
Used ingredient: a = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6230/MersenneTwister.java
Used ingredient: b = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6231/MersenneTwister.java
Used ingredient: x = 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6232/MersenneTwister.java
Used ingredient: x = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6233/MersenneTwister.java
Used ingredient: r = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6234/MersenneTwister.java
Used ingredient: k = j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6235/MersenneTwister.java
Used ingredient: e = d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6236/MersenneTwister.java
Used ingredient: s = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6237/MersenneTwister.java
Used ingredient: s = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6238/MersenneTwister.java
Used ingredient: a = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6239/MersenneTwister.java
Used ingredient: x = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6240/MersenneTwister.java
Used ingredient: a = b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6241/MersenneTwister.java
Used ingredient: a = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6242/MersenneTwister.java
Used ingredient: c = a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6243/MersenneTwister.java
Used ingredient: w = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6244/MersenneTwister.java
Used ingredient: b = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6245/MersenneTwister.java
Used ingredient: v = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6246/MersenneTwister.java
Used ingredient: u = v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6247/MersenneTwister.java
Used ingredient: z = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6248/MersenneTwister.java
Used ingredient: v = w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6249/MersenneTwister.java
Used ingredient: z = w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6250/MersenneTwister.java
Used ingredient: b = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6251/MersenneTwister.java
Used ingredient: mti = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6252/MersenneTwister.java
Used ingredient: min = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6253/MersenneTwister.java
Used ingredient: f0 = f1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6254/MersenneTwister.java
Used ingredient: z = -10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6255/MersenneTwister.java
Used ingredient: x0 = x1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6256/MersenneTwister.java
Used ingredient: pmc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6257/MersenneTwister.java
Used ingredient: r0 = r1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6258/MersenneTwister.java
Used ingredient: a0 = a1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6259/MersenneTwister.java
Used ingredient: p0 = p1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6260/MersenneTwister.java
Used ingredient: y0 = y1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6261/MersenneTwister.java
Used ingredient: q0 = q1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6262/MersenneTwister.java
Used ingredient: min = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6263/MersenneTwister.java
Used ingredient: min = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6264/MersenneTwister.java
Used ingredient: k >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6265/MersenneTwister.java
Used ingredient: p >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6266/MersenneTwister.java
Used ingredient: s = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6267/MersenneTwister.java
Used ingredient: a = 1.2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6268/MersenneTwister.java
Used ingredient: p2 = p1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6269/MersenneTwister.java
Used ingredient: idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6270/MersenneTwister.java
Used ingredient: hi = xC;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6271/MersenneTwister.java
Used ingredient: iu -= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6272/MersenneTwister.java
Used ingredient: int t = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6273/MersenneTwister.java
Used ingredient: iact = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6274/MersenneTwister.java
Used ingredient: int i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6275/MersenneTwister.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6276/MersenneTwister.java
Used ingredient: int n = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6277/MersenneTwister.java
Used ingredient: int p = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6278/MersenneTwister.java
Used ingredient: int r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6279/MersenneTwister.java
Used ingredient: int c = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6280/MersenneTwister.java
Used ingredient: int q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6281/MersenneTwister.java
Used ingredient: sign = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6282/MersenneTwister.java
Used ingredient: isav = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6283/MersenneTwister.java
Used ingredient: iflag = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6284/MersenneTwister.java
Used ingredient: sign = +1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6285/MersenneTwister.java
Used ingredient: t0 = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6286/MersenneTwister.java
Used ingredient: m = -m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6287/MersenneTwister.java
Used ingredient: f = -f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6288/MersenneTwister.java
Used ingredient: md = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6289/MersenneTwister.java
Used ingredient: u = -t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6290/MersenneTwister.java
Used ingredient: x = -x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6291/MersenneTwister.java
Used ingredient: v *= t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6292/MersenneTwister.java
Used ingredient: k = -m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6293/MersenneTwister.java
Used ingredient: e = -e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6294/MersenneTwister.java
Used ingredient: s = -s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6295/MersenneTwister.java
Used ingredient: h = -h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6296/MersenneTwister.java
Used ingredient: y = -3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6297/MersenneTwister.java
Used ingredient: a = -a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6298/MersenneTwister.java
Used ingredient: u = -u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6299/MersenneTwister.java
Used ingredient: b = -b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6300/MersenneTwister.java
SuspiciousModificationPoint:         mt[0] = 0x80000000; // MSB is 1; assuring non-zero initial array
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 203
Used ingredient: *   // cross derivatives (assuming order was at least 2)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6301/MersenneTwister.java
Used ingredient: 1000000, // Triangle integrals are very slow to converge
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6302/MersenneTwister.java
Used ingredient: // set up two interpolators sharing the integrator arrays
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6303/MersenneTwister.java
Used ingredient: *  10000 digit is always non-zero.  Instead, we support "gradual underflow"
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6304/MersenneTwister.java
Used ingredient: * MATH-803: it is not sufficient to loop through non zero entries of
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6305/MersenneTwister.java
Used ingredient: // store the matrix in row major order as a single dimension array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6306/MersenneTwister.java
Used ingredient: *  10000 system is merely an encoding of a radix 10 system.</p>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6307/MersenneTwister.java
Used ingredient: // set up an interpolator sharing the integrator arrays
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6308/MersenneTwister.java
Used ingredient: * instance in order to initialize the internal arrays. This
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6309/MersenneTwister.java
Used ingredient: } else { // Augment design matrix with initial unitary column
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6310/MersenneTwister.java
Used ingredient: * and the initial data values in double[] initialDoubleArray.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6311/MersenneTwister.java
Used ingredient: * @param x a series of observations on the independent variables
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6312/MersenneTwister.java
Used ingredient: * Base class for implementing optimizers for multivariate scalar
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6313/MersenneTwister.java
Used ingredient: * This class is a gaussian normalized random generator for scalars.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6314/MersenneTwister.java
Used ingredient: * This method should only be used to avoid copying the internal array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6315/MersenneTwister.java
Used ingredient: for (int i = 0; i < 5; i++) { // loop through individual samlpes.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6316/MersenneTwister.java
Used ingredient: * Note that there is a non-zero (but very small) probability that
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6317/MersenneTwister.java
Used ingredient: * matrix, or if it cannot be transformed into an orthogonal matrix
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6318/MersenneTwister.java
Used ingredient: * may be used by the step handler to initialize some internal data
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6319/MersenneTwister.java
Used ingredient: * has nothing to do with the length of the internal storage array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6320/MersenneTwister.java
Used ingredient: r = r + product[i+j] + rh;  // add to the product digit with carry in
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6321/MersenneTwister.java
Used ingredient: final int len = 10;        // length of values array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6322/MersenneTwister.java
Used ingredient: final int offset = 4;  // Starting offset into Striped
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6323/MersenneTwister.java
Used ingredient: // Test remove single observation in array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6324/MersenneTwister.java
Used ingredient: /** Set the state by copying the internal arrays.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6325/MersenneTwister.java
Used ingredient: * @return a list of NaN positions in the input array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6326/MersenneTwister.java
Used ingredient: * Get a copy of the interpolating polynomials array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6327/MersenneTwister.java
Used ingredient: * count[0] = number of calls to initializationPerformed
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6328/MersenneTwister.java
Used ingredient: // [x0, x2] is the bracketing interval in each iteration
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6329/MersenneTwister.java
Used ingredient: // Use the first entry where both are non-zero as scalar
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6330/MersenneTwister.java
Used ingredient: *  <li>  if x is NaN and y is not zero then result is NaN
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6331/MersenneTwister.java
Used ingredient: * @param xOffset offset of the second operand in its array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6332/MersenneTwister.java
Used ingredient: // or a decreasing event, we remain in uninitialized state
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6333/MersenneTwister.java
Used ingredient: * Returns the maximum of the entries in the input array, or
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6334/MersenneTwister.java
Used ingredient: // Back transformation to get eigenvectors of original matrix
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6335/MersenneTwister.java
Used ingredient: // If there is a minus sign in the number then it is negative
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6336/MersenneTwister.java
Used ingredient: // This test fails (throwing "ConvergenceException" instead).
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6337/MersenneTwister.java
Used ingredient: * called before using the instance in order to initialize the
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6338/MersenneTwister.java
Used ingredient: // Best point encountered so far (which is the initial guess).
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6339/MersenneTwister.java
Used ingredient: // Construct a distribution and initialize its internal random
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6340/MersenneTwister.java
Used ingredient: // x0, x1, x2 and x is the zero of the interpolating parabola.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6341/MersenneTwister.java
Used ingredient: // Verify that GLS is on average more efficient, lower variance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6342/MersenneTwister.java
Used ingredient: * negative if it is on the minus side, according to its natural
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6343/MersenneTwister.java
Used ingredient: * @return the value of the statistic applied to the input array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6344/MersenneTwister.java
Used ingredient: /** Build a Runge-Kutta integrator with the given Butcher array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6345/MersenneTwister.java
Used ingredient: int i = 0; // Should be 1, be we iterate before it in while using 0
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6346/MersenneTwister.java
Used ingredient: // this is an implementation of definition 3 in Dan Kalman's paper.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6347/MersenneTwister.java
Used ingredient: // this is an implementation of definition 6 in Dan Kalman's paper.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6348/MersenneTwister.java
Used ingredient: rg.setSeed(200);  // Seed has been selected to generate non-trivial covariance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6349/MersenneTwister.java
Used ingredient: * Calculates the cov matrix assuming only the first nreq variables are
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6350/MersenneTwister.java
Used ingredient: // 63 bits per element because there is no unsigned long in Java)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6351/MersenneTwister.java
Used ingredient: * is assumed, though not checked, to be in lower triangular form.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6352/MersenneTwister.java
Used ingredient: * is assumed, though not checked, to be in upper triangular form.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6353/MersenneTwister.java
Used ingredient: * in getting the solution of an ordinary differential equation at
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6354/MersenneTwister.java
Used ingredient: // the vectors u1 and u2 are nearly but not exactly anti-parallel
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6355/MersenneTwister.java
Used ingredient: *           Chicago, as Operator of Argonne National Laboratory.}
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6356/MersenneTwister.java
Used ingredient: *       set to -1.0, 0.0, or 1.0, the value being nonzero if and only if the
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6357/MersenneTwister.java
Used ingredient: * before using the instance in order to initialize the internal arrays. This
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6358/MersenneTwister.java
Used ingredient: * initial bracket and 5 to 10 iterations for distant initial bracket
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6359/MersenneTwister.java
Used ingredient: *  10000, so that requirement is not met, but  it is possible that a
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6360/MersenneTwister.java
Used ingredient: * only be used in cases where copying the internal array is not practical.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6361/MersenneTwister.java
Used ingredient: *  such that a = (x+1)/(x-1).   This is easily solved to find that
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6362/MersenneTwister.java
Used ingredient: * Get the -1 times the sum of all coefficients in the given array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6363/MersenneTwister.java
Used ingredient: /** Creates a new random number generator using an int array seed.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6364/MersenneTwister.java
Used ingredient: * open loop consisting of a single infinite line will therefore be
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6365/MersenneTwister.java
Used ingredient: * <p>Note that since this class is only intended for internal use,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6366/MersenneTwister.java
Used ingredient: // function: It is a triangular periodic function with amplitude 3
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6367/MersenneTwister.java
Used ingredient: for (int i = 0; i < 100; i++) { // make sure no convergence exception
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6368/MersenneTwister.java
Used ingredient: for (int i = 0; i < 1e5; i++) { // make sure no convergence exception
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6369/MersenneTwister.java
Used ingredient: /** Apply the inverse of the rotation to a vector stored in an array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6370/MersenneTwister.java
Used ingredient: *     <li>the weights array contains one or more infinite values</li>
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6371/MersenneTwister.java
Used ingredient: *       If XOPT is nonzero, BOBYQB will change it to its usual value later.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6372/MersenneTwister.java
Used ingredient: int pos = 1;  // position in sorted array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6373/MersenneTwister.java
Used ingredient: final int maxEval = 10000; // Trying hard to fit.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6374/MersenneTwister.java
Used ingredient: final int numObs = 100; // XXX Should be a command-line option.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6375/MersenneTwister.java
Used ingredient: if (x == 0.0) { // Matches +/- 0.0; return correct sign
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6376/MersenneTwister.java
Used ingredient: if (xa == 0.0) { // Matches +/- 0.0; return correct sign
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6377/MersenneTwister.java
Used ingredient: qrtMinor[minor] -= a; // now |v|^2 = -2a*(qr[minor][minor])
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6378/MersenneTwister.java
Used ingredient: for (int i = 0; i < crossoverPoints; i++, remainingPoints--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6379/MersenneTwister.java
Used ingredient: for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6380/MersenneTwister.java
Used ingredient: if (ra == 0) { // Fix up the sign so atan works correctly
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6381/MersenneTwister.java
Used ingredient: // than 2^31); as it covers more than half the integer range,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6382/MersenneTwister.java
Used ingredient: mu = lambda / 2; // number of parents/points for recombination
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6383/MersenneTwister.java
Used ingredient: // the element is somewhere in the small sub-array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6384/MersenneTwister.java
Used ingredient: * Returns the "start index" of the internal array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6385/MersenneTwister.java
Used ingredient: * @param n number of points to consider in the array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6386/MersenneTwister.java
Used ingredient: * Returns matrix entries as a two-dimensional array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6387/MersenneTwister.java
Used ingredient: // Compute initial estimate using definitional formula
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6388/MersenneTwister.java
Used ingredient: * @param offset4 offset of fourth operand in its array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6389/MersenneTwister.java
Used ingredient: * Returns the highest value with non-zero probability.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6390/MersenneTwister.java
Used ingredient: * @return the highest value with non-zero probability.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6391/MersenneTwister.java
Used ingredient: /** Get the index of a partial derivative in an array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6392/MersenneTwister.java
Used ingredient: // store the column in a global single dimension array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6393/MersenneTwister.java
Used ingredient: * @param offset2 offset of second operand in its array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6394/MersenneTwister.java
Used ingredient: /** Compile the function composition indirection array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6395/MersenneTwister.java
Used ingredient: /** Get the index of a partial derivative in the array.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6396/MersenneTwister.java
Used ingredient: // [x1, x2] is the bracketing interval in each iteration
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6397/MersenneTwister.java
Used ingredient: * and split[0] has its 30 least significant bits as zero.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6398/MersenneTwister.java
Used ingredient: * @param yOffset offset of the first operand in its array
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6399/MersenneTwister.java
Used ingredient: // and fill valuesList with values from values array with
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6400/MersenneTwister.java
SuspiciousModificationPoint:         clear(); // Clear normal deviate cache
At: MersenneTwister.java org.apache.commons.math3.random.MersenneTwister
Line number: 205
Used ingredient: clear();  // Clear normal deviate cache
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6401/MersenneTwister.java
Used ingredient: *   using Uniform deviates, as described
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6402/MersenneTwister.java
Used ingredient: * using Uniform deviates, as described
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6403/MersenneTwister.java
Used ingredient: // we are really in the case n >= 128
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6404/MersenneTwister.java
Used ingredient: // we are really in the case n >= 1024
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6405/MersenneTwister.java
Used ingredient: // we are really in the case n <= -127
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6406/MersenneTwister.java
Used ingredient: // Perform the task indicated by kase.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6407/MersenneTwister.java
Used ingredient: // atomically save the cache
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6408/MersenneTwister.java
Used ingredient: // we are really in the case n <= -1023
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6409/MersenneTwister.java
Used ingredient: // Calculate next normalized step time.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6410/MersenneTwister.java
Used ingredient: super(null); // No convergence checker.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6411/MersenneTwister.java
Used ingredient: .scalarMultiply(ccov1); // rank one update
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6412/MersenneTwister.java
Used ingredient: // the number is in the small cache
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6413/MersenneTwister.java
Used ingredient: // Check residual variance consistency
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6414/MersenneTwister.java
Used ingredient: // check and set learning rate negccov
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6415/MersenneTwister.java
Used ingredient: /** Merge a leaf node and a tree node.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6416/MersenneTwister.java
Used ingredient: return ZERO; // normalize zero.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6417/MersenneTwister.java
Used ingredient: * @param f the real array to be scaled
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6418/MersenneTwister.java
Used ingredient: * @return the normalized chi-square.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6419/MersenneTwister.java
Used ingredient: * @param values array of deviates
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6420/MersenneTwister.java
Used ingredient: * @param normal normal direction to the plane
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6421/MersenneTwister.java
Used ingredient: * @param mode step normalizer mode to use
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6422/MersenneTwister.java
Used ingredient: // r (Vector3D.plusK) coordinates are :
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6423/MersenneTwister.java
Used ingredient: // r (Vector3D.plusJ) coordinates are :
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6424/MersenneTwister.java
Used ingredient: // r (Vector3D.plusI) coordinates are :
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6425/MersenneTwister.java
Used ingredient: /** Compute arc sine of a derivative structure.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6426/MersenneTwister.java
Used ingredient: // compute and ignore interpolated state
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6427/MersenneTwister.java
Used ingredient: // Partial derivatives with respect to y
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6428/MersenneTwister.java
Used ingredient: // Partial derivatives with respect to x
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6429/MersenneTwister.java
Used ingredient: // Partial derivatives with respect to z
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6430/MersenneTwister.java
Used ingredient: // Partial derivative wrt radius.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6431/MersenneTwister.java
Used ingredient: // |v| larger: t negative (replace v)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6432/MersenneTwister.java
Used ingredient: // Partial derivatives wrt x and wrt y
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6433/MersenneTwister.java
Used ingredient: // Partial derivative wrt "a".
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6434/MersenneTwister.java
Used ingredient: * @return normalized normal vector
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6435/MersenneTwister.java
Used ingredient: // Record deviations from "true" beta
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6436/MersenneTwister.java
Used ingredient: * @return normalized direction vector
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6437/MersenneTwister.java
Used ingredient: // create a matrix of the correct size
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6438/MersenneTwister.java
Used ingredient: // Partial derivatives wrt y and wrt z
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6439/MersenneTwister.java
Used ingredient: // Partial derivatives wrt x and wrt z
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6440/MersenneTwister.java
Used ingredient: // Create an array to hold all values
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6441/MersenneTwister.java
Used ingredient: /** Apply a transform to the instance.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6442/MersenneTwister.java
Used ingredient: // populate bin and create component
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6443/MersenneTwister.java
Used ingredient: /** Get the normalized normal vector.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6444/MersenneTwister.java
Used ingredient: // Sleep to simulate computation time.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6445/MersenneTwister.java
Used ingredient: // Cross partial derivatives
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6446/MersenneTwister.java
Used ingredient: // Perform an inside contraction.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6447/MersenneTwister.java
Used ingredient: // Perform an outside contraction.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6448/MersenneTwister.java
Used ingredient: * @param norm Normalization factor.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6449/MersenneTwister.java
Used ingredient: .add(roneu) // plus rank one update
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6450/MersenneTwister.java
Used ingredient: // Check the arguments somewhat here
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6451/MersenneTwister.java
Used ingredient: // project the error covariance ahead
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6452/MersenneTwister.java
Used ingredient: // Compute mean and standard deviation
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6453/MersenneTwister.java
Used ingredient: // Case : analytic test case
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6454/MersenneTwister.java
Used ingredient: * @param x array holding the base
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6455/MersenneTwister.java
Used ingredient: * Add a polynomial to the instance.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6456/MersenneTwister.java
Used ingredient: // extract the vertices of the facet
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6457/MersenneTwister.java
Used ingredient: // iterate over several substep sizes
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6458/MersenneTwister.java
Used ingredient: * @param phi polar (co-latitude) angle
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6459/MersenneTwister.java
Used ingredient: // Check some special cases
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6460/MersenneTwister.java
Used ingredient: // extract partial derivative
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6461/MersenneTwister.java
Used ingredient: * @return a new normalized vector
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6462/MersenneTwister.java
Used ingredient: // Compute new covariance matrices
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6463/MersenneTwister.java
Used ingredient: * @return a normalized quaternion.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6464/MersenneTwister.java
Used ingredient: return Double.NaN; //not enough data
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6465/MersenneTwister.java
Used ingredient: * @param values double array to search
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6466/MersenneTwister.java
Used ingredient: private final RealMatrix cachedU;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6467/MersenneTwister.java
Used ingredient: private final RealMatrix cachedV;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6468/MersenneTwister.java
Used ingredient: // Index 2 = normalized chi2
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6469/MersenneTwister.java
Used ingredient: .add(roneu) // regard old matrix
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6470/MersenneTwister.java
Used ingredient: // Convergence has been reached.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6471/MersenneTwister.java
Used ingredient: class StorelessBivariateCovariance {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6472/MersenneTwister.java
Used ingredient: createVector(0, 0, 0, 3).normalize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6473/MersenneTwister.java
Used ingredient: * @return a part of the deviance.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6474/MersenneTwister.java
Used ingredient: * Clears all data from the model.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6475/MersenneTwister.java
Used ingredient: * @param value the value to be hashed
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6476/MersenneTwister.java
Used ingredient: double dev = cachedNormalDeviate;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6477/MersenneTwister.java
Used ingredient: cachedNormalDeviate = Double.NaN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6478/MersenneTwister.java
Used ingredient: rh = 1;  // carry in to aid the subtraction
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6479/MersenneTwister.java
Used ingredient: * @return normalized first canonical vector
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6480/MersenneTwister.java
Used ingredient: /** Compute sine of a derivative structure.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6481/MersenneTwister.java
Used ingredient: * @param sample array of sample data values
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6482/MersenneTwister.java
Used ingredient: // iterate over every item in the parents
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6483/MersenneTwister.java
Used ingredient: // Try to obtain the rule from the cache.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6484/MersenneTwister.java
Used ingredient: * @return the lower bound of the bracket.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6485/MersenneTwister.java
Used ingredient: * @param f the complex array to be scaled
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6486/MersenneTwister.java
Used ingredient: if (!Double.isNaN(cachedNormalDeviate)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6487/MersenneTwister.java
Used ingredient: continue; // exclude integrals outside domain.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6488/MersenneTwister.java
Used ingredient: // normal case, we are finite, non-zero
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6489/MersenneTwister.java
Used ingredient: // iterate until convergence is reached
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6490/MersenneTwister.java
Used ingredient: // Solve individual roots successively.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6491/MersenneTwister.java
Used ingredient: * @return the solver absolute accuracy.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6492/MersenneTwister.java
Used ingredient: // Verify that OLS estimates are better
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6493/MersenneTwister.java
Used ingredient: * @param order maximum derivation order
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6494/MersenneTwister.java
Used ingredient: // store linear problem characteristics
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6495/MersenneTwister.java
Used ingredient: * @param covariance Covariance instance
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6496/MersenneTwister.java
Used ingredient: * @param a lower bound of the interval.
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6497/MersenneTwister.java
Used ingredient: // check the mean an standard deviation
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6498/MersenneTwister.java
Used ingredient: private final NodesCleaner nodeCleaner;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6499/MersenneTwister.java
Used ingredient: /** The step normalizer mode to use. */
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6500/MersenneTwister.java
SuspiciousModificationPoint:         return radixDigits;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 251
Used ingredient: return gradients;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6501/DfpField.java
Used ingredient: return coordinates;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6502/DfpField.java
Used ingredient: return constraints;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6503/DfpField.java
Used ingredient: return probability;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6504/DfpField.java
Used ingredient: return gradient;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6505/DfpField.java
Used ingredient: return lostdigit;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6506/DfpField.java
Used ingredient: return originOffset;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6507/DfpField.java
Used ingredient: return derivatives;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6508/DfpField.java
Used ingredient: return storedData;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6509/DfpField.java
Used ingredient: return candidate;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6510/DfpField.java
Used ingredient: return initialStep;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6511/DfpField.java
Used ingredient: return randomStart;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6512/DfpField.java
Used ingredient: * @return radius r
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6513/DfpField.java
Used ingredient: return iterations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6514/DfpField.java
Used ingredient: return magnitude;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6515/DfpField.java
Used ingredient: return parameters;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6516/DfpField.java
Used ingredient: return isInfinite;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6517/DfpField.java
Used ingredient: return next(bits);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6518/DfpField.java
Used ingredient: return divisor;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6519/DfpField.java
Used ingredient: return origin;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6520/DfpField.java
Used ingredient: return remainingRegion;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6521/DfpField.java
Used ingredient: return circlePoints;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6522/DfpField.java
Used ingredient: return coefficients;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6523/DfpField.java
Used ingredient: return observations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6524/DfpField.java
Used ingredient: return relationship;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6525/DfpField.java
Used ingredient: return field.getRadixDigits();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6526/DfpField.java
Used ingredient: return maximalCount;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6527/DfpField.java
Used ingredient: return distribution;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6528/DfpField.java
Used ingredient: return roundingMode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6529/DfpField.java
Used ingredient: return add(this, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6530/DfpField.java
Used ingredient: return this.fitness;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6531/DfpField.java
Used ingredient: return gradientVector;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6532/DfpField.java
Used ingredient: return probability(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6533/DfpField.java
Used ingredient: return missingEntries;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6534/DfpField.java
Used ingredient: return normalized;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6535/DfpField.java
Used ingredient: return denominator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6536/DfpField.java
Used ingredient: return realFormat;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6537/DfpField.java
Used ingredient: return determinant;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6538/DfpField.java
Used ingredient: return wholeFormat;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6539/DfpField.java
Used ingredient: return correlated;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6540/DfpField.java
Used ingredient: return virtualSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6541/DfpField.java
Used ingredient: return delegate;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6542/DfpField.java
Used ingredient: return discarded;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6543/DfpField.java
Used ingredient: return data.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6544/DfpField.java
Used ingredient: return dataset;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6545/DfpField.java
Used ingredient: return cachedPt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6546/DfpField.java
Used ingredient: return cachedUt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6547/DfpField.java
Used ingredient: return cachedVt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6548/DfpField.java
Used ingredient: return cachedQt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6549/DfpField.java
Used ingredient: return data[index];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6550/DfpField.java
Used ingredient: return cachedD;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6551/DfpField.java
Used ingredient: return initialTime;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6552/DfpField.java
Used ingredient: return nanStrategy;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6553/DfpField.java
Used ingredient: return numerator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6554/DfpField.java
Used ingredient: return searchStart;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6555/DfpField.java
Used ingredient: return modeList;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6556/DfpField.java
Used ingredient: return generated;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6557/DfpField.java
Used ingredient: return searchMax;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6558/DfpField.java
Used ingredient: return operate(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6559/DfpField.java
Used ingredient: return evaluations;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6560/DfpField.java
Used ingredient: return transformer;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6561/DfpField.java
Used ingredient: return format;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6562/DfpField.java
Used ingredient: return indices;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6563/DfpField.java
Used ingredient: return direction;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6564/DfpField.java
Used ingredient: return sampleStats;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6565/DfpField.java
Used ingredient: return transformed;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6566/DfpField.java
Used ingredient: return direct;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6567/DfpField.java
Used ingredient: return p.divide(q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6568/DfpField.java
Used ingredient: return initial;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6569/DfpField.java
Used ingredient: return nbPoints;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6570/DfpField.java
Used ingredient: return imaginary;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6571/DfpField.java
Used ingredient: return numTrials;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6572/DfpField.java
Used ingredient: return generator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6573/DfpField.java
Used ingredient: return testPoints;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6574/DfpField.java
Used ingredient: return getPoint(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6575/DfpField.java
Used ingredient: return stringValue;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6576/DfpField.java
Used ingredient: return entries;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6577/DfpField.java
Used ingredient: return forward;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6578/DfpField.java
Used ingredient: return binStats;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6579/DfpField.java
Used ingredient: return incoming;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6580/DfpField.java
Used ingredient: return quantiles;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6581/DfpField.java
Used ingredient: return separator;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6582/DfpField.java
Used ingredient: return residuals;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6583/DfpField.java
Used ingredient: return neighbors;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6584/DfpField.java
Used ingredient: return dotProduct;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6585/DfpField.java
Used ingredient: return boundaries;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6586/DfpField.java
Used ingredient: return returnRanks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6587/DfpField.java
Used ingredient: return a << shift;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6588/DfpField.java
Used ingredient: return weight;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6589/DfpField.java
Used ingredient: return target;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6590/DfpField.java
Used ingredient: return argument;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6591/DfpField.java
Used ingredient: return capacity;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6592/DfpField.java
Used ingredient: return repaired;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6593/DfpField.java
Used ingredient: return maxGrowth;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6594/DfpField.java
Used ingredient: return dimension;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6595/DfpField.java
Used ingredient: return attribute;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6596/DfpField.java
Used ingredient: return ieeeFlags;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6597/DfpField.java
Used ingredient: return rowPrefix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6598/DfpField.java
Used ingredient: return startIndex;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6599/DfpField.java
Used ingredient: return getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6600/DfpField.java
SuspiciousModificationPoint:         return rMode;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 269
Used ingredient: return order;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6601/DfpField.java
Used ingredient: return modes;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6602/DfpField.java
Used ingredient: return node;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6603/DfpField.java
Used ingredient: return model;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6604/DfpField.java
Used ingredient: return mode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6605/DfpField.java
Used ingredient: return loaded;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6606/DfpField.java
Used ingredient: return ratio;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6607/DfpField.java
Used ingredient: return rand;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6608/DfpField.java
Used ingredient: return randn;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6609/DfpField.java
Used ingredient: return trace;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6610/DfpField.java
Used ingredient: return real;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6611/DfpField.java
Used ingredient: return ret;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6612/DfpField.java
Used ingredient: return index;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6613/DfpField.java
Used ingredient: return lores;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6614/DfpField.java
Used ingredient: return root;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6615/DfpField.java
Used ingredient: return -res;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6616/DfpField.java
Used ingredient: return sqrtM;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6617/DfpField.java
Used ingredient: return res;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6618/DfpField.java
Used ingredient: return rows;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6619/DfpField.java
Used ingredient: return omega;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6620/DfpField.java
Used ingredient: return rnorm;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6621/DfpField.java
Used ingredient: return tree;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6622/DfpField.java
Used ingredient: return dev;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6623/DfpField.java
Used ingredient: return error;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6624/DfpField.java
Used ingredient: return true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6625/DfpField.java
Used ingredient: return rule;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6626/DfpField.java
Used ingredient: return def;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6627/DfpField.java
Used ingredient: return zero;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6628/DfpField.java
Used ingredient: return lower;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6629/DfpField.java
Used ingredient: return repr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6630/DfpField.java
Used ingredient: return found;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6631/DfpField.java
Used ingredient: return fMid;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6632/DfpField.java
Used ingredient: return cloud;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6633/DfpField.java
Used ingredient: return row;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6634/DfpField.java
Used ingredient: return coeff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6635/DfpField.java
Used ingredient: return one;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6636/DfpField.java
Used ingredient: return product;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6637/DfpField.java
Used ingredient: return crossed;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6638/DfpField.java
Used ingredient: return problem;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6639/DfpField.java
Used ingredient: return direct;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6640/DfpField.java
Used ingredient: return target;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6641/DfpField.java
Used ingredient: return region;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6642/DfpField.java
Used ingredient: return random;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6643/DfpField.java
Used ingredient: return prefix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6644/DfpField.java
Used ingredient: return sorted;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6645/DfpField.java
Used ingredient: return stdDev;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6646/DfpField.java
Used ingredient: return errors;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6647/DfpField.java
Used ingredient: return parent;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6648/DfpField.java
Used ingredient: return result;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6649/DfpField.java
Used ingredient: return merged;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6650/DfpField.java
Used ingredient: return method;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6651/DfpField.java
Used ingredient: return source;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6652/DfpField.java
Used ingredient: return offset;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6653/DfpField.java
Used ingredient: return second;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6654/DfpField.java
Used ingredient: return middle;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6655/DfpField.java
Used ingredient: return copied;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6656/DfpField.java
Used ingredient: return coeffs;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6657/DfpField.java
Used ingredient: return dist;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6658/DfpField.java
Used ingredient: return arity;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6659/DfpField.java
Used ingredient: return rList;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6660/DfpField.java
Used ingredient: return ranks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6661/DfpField.java
Used ingredient: return data;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6662/DfpField.java
Used ingredient: return extra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6663/DfpField.java
Used ingredient: return image;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6664/DfpField.java
Used ingredient: return facet;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6665/DfpField.java
Used ingredient: return array;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6666/DfpField.java
Used ingredient: return point;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6667/DfpField.java
Used ingredient: return sort;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6668/DfpField.java
Used ingredient: return nextX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6669/DfpField.java
Used ingredient: return start;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6670/DfpField.java
Used ingredient: return begin;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6671/DfpField.java
Used ingredient: return dot;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6672/DfpField.java
Used ingredient: return first;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6673/DfpField.java
Used ingredient: return sizes;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6674/DfpField.java
Used ingredient: return false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6675/DfpField.java
Used ingredient: return pFrac;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6676/DfpField.java
Used ingredient: return dim;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6677/DfpField.java
Used ingredient: return steps;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6678/DfpField.java
Used ingredient: return kurt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6679/DfpField.java
Used ingredient: return sqrt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6680/DfpField.java
Used ingredient: return rank;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6681/DfpField.java
Used ingredient: return dx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6682/DfpField.java
Used ingredient: return ds;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6683/DfpField.java
Used ingredient: return norm;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6684/DfpField.java
Used ingredient: return beta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6685/DfpField.java
Used ingredient: return theta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6686/DfpField.java
Used ingredient: return scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6687/DfpField.java
Used ingredient: return value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6688/DfpField.java
Used ingredient: return goal;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6689/DfpField.java
Used ingredient: return line1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6690/DfpField.java
Used ingredient: return est;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6691/DfpField.java
Used ingredient: return var;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6692/DfpField.java
Used ingredient: return time;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6693/DfpField.java
Used ingredient: return mean;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6694/DfpField.java
Used ingredient: return name;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6695/DfpField.java
Used ingredient: return best;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6696/DfpField.java
Used ingredient: return line;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6697/DfpField.java
Used ingredient: return size;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6698/DfpField.java
Used ingredient: return leaf;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6699/DfpField.java
Used ingredient: return field;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6700/DfpField.java
SuspiciousModificationPoint:         ieeeFlags |= bits & (FLAG_INVALID | FLAG_DIV_ZERO | FLAG_OVERFLOW | FLAG_UNDERFLOW | FLAG_INEXACT);
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 331
Used ingredient: ieeeFlags = flags & (FLAG_INVALID | FLAG_DIV_ZERO | FLAG_OVERFLOW | FLAG_UNDERFLOW | FLAG_INEXACT);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6701/DfpField.java
Used ingredient: DfpField.FLAG_OVERFLOW|DfpField.FLAG_INEXACT, "Next After #14");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6702/DfpField.java
Used ingredient: DfpField.FLAG_UNDERFLOW|DfpField.FLAG_INEXACT, "Next After #13");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6703/DfpField.java
Used ingredient: DfpField.FLAG_UNDERFLOW|DfpField.FLAG_INEXACT, "Next After #12");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6704/DfpField.java
Used ingredient: DfpField.FLAG_INVALID|DfpField.FLAG_INEXACT, "sin #1");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6705/DfpField.java
Used ingredient: DfpField.FLAG_INVALID|DfpField.FLAG_INEXACT, "sin #2");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6706/DfpField.java
Used ingredient: DfpField.FLAG_INVALID|DfpField.FLAG_INEXACT, "pow #87");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6707/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_INVALID, DIVIDE_TRAP, result, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6708/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_INVALID, DIVIDE_TRAP, divisor, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6709/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_DIV_ZERO, DIVIDE_TRAP, getZero(), result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6710/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_INVALID, MULTIPLY_TRAP, x, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6711/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_DIV_ZERO, DIVIDE_TRAP, divisor, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6712/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_INVALID, MULTIPLY_TRAP, result, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6713/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_INVALID, MULTIPLY_TRAP, newInstance(getZero()), result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6714/DfpField.java
Used ingredient: getField().setIEEEFlagsBits(DfpField.FLAG_UNDERFLOW);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6715/DfpField.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6716/DfpField.java
Used ingredient: field.setIEEEFlagsBits(DfpField.FLAG_UNDERFLOW);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6717/DfpField.java
Used ingredient: Assert.assertTrue("log() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6718/DfpField.java
Used ingredient: Assert.assertTrue("asin() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6719/DfpField.java
Used ingredient: Assert.assertTrue("acos() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6720/DfpField.java
Used ingredient: super(isCardan ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : LocalizedFormats.EULER_ANGLES_SINGULARITY);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6721/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_INVALID, ADD_TRAP, x, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6722/DfpField.java
Used ingredient: getField().setIEEEFlagsBits(DfpField.FLAG_OVERFLOW);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6723/DfpField.java
Used ingredient: dotrap(DfpField.FLAG_INVALID, GREATER_THAN_TRAP, x, newInstance(getZero()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6724/DfpField.java
Used ingredient: super(LocalizedFormats.FRACTION_CONVERSION_OVERFLOW, value, p, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6725/DfpField.java
Used ingredient: Assert.assertEquals(2 * Float.MIN_VALUE,      FastMath.scalb(Float.MAX_VALUE, -276), 0F);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6726/DfpField.java
Used ingredient: this(referenceSimplex, DEFAULT_RHO, DEFAULT_KHI, DEFAULT_GAMMA, DEFAULT_SIGMA);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6727/DfpField.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6728/DfpField.java
Used ingredient: field.setIEEEFlagsBits(DfpField.FLAG_OVERFLOW);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6729/DfpField.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6730/DfpField.java
Used ingredient: final double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6731/DfpField.java
Used ingredient: this(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_ROW_PREFIX, DEFAULT_ROW_SUFFIX,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6732/DfpField.java
Used ingredient: Assert.assertTrue("log10() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6733/DfpField.java
Used ingredient: Assert.assertTrue("log1p() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6734/DfpField.java
Used ingredient: Assert.assertTrue("sin() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6735/DfpField.java
Used ingredient: Assert.assertTrue("tan() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6736/DfpField.java
Used ingredient: Assert.assertTrue("pow() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6737/DfpField.java
Used ingredient: Assert.assertTrue("cos() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6738/DfpField.java
Used ingredient: Assert.assertTrue("exp() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6739/DfpField.java
Used ingredient: Assert.assertTrue("sinh() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6740/DfpField.java
Used ingredient: Assert.assertTrue("atan() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6741/DfpField.java
Used ingredient: Assert.assertTrue("tanh() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6742/DfpField.java
Used ingredient: Assert.assertTrue("cbrt() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6743/DfpField.java
Used ingredient: Assert.assertTrue("cosh() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6744/DfpField.java
Used ingredient: absAsinh = a * (1 - a2 * (F_1_3 - a2 * (F_1_5 - a2 * (F_1_7 - a2 * F_1_9 * F_7_8) * F_5_6) * F_3_4) * F_1_2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6745/DfpField.java
Used ingredient: * wilcox.test(x, y, alternative = "two.sided", mu = 0, paired = FALSE, exact = FALSE, correct = FALSE)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6746/DfpField.java
Used ingredient: Assert.assertTrue("atan2() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6747/DfpField.java
Used ingredient: Assert.assertTrue("expm1() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6748/DfpField.java
Used ingredient: return dotrap(DfpField.FLAG_INVALID, DIVIDE_TRAP, divisor, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6749/DfpField.java
Used ingredient: return dotrap(DfpField.FLAG_INVALID, NEW_INSTANCE_TRAP, d, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6750/DfpField.java
Used ingredient: result = dotrap(DfpField.FLAG_INVALID, SQRT_TRAP, null, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6751/DfpField.java
Used ingredient: return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, x.newInstance((byte)1, Dfp.QNAN));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6752/DfpField.java
Used ingredient: dotrap(DfpField.FLAG_INVALID, GREATER_THAN_TRAP, x, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6753/DfpField.java
Used ingredient: getField().setIEEEFlagsBits(DfpField.FLAG_INEXACT);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6754/DfpField.java
Used ingredient: Assert.assertEquals(2 * Float.MIN_VALUE,      FastMath.scalb(Float.MIN_VALUE,    1), 0F);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6755/DfpField.java
Used ingredient: Assert.assertEquals(Float.MIN_VALUE,          FastMath.scalb(Float.MAX_VALUE, -277), 0F);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6756/DfpField.java
Used ingredient: field.setIEEEFlagsBits(DfpField.FLAG_INEXACT);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6757/DfpField.java
Used ingredient: field.setIEEEFlagsBits(DfpField.FLAG_DIV_ZERO);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6758/DfpField.java
Used ingredient: Assert.assertFalse(Precision.equals(Float.NEGATIVE_INFINITY, Float.POSITIVE_INFINITY, 100000));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6759/DfpField.java
Used ingredient: field.setIEEEFlagsBits(DfpField.FLAG_INEXACT);  // signal inexact
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6760/DfpField.java
Used ingredient: if (field.getIEEEFlags() != DfpField.FLAG_UNDERFLOW)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6761/DfpField.java
Used ingredient: throw new NumberIsTooSmallException(LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6762/DfpField.java
Used ingredient: e.getContext().addMessage(LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6763/DfpField.java
Used ingredient: this(steps, DEFAULT_RHO, DEFAULT_KHI, DEFAULT_GAMMA, DEFAULT_SIGMA);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6764/DfpField.java
Used ingredient: * exp(x) =  expIntTableA[x + EXP_INT_TABLE_MAX_INDEX] + expIntTableB[x+EXP_INT_TABLE_MAX_INDEX]
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6765/DfpField.java
Used ingredient: * exp(x) =  expIntTableA[x + EXP_INT_TABLE_MAX_INDEX] + expIntTableB[x+EXP_INT_TABLE_MAX_INDEX].
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6766/DfpField.java
Used ingredient: *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6767/DfpField.java
Used ingredient: Assert.assertTrue("toRadians() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6768/DfpField.java
Used ingredient: Assert.assertTrue("toDegrees() had errors in excess of " + MAX_ERROR_ULP + " ULP", maxerrulp < MAX_ERROR_ULP);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6769/DfpField.java
Used ingredient: FastMathCalc.printarray(out, "EXP_FRAC_TABLE_A", EXP_FRAC_TABLE_LEN, ExpFracTable.EXP_FRAC_TABLE_A);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6770/DfpField.java
Used ingredient: FastMathCalc.printarray(out, "EXP_FRAC_TABLE_B", EXP_FRAC_TABLE_LEN, ExpFracTable.EXP_FRAC_TABLE_B);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6771/DfpField.java
Used ingredient: absAtanh = a * (1 + a2 * (F_1_3 + a2 * (F_1_5 + a2 * (F_1_7 + a2 * (F_1_9 + a2 * (F_1_11 + a2 * F_1_13))))));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6772/DfpField.java
Used ingredient: return dotrap(DfpField.FLAG_INVALID, MULTIPLY_TRAP, x, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6773/DfpField.java
Used ingredient: return dotrap(DfpField.FLAG_INVALID, NEXT_AFTER_TRAP, x, result);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6774/DfpField.java
Used ingredient: int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6775/DfpField.java
Used ingredient: Assert.assertEquals( 0, Precision.compareTo(Double.MAX_VALUE, Double.POSITIVE_INFINITY, 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6776/DfpField.java
Used ingredient: protected double defaultTolerance = NormalDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6777/DfpField.java
Used ingredient: Assert.assertTrue(Precision.equals(-Float.MAX_VALUE, Float.NEGATIVE_INFINITY, 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6778/DfpField.java
Used ingredient: super(LocalizedFormats.FAILED_FRACTION_CONVERSION, value, maxIterations);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6779/DfpField.java
Used ingredient: Assert.assertTrue(Precision.equals(Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY, 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6780/DfpField.java
Used ingredient: dotrap(DfpField.FLAG_INVALID, LESS_THAN_TRAP, x, newInstance(getZero()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6781/DfpField.java
Used ingredient: dotrap(DfpField.FLAG_INVALID, LESS_THAN_TRAP, this, newInstance(getZero()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6782/DfpField.java
Used ingredient: throw new NotStrictlyPositiveException(LocalizedFormats.INVALID_MAX_ITERATIONS, maximumIterations);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6783/DfpField.java
Used ingredient: Complex expected = new Complex(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6784/DfpField.java
Used ingredient: super(DEFAULT_MIN_ITERATIONS_COUNT, ROMBERG_MAX_ITERATIONS_COUNT);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6785/DfpField.java
Used ingredient: super(DEFAULT_MIN_ITERATIONS_COUNT, MIDPOINT_MAX_ITERATIONS_COUNT);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6786/DfpField.java
Used ingredient: targetY = (weightB * yB - weightA * REDUCTION_FACTOR * yA) / (weightA + weightB);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6787/DfpField.java
Used ingredient: super(DEFAULT_MIN_ITERATIONS_COUNT, TRAPEZOID_MAX_ITERATIONS_COUNT);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6788/DfpField.java
Used ingredient: FastMathCalc.printarray(out, "EXP_INT_TABLE_A", EXP_INT_TABLE_LEN, ExpIntTable.EXP_INT_TABLE_A);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6789/DfpField.java
Used ingredient: final double denom = 1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6790/DfpField.java
Used ingredient: LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6791/DfpField.java
Used ingredient: absAtanh = a * (1 + a2 * (F_1_3 + a2 * (F_1_5 + a2 * (F_1_7 + a2 * F_1_9))));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6792/DfpField.java
Used ingredient: DEFAULT_MIN_ITERATIONS_COUNT, DEFAULT_MAX_ITERATIONS_COUNT);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6793/DfpField.java
Used ingredient: absAsinh = a * (1 - a2 * (F_1_3 - a2 * F_1_5 * F_3_4) * F_1_2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6794/DfpField.java
Used ingredient: *     ENERGY, OR THEIR EMPLOYEES: BE LIABLE FOR ANY INDIRECT,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6795/DfpField.java
Used ingredient: * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6796/DfpField.java
Used ingredient: Assert.assertEquals(Float.NEGATIVE_INFINITY,FastMath.nextAfter(-Float.MAX_VALUE, Float.NEGATIVE_INFINITY), 0F);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6797/DfpField.java
Used ingredient: Assert.assertTrue(integrator.getIterations() < MidPointIntegrator.MIDPOINT_MAX_ITERATIONS_COUNT / 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6798/DfpField.java
Used ingredient: * wilcox.test(x, y, alternative = "two.sided", mu = 0, paired = TRUE, exact = FALSE, correct = FALSE)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6799/DfpField.java
Used ingredient: double result = s1234High + (prod1Low + prod2Low + prod3Low + prod4Low + s12Low + s123Low + s1234Low);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6800/DfpField.java
SuspiciousModificationPoint:       Dfp result[] = new Dfp[2];
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 530
Used ingredient: Dfp[] result = new Dfp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6801/DfpField.java
Used ingredient: Dfp sty[] = new Dfp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6802/DfpField.java
Used ingredient: Dfp[] rebuilt = new Dfp[3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6803/DfpField.java
Used ingredient: result = new Dfp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6804/DfpField.java
Used ingredient: Dfp c[] = new Dfp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6805/DfpField.java
Used ingredient: final Dfp[] result = new Dfp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6806/DfpField.java
Used ingredient: final Dfp c[] = new Dfp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6807/DfpField.java
Used ingredient: Dfp[] r = new Dfp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6808/DfpField.java
Used ingredient: Dfp[] out = new Dfp[3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6809/DfpField.java
Used ingredient: Dfp[] spy = new Dfp[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6810/DfpField.java
Used ingredient: Dfp[] out     = new Dfp[3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6811/DfpField.java
Used ingredient: Dfp[] ruArray = new Dfp[3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6812/DfpField.java
Used ingredient: Dfp[] rIuArray = new Dfp[3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6813/DfpField.java
Used ingredient: Dfp[] in      = new Dfp[3];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6814/DfpField.java
Used ingredient: Dfp r = new Dfp(base);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6815/DfpField.java
Used ingredient: result[j++] = input[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6816/DfpField.java
Used ingredient: Dfp num = new Dfp(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6817/DfpField.java
Used ingredient: r[0] = new Dfp(base[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6818/DfpField.java
Used ingredient: r[1] = new Dfp(base[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6819/DfpField.java
Used ingredient: Dfp result = base.getOne();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6820/DfpField.java
Used ingredient: field = new DfpField(20);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6821/DfpField.java
Used ingredient: Mean result = new Mean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6822/DfpField.java
Used ingredient: Min result = new Min();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6823/DfpField.java
Used ingredient: Max result = new Max();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6824/DfpField.java
Used ingredient: Sum result = new Sum();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6825/DfpField.java
Used ingredient: Dfp x  = new Dfp(one);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6826/DfpField.java
Used ingredient: Dfp y  = new Dfp(one);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6827/DfpField.java
Used ingredient: Dfp f  = new Dfp(one);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6828/DfpField.java
Used ingredient: result[0] = a / in[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6829/DfpField.java
Used ingredient: Dfp fi = new Dfp(one);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6830/DfpField.java
Used ingredient: Dfp py = new Dfp(one);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6831/DfpField.java
Used ingredient: Dfp x = new Dfp(a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6832/DfpField.java
Used ingredient: Dfp y = new Dfp(a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6833/DfpField.java
Used ingredient: Dfp x = new Dfp(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6834/DfpField.java
Used ingredient: Dfp y = new Dfp(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6835/DfpField.java
Used ingredient: Dfp py = new Dfp(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6836/DfpField.java
Used ingredient: result[0] <= upper[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6837/DfpField.java
Used ingredient: tmp = result[0] + zs[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6838/DfpField.java
Used ingredient: tmp = result[0] + zs[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6839/DfpField.java
Used ingredient: Dfp[] values = new Dfp[p.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6840/DfpField.java
Used ingredient: Dfp result = x.newInstance(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6841/DfpField.java
Used ingredient: double a[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6842/DfpField.java
Used ingredient: double[] y = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6843/DfpField.java
Used ingredient: double y[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6844/DfpField.java
Used ingredient: double x[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6845/DfpField.java
Used ingredient: final double result[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6846/DfpField.java
Used ingredient: Double[] res = new Double[l];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6847/DfpField.java
Used ingredient: Dfp result = newInstance(this);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6848/DfpField.java
Used ingredient: double split[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6849/DfpField.java
Used ingredient: field = new DfpField(40);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6850/DfpField.java
Used ingredient: result[1] = sumA * 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6851/DfpField.java
Used ingredient: result[2] = sumB * 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6852/DfpField.java
Used ingredient: permutation = new int[nC];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6853/DfpField.java
Used ingredient: prevr = new Dfp(r);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6854/DfpField.java
Used ingredient: result[i] += b[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6855/DfpField.java
Used ingredient: result[i] -= b[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6856/DfpField.java
Used ingredient: result[i] /= b[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6857/DfpField.java
Used ingredient: result[i] *= b[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6858/DfpField.java
Used ingredient: int[] init = new int[624];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6859/DfpField.java
Used ingredient: result[1] = nD;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6860/DfpField.java
Used ingredient: result[1] = ys[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6861/DfpField.java
Used ingredient: result[1] = zs[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6862/DfpField.java
Used ingredient: result[0] = ys[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6863/DfpField.java
Used ingredient: result[0] = zs[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6864/DfpField.java
Used ingredient: Dfp d = field.newDfp();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6865/DfpField.java
Used ingredient: double as[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6866/DfpField.java
Used ingredient: double bs[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6867/DfpField.java
Used ingredient: xReduced[i] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6868/DfpField.java
Used ingredient: double[] y  = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6869/DfpField.java
Used ingredient: double ys[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6870/DfpField.java
Used ingredient: double xs[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6871/DfpField.java
Used ingredient: double[] y0 = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6872/DfpField.java
Used ingredient: double x2[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6873/DfpField.java
Used ingredient: result[i] = objects[index[i]];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6874/DfpField.java
Used ingredient: Object[] result = new Object[k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6875/DfpField.java
Used ingredient: DfpField field = new DfpField(20);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6876/DfpField.java
Used ingredient: Dfp[] derivatives = new Dfp[p.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6877/DfpField.java
Used ingredient: int[] orders = new int[nC];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6878/DfpField.java
Used ingredient: result[1] = a[0].getZero();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6879/DfpField.java
Used ingredient: factory = new DfpField(20);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6880/DfpField.java
Used ingredient: result += row[j] * beta[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6881/DfpField.java
Used ingredient: double[] a = new double[n];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6882/DfpField.java
Used ingredient: function[1] = coeff * p[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6883/DfpField.java
Used ingredient: double[] y = new double[n];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6884/DfpField.java
Used ingredient: double[] y = new double[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6885/DfpField.java
Used ingredient: double[] f = new double[m];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6886/DfpField.java
Used ingredient: result[0] = base[0].getOne();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6887/DfpField.java
Used ingredient: double temps[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6888/DfpField.java
Used ingredient: final double tmp[] = new double[2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6889/DfpField.java
Used ingredient: result.nans = Dfp.QNAN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6890/DfpField.java
Used ingredient: DfpField field = new DfpField(15);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6891/DfpField.java
Used ingredient: DfpField field = new DfpField(30);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6892/DfpField.java
Used ingredient: DfpField field = new DfpField(40);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6893/DfpField.java
Used ingredient: Dfp[] values      = new Dfp[p.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6894/DfpField.java
Used ingredient: results[0] = this.copy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6895/DfpField.java
Used ingredient: result[1] = base[0].getZero();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6896/DfpField.java
Used ingredient: result = newInstance(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6897/DfpField.java
Used ingredient: result[0] = a[0].divide(b[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6898/DfpField.java
Used ingredient: result += vals[i] * coeffs[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6899/DfpField.java
Used ingredient: transformers[last] = next;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6900/DfpField.java
SuspiciousModificationPoint:       boolean leading = true;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 531
Used ingredient: boolean matching = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6901/DfpField.java
Used ingredient: boolean newMapping = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6902/DfpField.java
Used ingredient: boolean allfound = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6903/DfpField.java
Used ingredient: boolean result = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6904/DfpField.java
Used ingredient: boolean good = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6905/DfpField.java
Used ingredient: boolean increment = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6906/DfpField.java
Used ingredient: boolean allEquals = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6907/DfpField.java
Used ingredient: boolean converged = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6908/DfpField.java
Used ingredient: boolean flag = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6909/DfpField.java
Used ingredient: boolean isIdentity = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6910/DfpField.java
Used ingredient: boolean firstTime = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6911/DfpField.java
Used ingredient: boolean firstIteration = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6912/DfpField.java
Used ingredient: boolean useLong = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6913/DfpField.java
Used ingredient: boolean changed = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6914/DfpField.java
Used ingredient: boolean sameSignature = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6915/DfpField.java
Used ingredient: boolean invert = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6916/DfpField.java
Used ingredient: boolean caught = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6917/DfpField.java
Used ingredient: boolean negate = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6918/DfpField.java
Used ingredient: boolean neg = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6919/DfpField.java
Used ingredient: boolean done = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6920/DfpField.java
Used ingredient: boolean inc = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6921/DfpField.java
Used ingredient: boolean negative = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6922/DfpField.java
Used ingredient: boolean changeLo = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6923/DfpField.java
Used ingredient: boolean changeHi = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6924/DfpField.java
Used ingredient: final boolean fatal = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6925/DfpField.java
Used ingredient: boolean rescale = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6926/DfpField.java
Used ingredient: boolean inexact = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6927/DfpField.java
Used ingredient: boolean failure = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6928/DfpField.java
Used ingredient: boolean inSegment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6929/DfpField.java
Used ingredient: boolean isLongMin = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6930/DfpField.java
Used ingredient: boolean reject = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6931/DfpField.java
Used ingredient: boolean ret = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6932/DfpField.java
Used ingredient: pendingEvent = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6933/DfpField.java
Used ingredient: boolean recp = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6934/DfpField.java
Used ingredient: boolean found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6935/DfpField.java
Used ingredient: boolean iev = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6936/DfpField.java
Used ingredient: boolean hasIntercept();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6937/DfpField.java
Used ingredient: boolean negative=false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6938/DfpField.java
Used ingredient: boolean obsOk=true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6939/DfpField.java
Used ingredient: boolean leftShrunk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6940/DfpField.java
Used ingredient: boolean inverted = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6941/DfpField.java
Used ingredient: boolean didThrow = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6942/DfpField.java
Used ingredient: private boolean useLU = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6943/DfpField.java
Used ingredient: boolean needReset = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6944/DfpField.java
Used ingredient: boolean stop = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6945/DfpField.java
Used ingredient: double angt = 0, qred;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6946/DfpField.java
Used ingredient: boolean sub = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6947/DfpField.java
Used ingredient: private boolean direct;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6948/DfpField.java
Used ingredient: boolean up = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6949/DfpField.java
Used ingredient: boolean ok = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6950/DfpField.java
Used ingredient: boolean isInfinite();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6951/DfpField.java
Used ingredient: boolean nextBoolean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6952/DfpField.java
Used ingredient: boolean lastSeen;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6953/DfpField.java
Used ingredient: increasing        = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6954/DfpField.java
Used ingredient: boolean keyPresent = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6955/DfpField.java
Used ingredient: boolean decimalFound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6956/DfpField.java
Used ingredient: boolean b = x.equals(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6957/DfpField.java
Used ingredient: boolean isNonSingular();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6958/DfpField.java
Used ingredient: boolean subnormal = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6959/DfpField.java
Used ingredient: boolean bSkipTo40 = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6960/DfpField.java
Used ingredient: boolean shouldThrow = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6961/DfpField.java
Used ingredient: boolean rankProblem = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6962/DfpField.java
Used ingredient: boolean unequalCounts = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6963/DfpField.java
Used ingredient: boolean cluster1Found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6964/DfpField.java
Used ingredient: boolean cluster3Found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6965/DfpField.java
Used ingredient: boolean cluster2Found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6966/DfpField.java
Used ingredient: boolean firstTime        = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6967/DfpField.java
Used ingredient: boolean newStep          = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6968/DfpField.java
Used ingredient: private boolean isMinimize = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6969/DfpField.java
Used ingredient: Mean mean = new Mean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6970/DfpField.java
Used ingredient: expected[i] = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6971/DfpField.java
Used ingredient: rescale = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6972/DfpField.java
Used ingredient: double epsilon = 1e-6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6973/DfpField.java
Used ingredient: double epsilon = 1e-7;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6974/DfpField.java
Used ingredient: double oldt = stage(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6975/DfpField.java
Used ingredient: pointInserted = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6976/DfpField.java
Used ingredient: subnormal = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6977/DfpField.java
Used ingredient: lastSeen = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6978/DfpField.java
Used ingredient: transposed = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6979/DfpField.java
Used ingredient: negative = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6980/DfpField.java
Used ingredient: negative ^= true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6981/DfpField.java
Used ingredient: decimalFound = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6982/DfpField.java
Used ingredient: cluster1Found = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6983/DfpField.java
Used ingredient: cluster2Found = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6984/DfpField.java
Used ingredient: cluster3Found = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6985/DfpField.java
Used ingredient: finalized = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6986/DfpField.java
Used ingredient: double tolerance = 0.1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6987/DfpField.java
Used ingredient: double len = length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6988/DfpField.java
Used ingredient: double totalWeight = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6989/DfpField.java
Used ingredient: double x0 = startValue;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6990/DfpField.java
Used ingredient: rankProblem = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6991/DfpField.java
Used ingredient: leading = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6992/DfpField.java
Used ingredient: loaded = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6993/DfpField.java
Used ingredient: changeHi = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6994/DfpField.java
Used ingredient: isLongMin = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6995/DfpField.java
Used ingredient: data.length, 2, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6996/DfpField.java
Used ingredient: double value = start;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6997/DfpField.java
Used ingredient: double alphaMin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6998/DfpField.java
Used ingredient: boolean isSquare();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/6999/DfpField.java
Used ingredient: boolean flag;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7000/DfpField.java
SuspiciousModificationPoint:       int sp = 0;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 532
Used ingredient: int p2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7001/DfpField.java
Used ingredient: int sig = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7002/DfpField.java
Used ingredient: int res = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7003/DfpField.java
Used ingredient: int its = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7004/DfpField.java
Used ingredient: int ipt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7005/DfpField.java
Used ingredient: int sum = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7006/DfpField.java
Used ingredient: int ptr = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7007/DfpField.java
Used ingredient: int jpt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7008/DfpField.java
Used ingredient: int rl = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7009/DfpField.java
Used ingredient: int n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7010/DfpField.java
Used ingredient: int i = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7011/DfpField.java
Used ingredient: int a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7012/DfpField.java
Used ingredient: int ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7013/DfpField.java
Used ingredient: int a = 30;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7014/DfpField.java
Used ingredient: int r = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7015/DfpField.java
Used ingredient: int rh = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7016/DfpField.java
Used ingredient: int p = n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7017/DfpField.java
Used ingredient: int y = x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7018/DfpField.java
Used ingredient: int p = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7019/DfpField.java
Used ingredient: int k = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7020/DfpField.java
Used ingredient: int j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7021/DfpField.java
Used ingredient: int b = 50;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7022/DfpField.java
Used ingredient: int sign = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7023/DfpField.java
Used ingredient: int ksav = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7024/DfpField.java
Used ingredient: int rnk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7025/DfpField.java
Used ingredient: int num = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7026/DfpField.java
Used ingredient: int sgn = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7027/DfpField.java
Used ingredient: int cnt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7028/DfpField.java
Used ingredient: int col = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7029/DfpField.java
Used ingredient: int idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7030/DfpField.java
Used ingredient: int n = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7031/DfpField.java
Used ingredient: int max = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7032/DfpField.java
Used ingredient: int out = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7033/DfpField.java
Used ingredient: int row = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7034/DfpField.java
Used ingredient: int off = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7035/DfpField.java
Used ingredient: minStep = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7036/DfpField.java
Used ingredient: int sciexp = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7037/DfpField.java
Used ingredient: int n = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7038/DfpField.java
Used ingredient: int a = p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7039/DfpField.java
Used ingredient: int n = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7040/DfpField.java
Used ingredient: int n = 6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7041/DfpField.java
Used ingredient: int n = 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7042/DfpField.java
Used ingredient: int i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7043/DfpField.java
Used ingredient: ntrits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7044/DfpField.java
Used ingredient: int r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7045/DfpField.java
Used ingredient: int rh = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7046/DfpField.java
Used ingredient: int t = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7047/DfpField.java
Used ingredient: bits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7048/DfpField.java
Used ingredient: int N = 9;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7049/DfpField.java
Used ingredient: int k = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7050/DfpField.java
Used ingredient: int x = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7051/DfpField.java
Used ingredient: int c = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7052/DfpField.java
Used ingredient: int c = 77;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7053/DfpField.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7054/DfpField.java
Used ingredient: int q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7055/DfpField.java
Used ingredient: int k = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7056/DfpField.java
Used ingredient: int b = q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7057/DfpField.java
Used ingredient: itest = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7058/DfpField.java
Used ingredient: int swapR = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7059/DfpField.java
Used ingredient: int itest = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7060/DfpField.java
Used ingredient: int start = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7061/DfpField.java
Used ingredient: int nobs = 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7062/DfpField.java
Used ingredient: int ilbd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7063/DfpField.java
Used ingredient: int iMin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7064/DfpField.java
Used ingredient: int dfwg = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7065/DfpField.java
Used ingredient: int knew = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7066/DfpField.java
Used ingredient: int iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7067/DfpField.java
Used ingredient: int nact = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7068/DfpField.java
Used ingredient: int size = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7069/DfpField.java
Used ingredient: int n = 1024;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7070/DfpField.java
Used ingredient: int iubd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7071/DfpField.java
Used ingredient: int walk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7072/DfpField.java
Used ingredient: int idx1 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7073/DfpField.java
Used ingredient: int off2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7074/DfpField.java
Used ingredient: int e = exp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7075/DfpField.java
Used ingredient: int den = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7076/DfpField.java
Used ingredient: int dim = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7077/DfpField.java
Used ingredient: int result = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7078/DfpField.java
Used ingredient: int ret = 7;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7079/DfpField.java
Used ingredient: int state = 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7080/DfpField.java
Used ingredient: int ntrits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7081/DfpField.java
Used ingredient: int  lsb   = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7082/DfpField.java
Used ingredient: int itcsav = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7083/DfpField.java
Used ingredient: int l = idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7084/DfpField.java
Used ingredient: int ibdsav = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7085/DfpField.java
Used ingredient: int size = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7086/DfpField.java
Used ingredient: long p2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7087/DfpField.java
Used ingredient: int out = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7088/DfpField.java
Used ingredient: int  msb   = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7089/DfpField.java
Used ingredient: nbSteps = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7090/DfpField.java
Used ingredient: int iflag = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7091/DfpField.java
Used ingredient: int begin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7092/DfpField.java
Used ingredient: int index = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7093/DfpField.java
Used ingredient: int lower = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7094/DfpField.java
Used ingredient: int value = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7095/DfpField.java
Used ingredient: int nvars = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7096/DfpField.java
Used ingredient: int nobs = 21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7097/DfpField.java
Used ingredient: int nobs = 82;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7098/DfpField.java
Used ingredient: int nextr = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7099/DfpField.java
Used ingredient: int count = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7100/DfpField.java
SuspiciousModificationPoint:       int sig = 0;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 533
Used ingredient: int sign = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7101/DfpField.java
Used ingredient: int res = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7102/DfpField.java
Used ingredient: int its = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7103/DfpField.java
Used ingredient: int ipt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7104/DfpField.java
Used ingredient: int sum = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7105/DfpField.java
Used ingredient: int i = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7106/DfpField.java
Used ingredient: int ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7107/DfpField.java
Used ingredient: int sgn = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7108/DfpField.java
Used ingredient: int idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7109/DfpField.java
Used ingredient: int sp = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7110/DfpField.java
Used ingredient: int iflag = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7111/DfpField.java
Used ingredient: int ksav = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7112/DfpField.java
Used ingredient: int ilbd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7113/DfpField.java
Used ingredient: int iMin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7114/DfpField.java
Used ingredient: int dfwg = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7115/DfpField.java
Used ingredient: int iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7116/DfpField.java
Used ingredient: int size = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7117/DfpField.java
Used ingredient: int iubd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7118/DfpField.java
Used ingredient: int idx1 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7119/DfpField.java
Used ingredient: int p2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7120/DfpField.java
Used ingredient: int ptr = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7121/DfpField.java
Used ingredient: int jpt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7122/DfpField.java
Used ingredient: int rl = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7123/DfpField.java
Used ingredient: int n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7124/DfpField.java
Used ingredient: int a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7125/DfpField.java
Used ingredient: int a = 30;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7126/DfpField.java
Used ingredient: int r = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7127/DfpField.java
Used ingredient: int rh = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7128/DfpField.java
Used ingredient: int y = x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7129/DfpField.java
Used ingredient: int k = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7130/DfpField.java
Used ingredient: int j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7131/DfpField.java
Used ingredient: int b = 50;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7132/DfpField.java
Used ingredient: int rnk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7133/DfpField.java
Used ingredient: int num = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7134/DfpField.java
Used ingredient: int cnt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7135/DfpField.java
Used ingredient: int col = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7136/DfpField.java
Used ingredient: int n = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7137/DfpField.java
Used ingredient: int max = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7138/DfpField.java
Used ingredient: int out = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7139/DfpField.java
Used ingredient: int row = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7140/DfpField.java
Used ingredient: int off = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7141/DfpField.java
Used ingredient: int i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7142/DfpField.java
Used ingredient: int dim = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7143/DfpField.java
Used ingredient: int sciexp = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7144/DfpField.java
Used ingredient: int size = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7145/DfpField.java
Used ingredient: int bigInd = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7146/DfpField.java
Used ingredient: int itest = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7147/DfpField.java
Used ingredient: int start = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7148/DfpField.java
Used ingredient: int nobs = 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7149/DfpField.java
Used ingredient: int begin = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7150/DfpField.java
Used ingredient: int index = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7151/DfpField.java
Used ingredient: int knew = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7152/DfpField.java
Used ingredient: int nact = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7153/DfpField.java
Used ingredient: int n = 1024;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7154/DfpField.java
Used ingredient: int walk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7155/DfpField.java
Used ingredient: int off2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7156/DfpField.java
Used ingredient: int dim = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7157/DfpField.java
Used ingredient: int min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7158/DfpField.java
Used ingredient: int p = n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7159/DfpField.java
Used ingredient: int p = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7160/DfpField.java
Used ingredient: minStep = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7161/DfpField.java
Used ingredient: int n = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7162/DfpField.java
Used ingredient: int a = p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7163/DfpField.java
Used ingredient: int n = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7164/DfpField.java
Used ingredient: int n = 6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7165/DfpField.java
Used ingredient: int n = 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7166/DfpField.java
Used ingredient: ntrits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7167/DfpField.java
Used ingredient: int r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7168/DfpField.java
Used ingredient: int rh = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7169/DfpField.java
Used ingredient: int t = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7170/DfpField.java
Used ingredient: bits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7171/DfpField.java
Used ingredient: int N = 9;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7172/DfpField.java
Used ingredient: int k = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7173/DfpField.java
Used ingredient: int x = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7174/DfpField.java
Used ingredient: int c = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7175/DfpField.java
Used ingredient: int c = 77;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7176/DfpField.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7177/DfpField.java
Used ingredient: int q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7178/DfpField.java
Used ingredient: int k = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7179/DfpField.java
Used ingredient: int b = q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7180/DfpField.java
Used ingredient: itest = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7181/DfpField.java
Used ingredient: int e = exp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7182/DfpField.java
Used ingredient: int den = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7183/DfpField.java
Used ingredient: int result = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7184/DfpField.java
Used ingredient: int ret = 7;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7185/DfpField.java
Used ingredient: int state = 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7186/DfpField.java
Used ingredient: int ntrits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7187/DfpField.java
Used ingredient: int  lsb   = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7188/DfpField.java
Used ingredient: int itcsav = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7189/DfpField.java
Used ingredient: int l = idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7190/DfpField.java
Used ingredient: int ibdsav = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7191/DfpField.java
Used ingredient: int out = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7192/DfpField.java
Used ingredient: int  msb   = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7193/DfpField.java
Used ingredient: nbSteps = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7194/DfpField.java
Used ingredient: agingA = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7195/DfpField.java
Used ingredient: agingB = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7196/DfpField.java
Used ingredient: int target = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7197/DfpField.java
Used ingredient: mant[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7198/DfpField.java
Used ingredient: int i, j, k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7199/DfpField.java
Used ingredient: int lostdigit = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7200/DfpField.java
SuspiciousModificationPoint:       char[] buf = new char[a.length()];
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 535
Used ingredient: buf = new char[a.length()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7201/DfpField.java
Used ingredient: char buffer[] = new char[mant.length*4 + 20];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7202/DfpField.java
Used ingredient: Dfp[] values = new Dfp[p.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7203/DfpField.java
Used ingredient: double[] out = new double[a.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7204/DfpField.java
Used ingredient: char rawdigits[]    = new char[mant.length * 4];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7205/DfpField.java
Used ingredient: this.a = new double[a.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7206/DfpField.java
Used ingredient: y1Diag[k] = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7207/DfpField.java
Used ingredient: double[] out = new double[length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7208/DfpField.java
Used ingredient: double[] y = new double[x.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7209/DfpField.java
Used ingredient: double[] out = new double[x.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7210/DfpField.java
Used ingredient: double[] out = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7211/DfpField.java
Used ingredient: double[] out = new double[c.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7212/DfpField.java
Used ingredient: Integer[] c2 = new Integer[p2.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7213/DfpField.java
Used ingredient: Integer[] c1 = new Integer[p1.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7214/DfpField.java
Used ingredient: diagonal[k] = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7215/DfpField.java
Used ingredient: double[] dX = new double[x.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7216/DfpField.java
Used ingredient: double[] dY = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7217/DfpField.java
Used ingredient: final Dfp[] tmpX = new Dfp[x.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7218/DfpField.java
Used ingredient: char outputbuffer[] = new char[mant.length * 4 + 20];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7219/DfpField.java
Used ingredient: yDotK [i] = new double[y0.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7220/DfpField.java
Used ingredient: double[] y = new double[dsY.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7221/DfpField.java
Used ingredient: Dfp[] values      = new Dfp[p.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7222/DfpField.java
Used ingredient: this.mappers = new Mapper[lower.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7223/DfpField.java
Used ingredient: double[] out = new double[ranks.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7224/DfpField.java
Used ingredient: String[] labels = new String[values.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7225/DfpField.java
Used ingredient: fk[k][l+1] = new double[y0.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7226/DfpField.java
Used ingredient: double[] result = new double[length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7227/DfpField.java
Used ingredient: double[] y    = new double[k.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7228/DfpField.java
Used ingredient: double[] y0   = new double[k.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7229/DfpField.java
Used ingredient: double[] values = new double[p.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7230/DfpField.java
Used ingredient: double[] min = new double[mean.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7231/DfpField.java
Used ingredient: double[] max = new double[mean.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7232/DfpField.java
Used ingredient: Fraction d[] = new Fraction[data.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7233/DfpField.java
Used ingredient: Variance result = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7234/DfpField.java
Used ingredient: final int[] output = new int[len];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7235/DfpField.java
Used ingredient: this.x = new double[x.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7236/DfpField.java
Used ingredient: this.c = new double[c.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7237/DfpField.java
Used ingredient: this.y = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7238/DfpField.java
Used ingredient: values = new double[length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7239/DfpField.java
Used ingredient: data = new double[d.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7240/DfpField.java
Used ingredient: T[] out = buildArray(data.length);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7241/DfpField.java
Used ingredient: int[] entries = new int[types.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7242/DfpField.java
Used ingredient: Dfp[] derivatives = new Dfp[p.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7243/DfpField.java
Used ingredient: int[] newIndices = new int[beta.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7244/DfpField.java
Used ingredient: final double[] p = new double[f.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7245/DfpField.java
Used ingredient: final double[] z = new double[x.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7246/DfpField.java
Used ingredient: final double[] w = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7247/DfpField.java
Used ingredient: Fraction[] dI  = new Fraction[dataI.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7248/DfpField.java
Used ingredient: Object[] param = new Object[paramType.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7249/DfpField.java
Used ingredient: double sample[] = new double[length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7250/DfpField.java
Used ingredient: final double[] sc = new double[f.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7251/DfpField.java
Used ingredient: long[] observedCounts = new long[length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7252/DfpField.java
Used ingredient: double[] newArr = new double[arr.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7253/DfpField.java
Used ingredient: final double[] zAbs = new double[z.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7254/DfpField.java
Used ingredient: Object[] params = new Object[types.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7255/DfpField.java
Used ingredient: double[] y = new double[airdata[0].length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7256/DfpField.java
Used ingredient: double[] result = new double[means.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7257/DfpField.java
Used ingredient: double[] betaNew = new double[beta.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7258/DfpField.java
Used ingredient: matrixCopy[i] = new double[matrix[i].length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7259/DfpField.java
Used ingredient: int msb = mant[mant.length-1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7260/DfpField.java
Used ingredient: int[] out = new int[sampleSize];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7261/DfpField.java
Used ingredient: Fraction[] sub = new Fraction[n];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7262/DfpField.java
Used ingredient: Variance v1 = new Variance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7263/DfpField.java
Used ingredient: final int m = eigenvectors.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7264/DfpField.java
Used ingredient: Variance v = new Variance(m4);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7265/DfpField.java
Used ingredient: states = new byte[length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7266/DfpField.java
Used ingredient: evaluations = new Incrementor();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7267/DfpField.java
Used ingredient: p = new int[qrt.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7268/DfpField.java
Used ingredient: jacobian[m - 1]   = new double[n];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7269/DfpField.java
Used ingredient: final Throwable t = new Throwable();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7270/DfpField.java
Used ingredient: out[i] = new double[subLength];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7271/DfpField.java
Used ingredient: y = new double[y0.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7272/DfpField.java
Used ingredient: stateVariation = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7273/DfpField.java
Used ingredient: double[] values = new double[len];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7274/DfpField.java
Used ingredient: String[] labels = new String[expected.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7275/DfpField.java
Used ingredient: final double[] c = new double[x.length-1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7276/DfpField.java
Used ingredient: double[] out = new double[len];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7277/DfpField.java
Used ingredient: storedData = new double[length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7278/DfpField.java
Used ingredient: f2 = new Fraction(1,3).negate();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7279/DfpField.java
Used ingredient: work = new double[length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7280/DfpField.java
Used ingredient: final double[] aDouble = new double[a.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7281/DfpField.java
Used ingredient: final double[] bDouble = new double[b.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7282/DfpField.java
Used ingredient: double[] res  = new double[ args.length ];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7283/DfpField.java
Used ingredient: double[] results = new double[stats.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7284/DfpField.java
Used ingredient: double[] random = new double[mean.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7285/DfpField.java
Used ingredient: Fraction d[][] = new Fraction[data.length][];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7286/DfpField.java
Used ingredient: int[] orders = new int[derivatives.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7287/DfpField.java
Used ingredient: final int[] orders = new int[point.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7288/DfpField.java
Used ingredient: final double[] tmpX = new double[x.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7289/DfpField.java
Used ingredient: final double[] yTmp = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7290/DfpField.java
Used ingredient: final double[] y = new double[totalLength];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7291/DfpField.java
Used ingredient: final double[] yDot = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7292/DfpField.java
Used ingredient: final double[] xNew = new double[x.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7293/DfpField.java
Used ingredient: final double[] yNew = new double[y.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7294/DfpField.java
Used ingredient: double[] covNew = new double[cov.length];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7295/DfpField.java
Used ingredient: ThirdMoment result = new ThirdMoment();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7296/DfpField.java
Used ingredient: xrow = new double[row_data.length + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7297/DfpField.java
Used ingredient: Locale locale = new Locale(language);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7298/DfpField.java
Used ingredient: final int[] indices = new int[len];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7299/DfpField.java
Used ingredient: int[] orders = new int[parameters];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7300/DfpField.java
SuspiciousModificationPoint:       for (int i = 0; i < buf.length; i++) {
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 537
Used ingredient: for (int i = 0; i < u.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7301/DfpField.java
Used ingredient: for (int i = 0; i < f.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7302/DfpField.java
Used ingredient: for (int i = 0; i < out.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7303/DfpField.java
Used ingredient: for (int i = 0; i < beta.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7304/DfpField.java
Used ingredient: for (int i = 0; i < arr.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7305/DfpField.java
Used ingredient: for (int i = 0; i < a.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7306/DfpField.java
Used ingredient: for (int i = 0; i < ref.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7307/DfpField.java
Used ingredient: for (int i = 0; i < cos.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7308/DfpField.java
Used ingredient: for (int i = 0; i < val.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7309/DfpField.java
Used ingredient: for (int i = 0; i < n.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7310/DfpField.java
Used ingredient: for (int i = 0; i < f.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7311/DfpField.java
Used ingredient: for (int i = 0; i < p.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7312/DfpField.java
Used ingredient: for (int i = 0; i < d.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7313/DfpField.java
Used ingredient: for (int i = 0; i < s.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7314/DfpField.java
Used ingredient: for (int i = 0; i < m.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7315/DfpField.java
Used ingredient: for (int i = 0; i < x.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7316/DfpField.java
Used ingredient: for (int i = 0; i < b.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7317/DfpField.java
Used ingredient: for (int i = 0; i < k.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7318/DfpField.java
Used ingredient: for (int i = 0; i < v.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7319/DfpField.java
Used ingredient: for (int i = 1; i < f.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7320/DfpField.java
Used ingredient: for (int i = 0; i < sub.length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7321/DfpField.java
Used ingredient: for (int i = 0; i < in.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7322/DfpField.java
Used ingredient: for (int i = 0; i < f1.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7323/DfpField.java
Used ingredient: for (int i = 0; i < p1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7324/DfpField.java
Used ingredient: for (int i = 0; i < sub.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7325/DfpField.java
Used ingredient: for (int i = 0; i < in.length; i ++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7326/DfpField.java
Used ingredient: for (int i = 0; i < sin.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7327/DfpField.java
Used ingredient: for (int i = 0; i < sig.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7328/DfpField.java
Used ingredient: for (int i = 0; i < input.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7329/DfpField.java
Used ingredient: for (int i = 0; i < guess.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7330/DfpField.java
Used ingredient: for (int i = 0; i < real.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7331/DfpField.java
Used ingredient: for (int i = 0; i < data.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7332/DfpField.java
Used ingredient: for (int i = 0; i < hash.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7333/DfpField.java
Used ingredient: for (int i = 0; i < norm.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7334/DfpField.java
Used ingredient: for (int i = 0; i < mant.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7335/DfpField.java
Used ingredient: for (int i = 0; i < root.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7336/DfpField.java
Used ingredient: for (int i = 0; i < stat.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7337/DfpField.java
Used ingredient: for (int i = 0; i < vals.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7338/DfpField.java
Used ingredient: for (int i = 0; i < xval.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7339/DfpField.java
Used ingredient: for (int i = 0; i < init.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7340/DfpField.java
Used ingredient: for (int i = 0; i < test.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7341/DfpField.java
Used ingredient: for (int i = 0; i < xAll.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7342/DfpField.java
Used ingredient: for (int i = 0; i < keys.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7343/DfpField.java
Used ingredient: for (int i = 0; i < r.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7344/DfpField.java
Used ingredient: for (int i = 0; i < a.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7345/DfpField.java
Used ingredient: for (int i = 0; i < cE.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7346/DfpField.java
Used ingredient: for (int i = 0; i < p.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7347/DfpField.java
Used ingredient: for (int i = 0; i < s.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7348/DfpField.java
Used ingredient: for (int i = 0; i < z.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7349/DfpField.java
Used ingredient: for (int i = 0; i < m.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7350/DfpField.java
Used ingredient: for (int i = 0; i < x.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7351/DfpField.java
Used ingredient: for (int i = 0; i < y.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7352/DfpField.java
Used ingredient: for (int i = 0; i < v.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7353/DfpField.java
Used ingredient: for (int i = 1; i < f.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7354/DfpField.java
Used ingredient: for (int i = 2; i < f.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7355/DfpField.java
Used ingredient: for (int i = 1; i < s.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7356/DfpField.java
Used ingredient: for (int i = 0; i < length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7357/DfpField.java
Used ingredient: for (int i = 0; i < dX.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7358/DfpField.java
Used ingredient: for (int i = 0; i < dY.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7359/DfpField.java
Used ingredient: for (int i = 0; i < y0.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7360/DfpField.java
Used ingredient: for (int i = 1; i < in.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7361/DfpField.java
Used ingredient: for (int i = 0; i < dsY.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7362/DfpField.java
Used ingredient: for (int i = 0; i < l40.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7363/DfpField.java
Used ingredient: for (int i = 0; i < actual.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7364/DfpField.java
Used ingredient: for (int i = 0; i < result.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7365/DfpField.java
Used ingredient: for (int i = 0; i < source.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7366/DfpField.java
Used ingredient: for (int i = 0; i < values.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7367/DfpField.java
Used ingredient: for (int i = 0; i < labels.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7368/DfpField.java
Used ingredient: for (int i = 0; i < after.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7369/DfpField.java
Used ingredient: for(int i = 0; i < actual.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7370/DfpField.java
Used ingredient: for (int i = 0; i < ranks.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7371/DfpField.java
Used ingredient: for (int i = 0; i < data2.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7372/DfpField.java
Used ingredient: for (int i = 0; i < dataU.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7373/DfpField.java
Used ingredient: for (int i = 0; i < dataC.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7374/DfpField.java
Used ingredient: for (int i = 0; i < data1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7375/DfpField.java
Used ingredient: for (int i = 0; i < value.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7376/DfpField.java
Used ingredient: for (int i = 0; i < knots.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7377/DfpField.java
Used ingredient: for (int i = 0; i < types.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7378/DfpField.java
Used ingredient: for (int i = 0; i < data.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7379/DfpField.java
Used ingredient: for (int i = 0; i < data1.length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7380/DfpField.java
Used ingredient: for (int i = 0; i < mean.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7381/DfpField.java
Used ingredient: for (int i = 0; i < last.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7382/DfpField.java
Used ingredient: for (int i = 0; i < main.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7383/DfpField.java
Used ingredient: for (int i = 0; i < xval.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7384/DfpField.java
Used ingredient: for (int i = 0; i < tmp2.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7385/DfpField.java
Used ingredient: for (int i = 0; i < yDot.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7386/DfpField.java
Used ingredient: for (int i = 0; i < init.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7387/DfpField.java
Used ingredient: for (int i = 0; i < loop.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7388/DfpField.java
Used ingredient: for (int n = 0; n < f.length; ++n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7389/DfpField.java
Used ingredient: for(int i = 0; i < res.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7390/DfpField.java
Used ingredient: for(int i = 0; i < xval.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7391/DfpField.java
Used ingredient: for( int i = 0 ; i < x.length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7392/DfpField.java
Used ingredient: for (int j = 0; j < u.length; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7393/DfpField.java
Used ingredient: for (int j = 0; j < f.length; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7394/DfpField.java
Used ingredient: for (int i = 1; i < y.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7395/DfpField.java
Used ingredient: for (int i = 0; i < length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7396/DfpField.java
Used ingredient: for( int i = 0 ; i < x.length ; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7397/DfpField.java
Used ingredient: for (int i = 1; i <= length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7398/DfpField.java
Used ingredient: for (int i = start; i < length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7399/DfpField.java
Used ingredient: for (int i = 0; i < oldLength; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7400/DfpField.java
SuspiciousModificationPoint:         buf[i] = a.charAt(i);
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 538
Used ingredient: cloud[i] = create();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7401/DfpField.java
Used ingredient: f[i] = p[i].value(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7402/DfpField.java
Used ingredient: y[i] = f.value(x[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7403/DfpField.java
Used ingredient: f[i] = f[i].add(tmp2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7404/DfpField.java
Used ingredient: out[i] /= v.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7405/DfpField.java
Used ingredient: out[i] *= v.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7406/DfpField.java
Used ingredient: out[i] = data[i].add(d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7407/DfpField.java
Used ingredient: fHi  = f.value(xHi);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7408/DfpField.java
Used ingredient: if (buf[i] == '.') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7409/DfpField.java
Used ingredient: x[i] = f.value(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7410/DfpField.java
Used ingredient: f[i] = build(a[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7411/DfpField.java
Used ingredient: out[i] = sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7412/DfpField.java
Used ingredient: out[i] = getNext();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7413/DfpField.java
Used ingredient: r[i] -= target[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7414/DfpField.java
Used ingredient: x[i] = e.getKey();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7415/DfpField.java
Used ingredient: out[i][i] = data[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7416/DfpField.java
Used ingredient: e[i] = secondary[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7417/DfpField.java
Used ingredient: spx[1] = a.getZero();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7418/DfpField.java
Used ingredient: sumImpl[i].clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7419/DfpField.java
Used ingredient: sumSqImpl[i].clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7420/DfpField.java
Used ingredient: buf = new char[a.length()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7421/DfpField.java
Used ingredient: c = source.charAt(index++);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7422/DfpField.java
Used ingredient: jacobian[i][1] = x.get(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7423/DfpField.java
Used ingredient: data[i] = v.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7424/DfpField.java
Used ingredient: actual[i] = output.get(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7425/DfpField.java
Used ingredient: fact = fact.divide(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7426/DfpField.java
Used ingredient: values[i] = getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7427/DfpField.java
Used ingredient: a[i] = r.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7428/DfpField.java
Used ingredient: lu = matrix.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7429/DfpField.java
Used ingredient: values[i] = getNext();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7430/DfpField.java
Used ingredient: sumLogImpl[i].clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7431/DfpField.java
Used ingredient: striped[q] = fpdecimal.charAt(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7432/DfpField.java
Used ingredient: out[i] = data[i].subtract(d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7433/DfpField.java
Used ingredient: basis[i][k] /= Math.sqrt(sp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7434/DfpField.java
Used ingredient: zAbs[i] = FastMath.abs(z[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7435/DfpField.java
Used ingredient: cos[i] = FastMath.cos(arg);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7436/DfpField.java
Used ingredient: se[i] = FastMath.sqrt(var);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7437/DfpField.java
Used ingredient: Dfp pi = factory.getPi();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7438/DfpField.java
Used ingredient: data[i] = v1.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7439/DfpField.java
Used ingredient: y[i] = x.getEntry(i) / d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7440/DfpField.java
Used ingredient: f[i] = f[i].multiply(dx);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7441/DfpField.java
Used ingredient: data[i] = data[i].add(d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7442/DfpField.java
Used ingredient: y[0] = FastMath.abs(sin);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7443/DfpField.java
Used ingredient: final Dfp u = y.rint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7444/DfpField.java
Used ingredient: dataR[i] = c.getReal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7445/DfpField.java
Used ingredient: double[] d = r.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7446/DfpField.java
Used ingredient: result = subtract(inc);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7447/DfpField.java
Used ingredient: diffa = Math.abs(diff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7448/DfpField.java
Used ingredient: x[1] = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7449/DfpField.java
Used ingredient: final T x = u.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7450/DfpField.java
Used ingredient: final T y = u.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7451/DfpField.java
Used ingredient: final T z = u.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7452/DfpField.java
Used ingredient: p[i] = new Double(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7453/DfpField.java
Used ingredient: w[i] = new Double(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7454/DfpField.java
Used ingredient: num = num.negate();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7455/DfpField.java
Used ingredient: in[0] = u.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7456/DfpField.java
Used ingredient: in[1] = u.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7457/DfpField.java
Used ingredient: in[2] = u.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7458/DfpField.java
Used ingredient: mant[i] = mant[i+1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7459/DfpField.java
Used ingredient: f = f.negate();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7460/DfpField.java
Used ingredient: result = Erf.erf(-i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7461/DfpField.java
Used ingredient: result = Erf.erfc(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7462/DfpField.java
Used ingredient: xdfp = xdfp.negate();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7463/DfpField.java
Used ingredient: field = v.getField();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7464/DfpField.java
Used ingredient: f = f.multiply(fi);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7465/DfpField.java
Used ingredient: out[i] = Double.NaN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7466/DfpField.java
Used ingredient: f = f.reciprocal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7467/DfpField.java
Used ingredient: f[i]  *= scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7468/DfpField.java
Used ingredient: mant[i] = mant[i-1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7469/DfpField.java
Used ingredient: ui = u.intValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7470/DfpField.java
Used ingredient: Dfp x = a.getOne();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7471/DfpField.java
Used ingredient: Dfp y = a.getOne();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7472/DfpField.java
Used ingredient: result[0] = intPart;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7473/DfpField.java
Used ingredient: mu[i] = h[i] / g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7474/DfpField.java
Used ingredient: fi = fi.add(one);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7475/DfpField.java
Used ingredient: Dfp[] xs = split(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7476/DfpField.java
Used ingredient: Dfp[] spx = split(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7477/DfpField.java
Used ingredient: y[0] = f.value(x[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7478/DfpField.java
Used ingredient: A = matrix.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7479/DfpField.java
Used ingredient: y[2] = f.value(x[2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7480/DfpField.java
Used ingredient: y[1] = f.value(x[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7481/DfpField.java
Used ingredient: h = h ^ a.hashCode();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7482/DfpField.java
Used ingredient: facts[0] = -facts[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7483/DfpField.java
Used ingredient: ba[i][i] = main[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7484/DfpField.java
Used ingredient: facts[1] = -facts[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7485/DfpField.java
Used ingredient: f = f1.subtract(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7486/DfpField.java
Used ingredient: f = f1.subtract(f2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7487/DfpField.java
Used ingredient: xTab[i] = 0.1 * i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7488/DfpField.java
Used ingredient: u = w.orthogonal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7489/DfpField.java
Used ingredient: num = Math.abs(num);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7490/DfpField.java
Used ingredient: q = a.operate(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7491/DfpField.java
Used ingredient: y = a.operate(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7492/DfpField.java
Used ingredient: return Math.cbrt(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7493/DfpField.java
Used ingredient: binStats.clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7494/DfpField.java
Used ingredient: double[] startPoint);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7495/DfpField.java
Used ingredient: buffer[p++] = '.';
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7496/DfpField.java
Used ingredient: minImpl[i].clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7497/DfpField.java
Used ingredient: buf[i] = '0';
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7498/DfpField.java
Used ingredient: scaled[i] *= ratio;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7499/DfpField.java
Used ingredient: xTab[i1] = xTab[i2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7500/DfpField.java
SuspiciousModificationPoint:         if (buf[i] >= '1' && buf[i] <= '9') {
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 540
Used ingredient: if (buf[i] >= '0' && buf[i] <= '9' && i < sp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7501/DfpField.java
Used ingredient: if (buf[i] >= '0' && buf[i] <= '9' && !leading) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7502/DfpField.java
Used ingredient: if (!(beta >= -1d && beta <= 1d)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7503/DfpField.java
Used ingredient: if (df > 1 && df <= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7504/DfpField.java
Used ingredient: if (observed1[i] == 0 && observed2[i] == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7505/DfpField.java
Used ingredient: if (iact >= 0 && isav == iu) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7506/DfpField.java
Used ingredient: if (inputSigma[i] > uB[i] - lB[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7507/DfpField.java
Used ingredient: if (basicRow != null && basicRow == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7508/DfpField.java
Used ingredient: if (buf[i] == '.') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7509/DfpField.java
Used ingredient: if (i == j && i < p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7510/DfpField.java
Used ingredient: if (i == 0 && x[i] < 0)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7511/DfpField.java
Used ingredient: if (counter[i] == size[i] - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7512/DfpField.java
Used ingredient: if (counter[i] != size[i] - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7513/DfpField.java
Used ingredient: if ((magnitude >= 0 && sign >= 0) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7514/DfpField.java
Used ingredient: if (r >= lower && r <= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7515/DfpField.java
Used ingredient: while ((n > 1) && (c[n - 1] == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7516/DfpField.java
Used ingredient: if (fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7517/DfpField.java
Used ingredient: if ((i >= end) || (work[i] > value)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7518/DfpField.java
Used ingredient: while ((i < j) && (work[i] < value)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7519/DfpField.java
Used ingredient: if( x[i] == null || x[i].length == 0 ){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7520/DfpField.java
Used ingredient: if (buffer[q] == '.') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7521/DfpField.java
Used ingredient: if (!(upper[i] >= lower[i])) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7522/DfpField.java
Used ingredient: if (t == 0.0 && i >= j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7523/DfpField.java
Used ingredient: if (alpha >= 1 || alpha <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7524/DfpField.java
Used ingredient: if (x >= 0 && x < RADIX) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7525/DfpField.java
Used ingredient: if (y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7526/DfpField.java
Used ingredient: for (int i = 1 ; i <= 6 ; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7527/DfpField.java
Used ingredient: if (iact == -1 && temp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7528/DfpField.java
Used ingredient: if (rh != 0 && (asign == bsign)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7529/DfpField.java
Used ingredient: if (!(alpha > 0d && alpha <= 2d)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7530/DfpField.java
Used ingredient: if (key >= index && key < end) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7531/DfpField.java
Used ingredient: if (x > 0 && x <= S_LIMIT) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7532/DfpField.java
Used ingredient: } else if (1 - ninv <= d && d < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7533/DfpField.java
Used ingredient: if (nans == INFINITE && sign == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7534/DfpField.java
Used ingredient: if ((n > -127) && (n < 128)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7535/DfpField.java
Used ingredient: if ((n > -1023) && (n < 1024)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7536/DfpField.java
Used ingredient: if ((left == null) && (right == null)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7537/DfpField.java
Used ingredient: if (y > 0 && y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7538/DfpField.java
Used ingredient: if (real == 0.0 && imaginary == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7539/DfpField.java
Used ingredient: } else if (ninvhalf < d && d <= ninv) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7540/DfpField.java
Used ingredient: if (fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7541/DfpField.java
Used ingredient: if (a.mant[i] > b.mant[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7542/DfpField.java
Used ingredient: if (x[i] > uB[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7543/DfpField.java
Used ingredient: if (c[ir][ir] <= small) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7544/DfpField.java
Used ingredient: while (buffer[q] == '0') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7545/DfpField.java
Used ingredient: while (buffer[p-1] == '0') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7546/DfpField.java
Used ingredient: } else if (x[i] > uB[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7547/DfpField.java
Used ingredient: if (in < -1 || in >= nvars) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7548/DfpField.java
Used ingredient: if (a <= x && x < c) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7549/DfpField.java
Used ingredient: if (i == 4 || cur == length - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7550/DfpField.java
Used ingredient: (fb <= 0 && fc <= 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7551/DfpField.java
Used ingredient: for (int i = 1; i <= max; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7552/DfpField.java
Used ingredient: for (int i = 1; i <= maxOrder; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7553/DfpField.java
Used ingredient: for (int i = 1; i <= maxI; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7554/DfpField.java
Used ingredient: for (int i = 1; i <= order; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7555/DfpField.java
Used ingredient: x1[i] = x2[i] = y1[i] = y2[i] = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7556/DfpField.java
Used ingredient: for (int i = 1; i <= n; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7557/DfpField.java
Used ingredient: for (int i = 1; i <= n; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7558/DfpField.java
Used ingredient: for (int i = 1; i < 90; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7559/DfpField.java
Used ingredient: for (int i = 1; i <= s; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7560/DfpField.java
Used ingredient: for (int i = 1; i <= k; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7561/DfpField.java
Used ingredient: if (((i >> j) & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7562/DfpField.java
Used ingredient: for (int i = 1; i <= length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7563/DfpField.java
Used ingredient: if (c < x && x <= b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7564/DfpField.java
Used ingredient: for (int i = 1; i <= 10; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7565/DfpField.java
Used ingredient: for (int i = -1; i <= 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7566/DfpField.java
Used ingredient: if (l == list[j] && i > next) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7567/DfpField.java
Used ingredient: if (alpha < 2d && beta != 0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7568/DfpField.java
Used ingredient: if (c == 0.0 && d == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7569/DfpField.java
Used ingredient: for (int i = m + 1; i <= high; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7570/DfpField.java
Used ingredient: if (binaryRepresentation[i] == '1') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7571/DfpField.java
Used ingredient: for (int i = -100; i <= 0; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7572/DfpField.java
Used ingredient: for (int i = 1; i <= BITS; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7573/DfpField.java
Used ingredient: if ((1 != y) && (y != nMinus1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7574/DfpField.java
Used ingredient: if ((fb > 0 && fc > 0) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7575/DfpField.java
Used ingredient: for (int i = im + 2; i <= iu; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7576/DfpField.java
Used ingredient: for (int i = -10; i <= 10; i += 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7577/DfpField.java
Used ingredient: for (int i = s + 1; i <= BITS; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7578/DfpField.java
Used ingredient: while (!lowerInclusive && u <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7579/DfpField.java
Used ingredient: for (int j = 1; j < n; j <<= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7580/DfpField.java
Used ingredient: if ((p > 100) || (p <= 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7581/DfpField.java
Used ingredient: if (u - a < tol2 || b - u < tol2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7582/DfpField.java
Used ingredient: if (p1 == null && p2 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7583/DfpField.java
Used ingredient: if (nans == INFINITE && x != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7584/DfpField.java
Used ingredient: if (nans == INFINITE && x == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7585/DfpField.java
Used ingredient: if (Math.abs(se[i] - ser[i]) > 1.0e-8) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7586/DfpField.java
Used ingredient: if (y < 0 && y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7587/DfpField.java
Used ingredient: while ((j <= s - 1) && (nMinus1 != y)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7588/DfpField.java
Used ingredient: for (int i = n - k + 1; i <= n; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7589/DfpField.java
Used ingredient: if (!((nextX > xA) && (nextX < xB))) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7590/DfpField.java
Used ingredient: while ((i < j) && (work[j] > value)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7591/DfpField.java
Used ingredient: if (countSum1 == 0 || countSum2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7592/DfpField.java
Used ingredient: if (e[i + 1] == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7593/DfpField.java
Used ingredient: if (orig[i] != list[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7594/DfpField.java
Used ingredient: if (a.mant[i] < b.mant[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7595/DfpField.java
Used ingredient: + (x[i] - 1.) * (x[i] - 1.);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7596/DfpField.java
Used ingredient: if (c[ii][ii] > c[isr][isr]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7597/DfpField.java
Used ingredient: if (refI[k] != refJ[k]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7598/DfpField.java
Used ingredient: for (int i = 0; i <= start; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7599/DfpField.java
Used ingredient: if (this.vorder[i] != series[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7600/DfpField.java
SuspiciousModificationPoint:             leading = false;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 541
Used ingredient: matching = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7601/DfpField.java
Used ingredient: flag = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7602/DfpField.java
Used ingredient: newMapping = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7603/DfpField.java
Used ingredient: singular = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7604/DfpField.java
Used ingredient: lastSeen = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7605/DfpField.java
Used ingredient: boolean inc = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7606/DfpField.java
Used ingredient: boolean neg = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7607/DfpField.java
Used ingredient: nan     = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7608/DfpField.java
Used ingredient: negInf  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7609/DfpField.java
Used ingredient: inc = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7610/DfpField.java
Used ingredient: negInf = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7611/DfpField.java
Used ingredient: boolean up = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7612/DfpField.java
Used ingredient: boolean ok = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7613/DfpField.java
Used ingredient: boolean flag = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7614/DfpField.java
Used ingredient: boolean done = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7615/DfpField.java
Used ingredient: boolean iev = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7616/DfpField.java
Used ingredient: boolean sub = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7617/DfpField.java
Used ingredient: boolean ret = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7618/DfpField.java
Used ingredient: allfound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7619/DfpField.java
Used ingredient: finalized  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7620/DfpField.java
Used ingredient: posInf  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7621/DfpField.java
Used ingredient: posInf = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7622/DfpField.java
Used ingredient: loop   = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7623/DfpField.java
Used ingredient: newStep = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7624/DfpField.java
Used ingredient: good = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7625/DfpField.java
Used ingredient: loop = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7626/DfpField.java
Used ingredient: boolean stop = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7627/DfpField.java
Used ingredient: boolean recp = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7628/DfpField.java
Used ingredient: increment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7629/DfpField.java
Used ingredient: incMoment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7630/DfpField.java
Used ingredient: trialgood = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7631/DfpField.java
Used ingredient: allEquals = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7632/DfpField.java
Used ingredient: boolean invert = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7633/DfpField.java
Used ingredient: boolean caught = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7634/DfpField.java
Used ingredient: boolean negate = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7635/DfpField.java
Used ingredient: lindep[col] = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7636/DfpField.java
Used ingredient: boolean found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7637/DfpField.java
Used ingredient: scaled = -scaled;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7638/DfpField.java
Used ingredient: boolean inexact = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7639/DfpField.java
Used ingredient: boolean useLong = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7640/DfpField.java
Used ingredient: boolean changed = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7641/DfpField.java
Used ingredient: isIdentity = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7642/DfpField.java
Used ingredient: minusFound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7643/DfpField.java
Used ingredient: plusFound  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7644/DfpField.java
Used ingredient: dirtyState = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7645/DfpField.java
Used ingredient: transposed = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7646/DfpField.java
Used ingredient: boolean inSegment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7647/DfpField.java
Used ingredient: boolean isLongMin = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7648/DfpField.java
Used ingredient: firstIteration = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7649/DfpField.java
Used ingredient: boolean reject = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7650/DfpField.java
Used ingredient: int q = offset;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7651/DfpField.java
Used ingredient: bextradigit = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7652/DfpField.java
Used ingredient: obsOk = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7653/DfpField.java
Used ingredient: double ared = a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7654/DfpField.java
Used ingredient: lambda = size;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7655/DfpField.java
Used ingredient: aextradigit = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7656/DfpField.java
Used ingredient: a, b, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7657/DfpField.java
Used ingredient: valueRange = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7658/DfpField.java
Used ingredient: forward, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7659/DfpField.java
Used ingredient: edge = ileft;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7660/DfpField.java
Used ingredient: omega = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7661/DfpField.java
Used ingredient: stplen = blen;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7662/DfpField.java
Used ingredient: return false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7663/DfpField.java
Used ingredient: pendingEvent     = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7664/DfpField.java
Used ingredient: boolean inverted = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7665/DfpField.java
Used ingredient: boolean negative = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7666/DfpField.java
Used ingredient: boolean changeHi = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7667/DfpField.java
Used ingredient: boolean didThrow = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7668/DfpField.java
Used ingredient: boolean changeLo = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7669/DfpField.java
Used ingredient: values[i] = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7670/DfpField.java
Used ingredient: firstTime = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7671/DfpField.java
Used ingredient: firstCall = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7672/DfpField.java
Used ingredient: boolean failure = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7673/DfpField.java
Used ingredient: boolean rescale = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7674/DfpField.java
Used ingredient: pendingEvent      = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7675/DfpField.java
Used ingredient: double fX = fVal;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7676/DfpField.java
Used ingredient: ga = f.value(ta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7677/DfpField.java
Used ingredient: midPoint += step;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7678/DfpField.java
Used ingredient: mean = params[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7679/DfpField.java
Used ingredient: nans = xdfp.nans;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7680/DfpField.java
Used ingredient: nameLength = len;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7681/DfpField.java
Used ingredient: boolean lastSeen;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7682/DfpField.java
Used ingredient: lhs[index] = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7683/DfpField.java
Used ingredient: isLastStep = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7684/DfpField.java
Used ingredient: end, start, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7685/DfpField.java
Used ingredient: selected = cluster;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7686/DfpField.java
Used ingredient: this.tol_set = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7687/DfpField.java
Used ingredient: boolean leading = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7688/DfpField.java
Used ingredient: boolean negative=false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7689/DfpField.java
Used ingredient: boolean decimalFound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7690/DfpField.java
Used ingredient: x[i] = f.value(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7691/DfpField.java
Used ingredient: f[i]  *= scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7692/DfpField.java
Used ingredient: values[index] = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7693/DfpField.java
Used ingredient: min = values[begin];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7694/DfpField.java
Used ingredient: weights[i] *= scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7695/DfpField.java
Used ingredient: data[index] = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7696/DfpField.java
Used ingredient: field = d.field;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7697/DfpField.java
Used ingredient: field = v.field;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7698/DfpField.java
Used ingredient: int m = first;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7699/DfpField.java
Used ingredient: d[r][0] = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7700/DfpField.java
SuspiciousModificationPoint:         if (buf[i] == '.') {
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 544
Used ingredient: if (buffer[q] == '.') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7701/DfpField.java
Used ingredient: if (in[0] == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7702/DfpField.java
Used ingredient: if (f[0] != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7703/DfpField.java
Used ingredient: if (e[i + 1] == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7704/DfpField.java
Used ingredient: while (buffer[q] == '0') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7705/DfpField.java
Used ingredient: if (field == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7706/DfpField.java
Used ingredient: if (in[i] <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7707/DfpField.java
Used ingredient: if (d[in] > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7708/DfpField.java
Used ingredient: if (mant[i] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7709/DfpField.java
Used ingredient: if (value == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7710/DfpField.java
Used ingredient: if (k[i] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7711/DfpField.java
Used ingredient: if (xi == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7712/DfpField.java
Used ingredient: if (fx == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7713/DfpField.java
Used ingredient: if (f0 == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7714/DfpField.java
Used ingredient: if (f1 == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7715/DfpField.java
Used ingredient: if (y[0] >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7716/DfpField.java
Used ingredient: if (y[1] >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7717/DfpField.java
Used ingredient: if (k[i][j] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7718/DfpField.java
Used ingredient: if (hK[k] != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7719/DfpField.java
Used ingredient: if (steps[j] == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7720/DfpField.java
Used ingredient: if (updates[i] <= t) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7721/DfpField.java
Used ingredient: if (product[i] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7722/DfpField.java
Used ingredient: if (striped[q] == '0') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7723/DfpField.java
Used ingredient: if (p2[index] != k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7724/DfpField.java
Used ingredient: if (shift.x == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7725/DfpField.java
Used ingredient: if (quotient[i] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7726/DfpField.java
Used ingredient: while (buffer[p-1] == '0') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7727/DfpField.java
Used ingredient: if (line == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7728/DfpField.java
Used ingredient: if (iflag == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7729/DfpField.java
Used ingredient: if (iflag == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7730/DfpField.java
Used ingredient: if (bg == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7731/DfpField.java
Used ingredient: if (num == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7732/DfpField.java
Used ingredient: else if (b == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7733/DfpField.java
Used ingredient: if (index == max) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7734/DfpField.java
Used ingredient: if (a.sign == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7735/DfpField.java
Used ingredient: if (left == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7736/DfpField.java
Used ingredient: if (rule == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7737/DfpField.java
Used ingredient: if (im == il) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7738/DfpField.java
Used ingredient: if (diff == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7739/DfpField.java
Used ingredient: if (b == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7740/DfpField.java
Used ingredient: if (f == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7741/DfpField.java
Used ingredient: if (di != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7742/DfpField.java
Used ingredient: if (inter == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7743/DfpField.java
Used ingredient: if (right == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7744/DfpField.java
Used ingredient: if (index == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7745/DfpField.java
Used ingredient: } else if (i == j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7746/DfpField.java
Used ingredient: if (count == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7747/DfpField.java
Used ingredient: if (value == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7748/DfpField.java
Used ingredient: } else if (b == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7749/DfpField.java
Used ingredient: if (i == start) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7750/DfpField.java
Used ingredient: if (is == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7751/DfpField.java
Used ingredient: if (im == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7752/DfpField.java
Used ingredient: if (index == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7753/DfpField.java
Used ingredient: if (sign == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7754/DfpField.java
Used ingredient: if (count == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7755/DfpField.java
Used ingredient: if (beta == 0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7756/DfpField.java
Used ingredient: if (ntrits == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7757/DfpField.java
Used ingredient: if (index == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7758/DfpField.java
Used ingredient: if (cut == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7759/DfpField.java
Used ingredient: if (obj == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7760/DfpField.java
Used ingredient: if (real == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7761/DfpField.java
Used ingredient: if (ntrits == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7762/DfpField.java
Used ingredient: if (divisor == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7763/DfpField.java
Used ingredient: if (plus == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7764/DfpField.java
Used ingredient: if (beta == ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7765/DfpField.java
Used ingredient: if (numEval == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7766/DfpField.java
Used ingredient: if (norm2 == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7767/DfpField.java
Used ingredient: if (in[i] < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7768/DfpField.java
Used ingredient: if (intVal == 709) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7769/DfpField.java
Used ingredient: if (nbPoints <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7770/DfpField.java
Used ingredient: if (b >= 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7771/DfpField.java
Used ingredient: if (turn % 2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7772/DfpField.java
Used ingredient: if (this == other) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7773/DfpField.java
Used ingredient: if (ratio <= 0.25) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7774/DfpField.java
Used ingredient: if (il == iu) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7775/DfpField.java
Used ingredient: if (e[k] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7776/DfpField.java
Used ingredient: if (divisor == 0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7777/DfpField.java
Used ingredient: if (i == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7778/DfpField.java
Used ingredient: if (size == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7779/DfpField.java
Used ingredient: if (idx == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7780/DfpField.java
Used ingredient: if (this == o) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7781/DfpField.java
Used ingredient: if (i == k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7782/DfpField.java
Used ingredient: if (i == j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7783/DfpField.java
Used ingredient: if (i == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7784/DfpField.java
Used ingredient: if (paru == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7785/DfpField.java
Used ingredient: if (sum == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7786/DfpField.java
Used ingredient: if (msb == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7787/DfpField.java
Used ingredient: if (b != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7788/DfpField.java
Used ingredient: if (xb != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7789/DfpField.java
Used ingredient: if (s == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7790/DfpField.java
Used ingredient: if (p == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7791/DfpField.java
Used ingredient: if (d == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7792/DfpField.java
Used ingredient: if (w == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7793/DfpField.java
Used ingredient: if (y == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7794/DfpField.java
Used ingredient: if (xa == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7795/DfpField.java
Used ingredient: if (p == 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7796/DfpField.java
Used ingredient: if (x == 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7797/DfpField.java
Used ingredient: if (x == -1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7798/DfpField.java
Used ingredient: if (y == -1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7799/DfpField.java
Used ingredient: if (i % 2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7800/DfpField.java
SuspiciousModificationPoint:           sig += (400 - sig) % 4;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 545
Used ingredient: index = (index + 1) % 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7801/DfpField.java
Used ingredient: split[0] = (d + a) - a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7802/DfpField.java
Used ingredient: c = (t - s) - y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7803/DfpField.java
Used ingredient: shift = c / (b + shift);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7804/DfpField.java
Used ingredient: iRm2[j] = (j + r - 2) % r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7805/DfpField.java
Used ingredient: iRm1[j] = (j + r - 1) % r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7806/DfpField.java
Used ingredient: x += Math.log(0.01 + i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7807/DfpField.java
Used ingredient: if (asign == rsign) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7808/DfpField.java
Used ingredient: if (asign != bsign) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7809/DfpField.java
Used ingredient: if (a.sign != b.sign) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7810/DfpField.java
Used ingredient: m = (n - 1.0) / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7811/DfpField.java
Used ingredient: * F(mu - k * sig) <= p,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7812/DfpField.java
Used ingredient: * F(mu + k * sig) >= p,
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7813/DfpField.java
Used ingredient: d.exp = (e + 1) / 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7814/DfpField.java
Used ingredient: t = (v - u) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7815/DfpField.java
Used ingredient: this.is   = 1 / sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7816/DfpField.java
Used ingredient: s = 0.5 * (max - min) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7817/DfpField.java
Used ingredient: this.sign    = sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7818/DfpField.java
Used ingredient: sign = -sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7819/DfpField.java
Used ingredient: pos2 += nreq - k - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7820/DfpField.java
Used ingredient: e = exp * 4 - shf - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7821/DfpField.java
Used ingredient: nextr += nvars - i - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7822/DfpField.java
Used ingredient: pos += nvars - row - 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7823/DfpField.java
Used ingredient: pos2 += nreq - col - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7824/DfpField.java
Used ingredient: x += Math.exp(100 * i * F1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7825/DfpField.java
Used ingredient: i1[j]   = (j + m1)    % r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7826/DfpField.java
Used ingredient: i2[j]   = (j + m2)    % r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7827/DfpField.java
Used ingredient: i3[j]   = (j + m3)    % r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7828/DfpField.java
Used ingredient: switch ((e % 4 + 4) % 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7829/DfpField.java
Used ingredient: this.i2s2 = 0.5 * is * is;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7830/DfpField.java
Used ingredient: shift.w = -0.4375 * s * s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7831/DfpField.java
Used ingredient: x += Math.log10(0.01 + i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7832/DfpField.java
Used ingredient: f[i] = s1 - s2 * s2 - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7833/DfpField.java
Used ingredient: split[1] = d - split[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7834/DfpField.java
Used ingredient: remB += -(remA - b - a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7835/DfpField.java
Used ingredient: r = (x - w) * (fx - fv);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7836/DfpField.java
Used ingredient: q = (x - v) * (fx - fw);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7837/DfpField.java
Used ingredient: yb += -(temp - ya - ra);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7838/DfpField.java
Used ingredient: yb += -(temp - ya - za);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7839/DfpField.java
Used ingredient: nb += -(temp - na - yb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7840/DfpField.java
Used ingredient: db += -(temp - da - yb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7841/DfpField.java
Used ingredient: yb += -(temp - ya - rb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7842/DfpField.java
Used ingredient: zb += -(temp - za - yb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7843/DfpField.java
Used ingredient: yb += -(temp - ya - zb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7844/DfpField.java
Used ingredient: pos1 += nvars - row - 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7845/DfpField.java
Used ingredient: start += nreq - row - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7846/DfpField.java
Used ingredient: int refSum = (100 * 101) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7847/DfpField.java
Used ingredient: x += Math.sqrt(100 * i * F1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7848/DfpField.java
Used ingredient: x += Math.cbrt(100 * i * F1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7849/DfpField.java
Used ingredient: ratio = (f - fopt) / vquad;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7850/DfpField.java
Used ingredient: y = (int) ((y2 + cst) % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7851/DfpField.java
Used ingredient: yb += -(temp - baseA - ya);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7852/DfpField.java
Used ingredient: if (t == 0.0 && i >= j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7853/DfpField.java
Used ingredient: f[i] = (i + 1) * sum - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7854/DfpField.java
Used ingredient: array[i] = (i + 1) * inv;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7855/DfpField.java
Used ingredient: if (i == 0 && x[i] < 0)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7856/DfpField.java
Used ingredient: f[i] = i * sum - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7857/DfpField.java
Used ingredient: a = (int) (blbu % al);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7858/DfpField.java
Used ingredient: f[i] = mo2 * f[i - 2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7859/DfpField.java
Used ingredient: d2[i] = 2 * i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7860/DfpField.java
Used ingredient: int i = n - k + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7861/DfpField.java
Used ingredient: v[i] += f * digit;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7862/DfpField.java
Used ingredient: shift.x = 0.75 * s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7863/DfpField.java
Used ingredient: shift.y = 0.75 * s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7864/DfpField.java
Used ingredient: a[0] = (c + z) - z;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7865/DfpField.java
Used ingredient: w = (di * w) / dpi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7866/DfpField.java
Used ingredient: int i2 = p1 * p2 * p4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7867/DfpField.java
Used ingredient: v2[i] = yDot0 - v1[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7868/DfpField.java
Used ingredient: final int p = diag - o;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7869/DfpField.java
Used ingredient: final double sigma = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7870/DfpField.java
Used ingredient: y = (int) (square % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7871/DfpField.java
Used ingredient: sign = (byte) 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7872/DfpField.java
Used ingredient: sign  = d.sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7873/DfpField.java
Used ingredient: sign = (byte) -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7874/DfpField.java
Used ingredient: p2 = (a1 * p1) + p0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7875/DfpField.java
Used ingredient: q2 = (a1 * q1) + q0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7876/DfpField.java
Used ingredient: s = 2.0 / (n - 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7877/DfpField.java
Used ingredient: result.sign = y.sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7878/DfpField.java
Used ingredient: inc.sign = this.sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7879/DfpField.java
Used ingredient: q = (int) (prod % n);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7880/DfpField.java
Used ingredient: * (1.0 - p12)) / 3.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7881/DfpField.java
Used ingredient: increasing = gb >= ga;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7882/DfpField.java
Used ingredient: def.sign = result.sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7883/DfpField.java
Used ingredient: sign = xdfp.sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7884/DfpField.java
Used ingredient: byte rsign = bsign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7885/DfpField.java
Used ingredient: result.sign = sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7886/DfpField.java
Used ingredient: result.sign = rsign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7887/DfpField.java
Used ingredient: this.sigma = sigma;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7888/DfpField.java
Used ingredient: d = -(c - a - t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7889/DfpField.java
Used ingredient: d = -(c - a - lnza);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7890/DfpField.java
Used ingredient: d = -(c - a - lnzb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7891/DfpField.java
Used ingredient: cos   = sin * cotan;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7892/DfpField.java
Used ingredient: xb = -(xa - a - b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7893/DfpField.java
Used ingredient: yb = -(y - ya - yb);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7894/DfpField.java
Used ingredient: ret = 1.0 - 0.5 * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7895/DfpField.java
Used ingredient: actRed = 1.0 - r * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7896/DfpField.java
Used ingredient: n += 4; // n % 3 == 2
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7897/DfpField.java
Used ingredient: sumsq += (dev * dev);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7898/DfpField.java
Used ingredient: diagC = square(diagD);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7899/DfpField.java
Used ingredient: angt = angbd * i / iu;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7900/DfpField.java
SuspiciousModificationPoint:           leading = false;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 546
Used ingredient: matching = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7901/DfpField.java
Used ingredient: flag = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7902/DfpField.java
Used ingredient: newMapping = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7903/DfpField.java
Used ingredient: singular = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7904/DfpField.java
Used ingredient: lastSeen = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7905/DfpField.java
Used ingredient: boolean inc = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7906/DfpField.java
Used ingredient: boolean neg = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7907/DfpField.java
Used ingredient: nan     = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7908/DfpField.java
Used ingredient: negInf  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7909/DfpField.java
Used ingredient: inc = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7910/DfpField.java
Used ingredient: negInf = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7911/DfpField.java
Used ingredient: boolean up = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7912/DfpField.java
Used ingredient: boolean ok = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7913/DfpField.java
Used ingredient: boolean flag = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7914/DfpField.java
Used ingredient: boolean done = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7915/DfpField.java
Used ingredient: boolean iev = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7916/DfpField.java
Used ingredient: boolean sub = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7917/DfpField.java
Used ingredient: boolean ret = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7918/DfpField.java
Used ingredient: allfound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7919/DfpField.java
Used ingredient: finalized  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7920/DfpField.java
Used ingredient: posInf  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7921/DfpField.java
Used ingredient: posInf = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7922/DfpField.java
Used ingredient: loop   = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7923/DfpField.java
Used ingredient: good = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7924/DfpField.java
Used ingredient: newStep = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7925/DfpField.java
Used ingredient: loop = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7926/DfpField.java
Used ingredient: boolean stop = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7927/DfpField.java
Used ingredient: boolean recp = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7928/DfpField.java
Used ingredient: trialgood = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7929/DfpField.java
Used ingredient: increment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7930/DfpField.java
Used ingredient: incMoment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7931/DfpField.java
Used ingredient: allEquals = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7932/DfpField.java
Used ingredient: boolean invert = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7933/DfpField.java
Used ingredient: boolean caught = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7934/DfpField.java
Used ingredient: boolean negate = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7935/DfpField.java
Used ingredient: lindep[col] = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7936/DfpField.java
Used ingredient: boolean found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7937/DfpField.java
Used ingredient: scaled = -scaled;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7938/DfpField.java
Used ingredient: boolean useLong = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7939/DfpField.java
Used ingredient: boolean inexact = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7940/DfpField.java
Used ingredient: boolean changed = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7941/DfpField.java
Used ingredient: isIdentity = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7942/DfpField.java
Used ingredient: minusFound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7943/DfpField.java
Used ingredient: plusFound  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7944/DfpField.java
Used ingredient: dirtyState = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7945/DfpField.java
Used ingredient: transposed = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7946/DfpField.java
Used ingredient: boolean inSegment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7947/DfpField.java
Used ingredient: boolean isLongMin = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7948/DfpField.java
Used ingredient: firstIteration = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7949/DfpField.java
Used ingredient: boolean reject = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7950/DfpField.java
Used ingredient: bextradigit = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7951/DfpField.java
Used ingredient: aextradigit = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7952/DfpField.java
Used ingredient: int q = offset;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7953/DfpField.java
Used ingredient: obsOk = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7954/DfpField.java
Used ingredient: lambda = size;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7955/DfpField.java
Used ingredient: edge = ileft;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7956/DfpField.java
Used ingredient: a, b, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7957/DfpField.java
Used ingredient: valueRange = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7958/DfpField.java
Used ingredient: omega = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7959/DfpField.java
Used ingredient: stplen = blen;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7960/DfpField.java
Used ingredient: double ared = a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7961/DfpField.java
Used ingredient: forward, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7962/DfpField.java
Used ingredient: return false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7963/DfpField.java
Used ingredient: pendingEvent     = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7964/DfpField.java
Used ingredient: boolean inverted = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7965/DfpField.java
Used ingredient: boolean negative = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7966/DfpField.java
Used ingredient: boolean changeHi = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7967/DfpField.java
Used ingredient: boolean didThrow = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7968/DfpField.java
Used ingredient: boolean changeLo = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7969/DfpField.java
Used ingredient: firstTime = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7970/DfpField.java
Used ingredient: values[i] = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7971/DfpField.java
Used ingredient: firstCall = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7972/DfpField.java
Used ingredient: boolean failure = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7973/DfpField.java
Used ingredient: boolean rescale = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7974/DfpField.java
Used ingredient: pendingEvent      = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7975/DfpField.java
Used ingredient: ga = f.value(ta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7976/DfpField.java
Used ingredient: midPoint += step;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7977/DfpField.java
Used ingredient: nans = xdfp.nans;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7978/DfpField.java
Used ingredient: mean = params[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7979/DfpField.java
Used ingredient: nameLength = len;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7980/DfpField.java
Used ingredient: double fX = fVal;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7981/DfpField.java
Used ingredient: boolean lastSeen;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7982/DfpField.java
Used ingredient: lhs[index] = value;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7983/DfpField.java
Used ingredient: isLastStep = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7984/DfpField.java
Used ingredient: selected = cluster;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7985/DfpField.java
Used ingredient: end, start, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7986/DfpField.java
Used ingredient: this.tol_set = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7987/DfpField.java
Used ingredient: boolean leading = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7988/DfpField.java
Used ingredient: boolean negative=false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7989/DfpField.java
Used ingredient: boolean decimalFound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7990/DfpField.java
Used ingredient: rsign = asign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7991/DfpField.java
Used ingredient: a.sign = sign;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7992/DfpField.java
Used ingredient: diagD = diag(D);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7993/DfpField.java
Used ingredient: diagC = diag(C);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7994/DfpField.java
Used ingredient: scalingH = stepSize;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7995/DfpField.java
Used ingredient: x[i] = f.value(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7996/DfpField.java
Used ingredient: weights[i] *= scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7997/DfpField.java
Used ingredient: min = values[begin];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7998/DfpField.java
Used ingredient: adiff = -adiff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/7999/DfpField.java
Used ingredient: this.line  = line;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8000/DfpField.java
SuspiciousModificationPoint:         if (sig == (radixDigits / 2) * 4) {
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 549
Used ingredient: if (sig == (field.getRadixDigits() / 2) * 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8001/DfpField.java
Used ingredient: if (j == (array.length - 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8002/DfpField.java
Used ingredient: if (p != rawdigits.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8003/DfpField.java
Used ingredient: return getRadixDigits() * 4 - 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8004/DfpField.java
Used ingredient: if (y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8005/DfpField.java
Used ingredient: if (max(diagD) / min(diagD) > 1e7) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8006/DfpField.java
Used ingredient: if (sample[i] == densityPoints[j]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8007/DfpField.java
Used ingredient: if (signChangeIndex >= (x.length + 1) / 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8008/DfpField.java
Used ingredient: if (asign == rsign) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8009/DfpField.java
Used ingredient: if (rawdigits[p] != '0') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8010/DfpField.java
Used ingredient: if (p == (fpdecimal.length())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8011/DfpField.java
Used ingredient: if (adiff > (mant.length + 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8012/DfpField.java
Used ingredient: public int getRadixDigits() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8013/DfpField.java
Used ingredient: if (l == list[j] && i > next) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8014/DfpField.java
Used ingredient: if (closed || (previous != 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8015/DfpField.java
Used ingredient: if (original != cachedOriginal) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8016/DfpField.java
Used ingredient: if (j < (array.length - 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8017/DfpField.java
Used ingredient: if (rh != 0 && (asign == bsign)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8018/DfpField.java
Used ingredient: if (i == 4 || cur == length - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8019/DfpField.java
Used ingredient: if ((loop.size() == 2) && !open) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8020/DfpField.java
Used ingredient: if (temp <= qred * 1e-4 * qred) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8021/DfpField.java
Used ingredient: if ((left == null) && (right == null)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8022/DfpField.java
Used ingredient: if (i == (realEigenvalues.length - 1) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8023/DfpField.java
Used ingredient: if (sigma * sqrtDiagC[i] > stopTolUpX) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8024/DfpField.java
Used ingredient: for (int i = idx - 2; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8025/DfpField.java
Used ingredient: if (pa.signum() * pc.signum() <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8026/DfpField.java
Used ingredient: if (p == fpdecimal.length()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8027/DfpField.java
Used ingredient: private final int radixDigits;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8028/DfpField.java
Used ingredient: } else if (i == isav + 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8029/DfpField.java
Used ingredient: if (subMatrix[i].length != nCols) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8030/DfpField.java
Used ingredient: for (int i = last; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8031/DfpField.java
Used ingredient: for (int i = last; i >= 0; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8032/DfpField.java
Used ingredient: if (f.length != getOrder() + 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8033/DfpField.java
Used ingredient: if (squaredSine.getReal() == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8034/DfpField.java
Used ingredient: if (visited.get(point) != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8035/DfpField.java
Used ingredient: if (max(diagD)/min(diagD) > 1e7) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8036/DfpField.java
Used ingredient: if (source.cachedPivots != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8037/DfpField.java
Used ingredient: if (observations.length < 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8038/DfpField.java
Used ingredient: if (i < main.length - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8039/DfpField.java
Used ingredient: if ((quadrant & 1) == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8040/DfpField.java
Used ingredient: if (dim != covariances[i].length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8041/DfpField.java
Used ingredient: if (fields[i].get(null) == order) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8042/DfpField.java
Used ingredient: if (map.size() != rhs.map.size()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8043/DfpField.java
Used ingredient: if (x > mean - 2 * sigma) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8044/DfpField.java
Used ingredient: if (counter[i] == size[i] - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8045/DfpField.java
Used ingredient: if (constraint.getValue() < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8046/DfpField.java
Used ingredient: while ((mantissa >>> 23) != 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8047/DfpField.java
Used ingredient: while ((mantissa >>> 52) != 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8048/DfpField.java
Used ingredient: if (bandwidthInPoints < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8049/DfpField.java
Used ingredient: if (scaledExponent < 2047) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8050/DfpField.java
Used ingredient: for (int i = order; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8051/DfpField.java
Used ingredient: for (int i = high; i >= m; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8052/DfpField.java
Used ingredient: for (int j = high; j >= m; j--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8053/DfpField.java
Used ingredient: for (int i = begin; i < k; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8054/DfpField.java
Used ingredient: for (int j = rank; j < nC; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8055/DfpField.java
Used ingredient: if (isBracketing(min, initial)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8056/DfpField.java
Used ingredient: for (int j = order; j >= 0; --j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8057/DfpField.java
Used ingredient: } else if (scaledExponent > -24) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8058/DfpField.java
Used ingredient: if (i >= dimension - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8059/DfpField.java
Used ingredient: if (sdec <= qred * .01) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8060/DfpField.java
Used ingredient: for (int i = index; i < max; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8061/DfpField.java
Used ingredient: if (numberOfPoints % 2 != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8062/DfpField.java
Used ingredient: } else if (scaledExponent < 2047) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8063/DfpField.java
Used ingredient: if (p1 == null && p2 == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8064/DfpField.java
Used ingredient: if (value == densityPoints[j]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8065/DfpField.java
Used ingredient: if (key >= index && key < end) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8066/DfpField.java
Used ingredient: if (i == j && i < p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8067/DfpField.java
Used ingredient: for (int i = 1; i < 200; i*=10) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8068/DfpField.java
Used ingredient: for (int r = 0; r < n * rd; r++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8069/DfpField.java
Used ingredient: if ((order % 2) == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8070/DfpField.java
Used ingredient: if (g0Positive ^ (gb >= 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8071/DfpField.java
Used ingredient: for (int i0 = 0; i0 < n; i0 += 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8072/DfpField.java
Used ingredient: for (int i = 0; i < (m - 2); ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8073/DfpField.java
Used ingredient: if (diagD.getEntry(i, 0) < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8074/DfpField.java
Used ingredient: if (iact == -1 && temp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8075/DfpField.java
Used ingredient: if (FastMath.abs(s - t) > epsa) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8076/DfpField.java
Used ingredient: if (nans == INFINITE && x != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8077/DfpField.java
Used ingredient: if (nans == INFINITE && x == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8078/DfpField.java
Used ingredient: if (mostSignificantLostBit != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8079/DfpField.java
Used ingredient: if (p < (c - a) / (b - a)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8080/DfpField.java
Used ingredient: if ((k == 1) || (k == n - 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8081/DfpField.java
Used ingredient: if (check && (rhoNext <= 0.)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8082/DfpField.java
Used ingredient: if ((i < j) || (i > j + 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8083/DfpField.java
Used ingredient: if ((w - xC) * (xB - w) > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8084/DfpField.java
Used ingredient: if ((i < j - 1) || (i > j + 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8085/DfpField.java
Used ingredient: for (int i = 1; i < x.length - 2; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8086/DfpField.java
Used ingredient: for (p = 0; p < rawdigits.length; p++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8087/DfpField.java
Used ingredient: if (dirtyParameter && (paramDim != 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8088/DfpField.java
Used ingredient: if ((parameters == 0) || (order == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8089/DfpField.java
Used ingredient: if (y > 0 && y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8090/DfpField.java
Used ingredient: if (y < 0 && y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8091/DfpField.java
Used ingredient: if ((i >= end) || (work[i] > value)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8092/DfpField.java
Used ingredient: for (int g = 2; g <= i - j + 1; ++g) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8093/DfpField.java
Used ingredient: if ((Precision.EPSILON * t) * t > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8094/DfpField.java
Used ingredient: for (int i = maxOrder; i > 0; --i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8095/DfpField.java
Used ingredient: for (int i = start; i <= end; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8096/DfpField.java
Used ingredient: if ((direction < f) ^ (sign == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8097/DfpField.java
Used ingredient: } else if (1 - ninv <= d && d < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8098/DfpField.java
Used ingredient: if (exp > mant.length || exp < -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8099/DfpField.java
Used ingredient: if (nans == INFINITE && sign == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8100/DfpField.java
SuspiciousModificationPoint:           sp = i;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 550
Used ingredient: s = -s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8101/DfpField.java
Used ingredient: s = s1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8102/DfpField.java
Used ingredient: s = sa;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8103/DfpField.java
Used ingredient: s = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8104/DfpField.java
Used ingredient: s = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8105/DfpField.java
Used ingredient: a = hi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8106/DfpField.java
Used ingredient: l = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8107/DfpField.java
Used ingredient: md = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8108/DfpField.java
Used ingredient: s = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8109/DfpField.java
Used ingredient: r += i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8110/DfpField.java
Used ingredient: p += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8111/DfpField.java
Used ingredient: b = hi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8112/DfpField.java
Used ingredient: q -= i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8113/DfpField.java
Used ingredient: px = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8114/DfpField.java
Used ingredient: p = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8115/DfpField.java
Used ingredient: p = -p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8116/DfpField.java
Used ingredient: pc = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8117/DfpField.java
Used ingredient: swapR = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8118/DfpField.java
Used ingredient: isav = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8119/DfpField.java
Used ingredient: p[i] = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8120/DfpField.java
Used ingredient: s1 = s2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8121/DfpField.java
Used ingredient: p *= x2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8122/DfpField.java
Used ingredient: lo = hi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8123/DfpField.java
Used ingredient: sum = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8124/DfpField.java
Used ingredient: s = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8125/DfpField.java
Used ingredient: pos = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8126/DfpField.java
Used ingredient: shf = p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8127/DfpField.java
Used ingredient: row = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8128/DfpField.java
Used ingredient: pos = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8129/DfpField.java
Used ingredient: p += dp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8130/DfpField.java
Used ingredient: p1 = p2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8131/DfpField.java
Used ingredient: exp = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8132/DfpField.java
Used ingredient: exp = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8133/DfpField.java
Used ingredient: pa = pc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8134/DfpField.java
Used ingredient: pb = pc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8135/DfpField.java
Used ingredient: p >>= 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8136/DfpField.java
Used ingredient: pmc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8137/DfpField.java
Used ingredient: p0 = p1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8138/DfpField.java
Used ingredient: p2 = p1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8139/DfpField.java
Used ingredient: slope = a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8140/DfpField.java
Used ingredient: tmp2 = ti;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8141/DfpField.java
Used ingredient: tmp4 = ti;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8142/DfpField.java
Used ingredient: i += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8143/DfpField.java
Used ingredient: r = ra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8144/DfpField.java
Used ingredient: f += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8145/DfpField.java
Used ingredient: f += 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8146/DfpField.java
Used ingredient: a = -a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8147/DfpField.java
Used ingredient: ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8148/DfpField.java
Used ingredient: l += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8149/DfpField.java
Used ingredient: f = -f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8150/DfpField.java
Used ingredient: i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8151/DfpField.java
Used ingredient: k = ks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8152/DfpField.java
Used ingredient: dx = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8153/DfpField.java
Used ingredient: c = a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8154/DfpField.java
Used ingredient: a = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8155/DfpField.java
Used ingredient: xa = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8156/DfpField.java
Used ingredient: e = d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8157/DfpField.java
Used ingredient: k += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8158/DfpField.java
Used ingredient: q += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8159/DfpField.java
Used ingredient: u = -t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8160/DfpField.java
Used ingredient: b += d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8161/DfpField.java
Used ingredient: t = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8162/DfpField.java
Used ingredient: y = x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8163/DfpField.java
Used ingredient: x = -x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8164/DfpField.java
Used ingredient: x = 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8165/DfpField.java
Used ingredient: b = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8166/DfpField.java
Used ingredient: u /= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8167/DfpField.java
Used ingredient: u *= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8168/DfpField.java
Used ingredient: x1 = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8169/DfpField.java
Used ingredient: t0 = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8170/DfpField.java
Used ingredient: v = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8171/DfpField.java
Used ingredient: v *= t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8172/DfpField.java
Used ingredient: z = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8173/DfpField.java
Used ingredient: r2 = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8174/DfpField.java
Used ingredient: t = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8175/DfpField.java
Used ingredient: v /= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8176/DfpField.java
Used ingredient: q *= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8177/DfpField.java
Used ingredient: w = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8178/DfpField.java
Used ingredient: x2 = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8179/DfpField.java
Used ingredient: v *= x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8180/DfpField.java
Used ingredient: e = -e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8181/DfpField.java
Used ingredient: ae = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8182/DfpField.java
Used ingredient: a = lo;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8183/DfpField.java
Used ingredient: n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8184/DfpField.java
Used ingredient: a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8185/DfpField.java
Used ingredient: b = lo;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8186/DfpField.java
Used ingredient: a = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8187/DfpField.java
Used ingredient: a = b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8188/DfpField.java
Used ingredient: a = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8189/DfpField.java
Used ingredient: r = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8190/DfpField.java
Used ingredient: d = m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8191/DfpField.java
Used ingredient: u = -u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8192/DfpField.java
Used ingredient: b = -b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8193/DfpField.java
Used ingredient: h = -h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8194/DfpField.java
Used ingredient: x = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8195/DfpField.java
Used ingredient: z = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8196/DfpField.java
Used ingredient: q = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8197/DfpField.java
Used ingredient: j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8198/DfpField.java
Used ingredient: m = -m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8199/DfpField.java
Used ingredient: k = -m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8200/DfpField.java
SuspiciousModificationPoint:           break;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 551
Used ingredient: //break;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8201/DfpField.java
Used ingredient: beta);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8202/DfpField.java
Used ingredient: rank++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8203/DfpField.java
Used ingredient: break ITEM;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8204/DfpField.java
Used ingredient: r = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8205/DfpField.java
Used ingredient: rand);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8206/DfpField.java
Used ingredient: true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8207/DfpField.java
Used ingredient: ++rnk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8208/DfpField.java
Used ingredient: break method;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8209/DfpField.java
Used ingredient: rank = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8210/DfpField.java
Used ingredient: rank = k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8211/DfpField.java
Used ingredient: b = remA;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8212/DfpField.java
Used ingredient: beta = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8213/DfpField.java
Used ingredient: return a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8214/DfpField.java
Used ingredient: return k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8215/DfpField.java
Used ingredient: double a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8216/DfpField.java
Used ingredient: r = ra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8217/DfpField.java
Used ingredient: return;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8218/DfpField.java
Used ingredient: --walk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8219/DfpField.java
Used ingredient: ++walk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8220/DfpField.java
Used ingredient: return rank;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8221/DfpField.java
Used ingredient: return a2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8222/DfpField.java
Used ingredient: return a1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8223/DfpField.java
Used ingredient: return a3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8224/DfpField.java
Used ingredient: double fa;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8225/DfpField.java
Used ingredient: double xa;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8226/DfpField.java
Used ingredient: double ya;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8227/DfpField.java
Used ingredient: double xk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8228/DfpField.java
Used ingredient: return ranks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8229/DfpField.java
Used ingredient: bl = al;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8230/DfpField.java
Used ingredient: ret = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8231/DfpField.java
Used ingredient: xb = ab;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8232/DfpField.java
Used ingredient: ret = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8233/DfpField.java
Used ingredient: key = k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8234/DfpField.java
Used ingredient: trials);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8235/DfpField.java
Used ingredient: Entry e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8236/DfpField.java
Used ingredient: throw e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8237/DfpField.java
Used ingredient: clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8238/DfpField.java
Used ingredient: sub = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8239/DfpField.java
Used ingredient: return val;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8240/DfpField.java
Used ingredient: return a.F;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8241/DfpField.java
Used ingredient: double ret;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8242/DfpField.java
Used ingredient: return var;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8243/DfpField.java
Used ingredient: return map;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8244/DfpField.java
Used ingredient: return NaN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8245/DfpField.java
Used ingredient: return max;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8246/DfpField.java
Used ingredient: return key;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8247/DfpField.java
Used ingredient: double fac;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8248/DfpField.java
Used ingredient: (nobs - rank);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8249/DfpField.java
Used ingredient: s = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8250/DfpField.java
Used ingredient: s = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8251/DfpField.java
Used ingredient: c = a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8252/DfpField.java
Used ingredient: a = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8253/DfpField.java
Used ingredient: e = d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8254/DfpField.java
Used ingredient: b = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8255/DfpField.java
Used ingredient: z = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8256/DfpField.java
Used ingredient: a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8257/DfpField.java
Used ingredient: a = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8258/DfpField.java
Used ingredient: a = b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8259/DfpField.java
Used ingredient: a = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8260/DfpField.java
Used ingredient: b = u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8261/DfpField.java
Used ingredient: b = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8262/DfpField.java
Used ingredient: r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8263/DfpField.java
Used ingredient: k = j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8264/DfpField.java
Used ingredient: ksav = k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8265/DfpField.java
Used ingredient: fbeg = f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8266/DfpField.java
Used ingredient: ya = -ra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8267/DfpField.java
Used ingredient: ret = s1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8268/DfpField.java
Used ingredient: xbar = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8269/DfpField.java
Used ingredient: yb = -rb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8270/DfpField.java
Used ingredient: mean = p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8271/DfpField.java
Used ingredient: e[k] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8272/DfpField.java
Used ingredient: ybar = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8273/DfpField.java
Used ingredient: knew = k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8274/DfpField.java
Used ingredient: Dfp r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8275/DfpField.java
Used ingredient: beta *= inv;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8276/DfpField.java
Used ingredient: ret = a * b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8277/DfpField.java
Used ingredient: ret = a - b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8278/DfpField.java
Used ingredient: ret = a + b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8279/DfpField.java
Used ingredient: oldb = beta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8280/DfpField.java
Used ingredient: b[i][r] = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8281/DfpField.java
Used ingredient: bred -= 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8282/DfpField.java
Used ingredient: beta = ZERO;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8283/DfpField.java
Used ingredient: return i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8284/DfpField.java
Used ingredient: int e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8285/DfpField.java
Used ingredient: int b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8286/DfpField.java
Used ingredient: int k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8287/DfpField.java
Used ingredient: a, b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8288/DfpField.java
Used ingredient: seed);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8289/DfpField.java
Used ingredient: mean =
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8290/DfpField.java
Used ingredient: exp++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8291/DfpField.java
Used ingredient: --exp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8292/DfpField.java
Used ingredient: exp--;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8293/DfpField.java
Used ingredient: ptr++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8294/DfpField.java
Used ingredient: state = 20; break;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8295/DfpField.java
Used ingredient: state = 30; break;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8296/DfpField.java
Used ingredient: state = 60; break;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8297/DfpField.java
Used ingredient: state = 50; break;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8298/DfpField.java
Used ingredient: state = 90; break;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8299/DfpField.java
Used ingredient: gamma *= betak;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8300/DfpField.java
SuspiciousModificationPoint:         if (buf[i] >= '0' && buf[i] <= '9' && !leading) {
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 554
Used ingredient: if (buf[i] >= '0' && buf[i] <= '9' && i < sp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8301/DfpField.java
Used ingredient: if (buf[i] >= '1' && buf[i] <= '9') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8302/DfpField.java
Used ingredient: if (observed1[i] == 0 && observed2[i] == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8303/DfpField.java
Used ingredient: if (fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8304/DfpField.java
Used ingredient: if ((fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8305/DfpField.java
Used ingredient: if ((values[i] > cutoff) == booleanDirection) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8306/DfpField.java
Used ingredient: if ((lmDiag[j] == 0) && (nSing == solvedCols)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8307/DfpField.java
Used ingredient: for (int k = 0; s != null && k < s.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8308/DfpField.java
Used ingredient: if (y > 0 && y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8309/DfpField.java
Used ingredient: if (!(beta >= -1d && beta <= 1d)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8310/DfpField.java
Used ingredient: if (iact >= 0 && isav == iu) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8311/DfpField.java
Used ingredient: if (inputSigma[i] > uB[i] - lB[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8312/DfpField.java
Used ingredient: if (y < 0 && y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8313/DfpField.java
Used ingredient: if (fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8314/DfpField.java
Used ingredient: if ((nbPoints > 2) && (end - start != nbPoints)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8315/DfpField.java
Used ingredient: if (states[index] != FULL || keys[index] == key) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8316/DfpField.java
Used ingredient: if (lsbthreshold <= 1 && digits == 4 * mant.length - 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8317/DfpField.java
Used ingredient: if (termJ[1] == termK[1] && termJ[2] == termK[2]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8318/DfpField.java
Used ingredient: for (int i = 0; i < olsBeta.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8319/DfpField.java
Used ingredient: for (int i = 0; i < correlated.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8320/DfpField.java
Used ingredient: for (int i = 0; i < derivatives.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8321/DfpField.java
Used ingredient: for (int i = 0; i < tableau.getHeight(); i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8322/DfpField.java
Used ingredient: for (int i = 0; i < interpolatedY.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8323/DfpField.java
Used ingredient: for (int i = 0; i < estimatedMean.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8324/DfpField.java
Used ingredient: for (int i = 0; i < problem.target.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8325/DfpField.java
Used ingredient: for (int j = 0; j < f1[i].length; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8326/DfpField.java
Used ingredient: for (int i = 0; i < scaled.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8327/DfpField.java
Used ingredient: for (int i = 0; i < scaled.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8328/DfpField.java
Used ingredient: for (int i = 0; i < gradient.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8329/DfpField.java
Used ingredient: for (int i = 0; i < filtered.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8330/DfpField.java
Used ingredient: for (int i = 0; i < bandwidths.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8331/DfpField.java
Used ingredient: for (int i = 0; i < normalized.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8332/DfpField.java
Used ingredient: for (int i = begin; i < begin + length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8333/DfpField.java
Used ingredient: for (int i = 0; i < EulerOrders.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8334/DfpField.java
Used ingredient: for (int i = 0, j = 0; i < input.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8335/DfpField.java
Used ingredient: for (int i = 0; i < shiftedPoint.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8336/DfpField.java
Used ingredient: for (int i = 0; i < selectedRows.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8337/DfpField.java
Used ingredient: if (basis != null ? basis.length == DIM : false)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8338/DfpField.java
Used ingredient: for (int i = 0; i < data.length && n > 0; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8339/DfpField.java
Used ingredient: for (int i = 0; i < normalization.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8340/DfpField.java
Used ingredient: for (int i = 0; i < preMultiplied.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8341/DfpField.java
Used ingredient: for (int j = 0; j < subSamples[i].length; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8342/DfpField.java
Used ingredient: if (rh != 0 && (asign == bsign)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8343/DfpField.java
Used ingredient: if (i == 4 || cur == length - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8344/DfpField.java
Used ingredient: return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8345/DfpField.java
Used ingredient: if ((i >= end) || (work[i] > value)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8346/DfpField.java
Used ingredient: while ((i < j) && (work[i] < value)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8347/DfpField.java
Used ingredient: if (basicRow != null && basicRow == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8348/DfpField.java
Used ingredient: if (cur == length || offset == length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8349/DfpField.java
Used ingredient: if (i < 0 || i >= this.parameters.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8350/DfpField.java
Used ingredient: while ((i >= 0) && (curr.getX() < mI.getX())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8351/DfpField.java
Used ingredient: f[i] = (((k & 0x1) == 0) ? -scaledX : scaledX) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8352/DfpField.java
Used ingredient: if (i > 0 && variablesToInclude[i] == variablesToInclude[i - 1]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8353/DfpField.java
Used ingredient: if (plusChar[0] != null && !plusChar[0].isEmpty()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8354/DfpField.java
Used ingredient: if (plusChar[1] != null && !plusChar[1].isEmpty()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8355/DfpField.java
Used ingredient: } else if (states[index] == FULL && keys[index] == key) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8356/DfpField.java
Used ingredient: for (int i = 0; i < realEigenvalues.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8357/DfpField.java
Used ingredient: for (int i = 0; i < realEigenvalues.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8358/DfpField.java
Used ingredient: for (int i = 0; i < rebuiltVertices.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8359/DfpField.java
Used ingredient: for (int l = 1; equals && l < termJ.length; ++l) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8360/DfpField.java
Used ingredient: for (int i = 0; i < multIndirection.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8361/DfpField.java
Used ingredient: while (inserted == null && index < edges.size()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8362/DfpField.java
Used ingredient: if (!bounds.firstIncluded() && firstTime == lastTime) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8363/DfpField.java
Used ingredient: for (int j = 0; j < rebuiltVertices[i].length; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8364/DfpField.java
Used ingredient: for (int l = 0; (! inSegment) && (l < length); ++l) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8365/DfpField.java
Used ingredient: if (index < 0 || index >= this.parameters.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8366/DfpField.java
Used ingredient: if (column < 0 || column >= getColumnDimension()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8367/DfpField.java
Used ingredient: for (int diag = 0; diag <= parameters + order; ++diag) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8368/DfpField.java
Used ingredient: if (weights != null && weights.length != bases.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8369/DfpField.java
Used ingredient: for (double i = 0; i < samples; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8370/DfpField.java
Used ingredient: for (int i = 0; i < real.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8371/DfpField.java
Used ingredient: for (int i = 0; i < beta.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8372/DfpField.java
Used ingredient: for (int i = 0; i < mean.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8373/DfpField.java
Used ingredient: for (int i = 0; i < ranks.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8374/DfpField.java
Used ingredient: return (x >= 0 && x <= 5) ? value : 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8375/DfpField.java
Used ingredient: for (int i = 0; i < errfac.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8376/DfpField.java
Used ingredient: for (int i = 0; i < special.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8377/DfpField.java
Used ingredient: for (int i = 0; i < observed.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8378/DfpField.java
Used ingredient: for (int i = 0; i < largeSampleSize; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8379/DfpField.java
Used ingredient: while ((i >= begin) && (saved < work[i])) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8380/DfpField.java
Used ingredient: for (int i = 0; i < refValues.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8381/DfpField.java
Used ingredient: for (int i = 0; i < residuals.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8382/DfpField.java
Used ingredient: for (int i = 0; i < residuals.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8383/DfpField.java
Used ingredient: for (int i = 0; i < testArray.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8384/DfpField.java
Used ingredient: for (int i = 0; i < observed1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8385/DfpField.java
Used ingredient: for (int j = 0; j < generated.length; ++j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8386/DfpField.java
Used ingredient: for (int i = 0; i < testValues.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8387/DfpField.java
Used ingredient: for (int i = 0; i < length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8388/DfpField.java
Used ingredient: for (int i = 0; i < copiedArray.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8389/DfpField.java
Used ingredient: for (int i = 1; i <= length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8390/DfpField.java
Used ingredient: for (int i = 1; i < observations.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8391/DfpField.java
Used ingredient: for (int i = 0; i < currentState.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8392/DfpField.java
Used ingredient: for (int i = 0; i < x.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8393/DfpField.java
Used ingredient: for (int i = 0; i < x.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8394/DfpField.java
Used ingredient: for (int i = 0; i < a.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8395/DfpField.java
Used ingredient: for (int i = 0; i < a.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8396/DfpField.java
Used ingredient: for (int i = 0; i < f.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8397/DfpField.java
Used ingredient: for (int i = 0; i < f.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8398/DfpField.java
Used ingredient: for (int i = 0; i < s.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8399/DfpField.java
Used ingredient: for (int i = 0; i < s.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8400/DfpField.java
SuspiciousModificationPoint:             sig ++;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 555
Used ingredient: sign = +1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8401/DfpField.java
Used ingredient: i += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8402/DfpField.java
Used ingredient: idx++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8403/DfpField.java
Used ingredient: its++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8404/DfpField.java
Used ingredient: ih++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8405/DfpField.java
Used ingredient: i++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8406/DfpField.java
Used ingredient: nsqd++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8407/DfpField.java
Used ingredient: pos2++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8408/DfpField.java
Used ingredient: sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8409/DfpField.java
Used ingredient: i++; j++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8410/DfpField.java
Used ingredient: sign = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8411/DfpField.java
Used ingredient: index++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8412/DfpField.java
Used ingredient: b.sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8413/DfpField.java
Used ingredient: a.sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8414/DfpField.java
Used ingredient: sswg += ss;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8415/DfpField.java
Used ingredient: sum += d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8416/DfpField.java
Used ingredient: sum += u;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8417/DfpField.java
Used ingredient: sum += v;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8418/DfpField.java
Used ingredient: intVal++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8419/DfpField.java
Used ingredient: b += d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8420/DfpField.java
Used ingredient: ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8421/DfpField.java
Used ingredient: s = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8422/DfpField.java
Used ingredient: s = sa;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8423/DfpField.java
Used ingredient: r += i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8424/DfpField.java
Used ingredient: i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8425/DfpField.java
Used ingredient: f += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8426/DfpField.java
Used ingredient: f += 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8427/DfpField.java
Used ingredient: i - 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8428/DfpField.java
Used ingredient: int ui;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8429/DfpField.java
Used ingredient: int iu;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8430/DfpField.java
Used ingredient: long y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8431/DfpField.java
Used ingredient: sp = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8432/DfpField.java
Used ingredient: s = r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8433/DfpField.java
Used ingredient: int e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8434/DfpField.java
Used ingredient: int b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8435/DfpField.java
Used ingredient: int k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8436/DfpField.java
Used ingredient: k += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8437/DfpField.java
Used ingredient: j += k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8438/DfpField.java
Used ingredient: int ae;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8439/DfpField.java
Used ingredient: int ks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8440/DfpField.java
Used ingredient: int lr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8441/DfpField.java
Used ingredient: s = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8442/DfpField.java
Used ingredient: int i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8443/DfpField.java
Used ingredient: int l;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8444/DfpField.java
Used ingredient: int p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8445/DfpField.java
Used ingredient: int y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8446/DfpField.java
Used ingredient: int m;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8447/DfpField.java
Used ingredient: int q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8448/DfpField.java
Used ingredient: i, j);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8449/DfpField.java
Used ingredient: s = -s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8450/DfpField.java
Used ingredient: s = s1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8451/DfpField.java
Used ingredient: p += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8452/DfpField.java
Used ingredient: l += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8453/DfpField.java
Used ingredient: q += 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8454/DfpField.java
Used ingredient: int ix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8455/DfpField.java
Used ingredient: int _i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8456/DfpField.java
Used ingredient: int m2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8457/DfpField.java
Used ingredient: int m1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8458/DfpField.java
Used ingredient: int _j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8459/DfpField.java
Used ingredient: rank++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8460/DfpField.java
Used ingredient: ++end;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8461/DfpField.java
Used ingredient: --size;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8462/DfpField.java
Used ingredient: ++size;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8463/DfpField.java
Used ingredient: ++iter;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8464/DfpField.java
Used ingredient: ++idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8465/DfpField.java
Used ingredient: ++off;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8466/DfpField.java
Used ingredient: ++rnk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8467/DfpField.java
Used ingredient: ++walk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8468/DfpField.java
Used ingredient: exp++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8469/DfpField.java
Used ingredient: e++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8470/DfpField.java
Used ingredient: ++nobs;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8471/DfpField.java
Used ingredient: ++nact;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8472/DfpField.java
Used ingredient: ++next;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8473/DfpField.java
Used ingredient: ++i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8474/DfpField.java
Used ingredient: cnt++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8475/DfpField.java
Used ingredient: num++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8476/DfpField.java
Used ingredient: n++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8477/DfpField.java
Used ingredient: ++n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8478/DfpField.java
Used ingredient: ptr++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8479/DfpField.java
Used ingredient: row++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8480/DfpField.java
Used ingredient: r++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8481/DfpField.java
Used ingredient: ++r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8482/DfpField.java
Used ingredient: ++k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8483/DfpField.java
Used ingredient: k++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8484/DfpField.java
Used ingredient: ++pos;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8485/DfpField.java
Used ingredient: p2++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8486/DfpField.java
Used ingredient: p++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8487/DfpField.java
Used ingredient: ++m2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8488/DfpField.java
Used ingredient: ++x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8489/DfpField.java
Used ingredient: ++m1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8490/DfpField.java
Used ingredient: c++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8491/DfpField.java
Used ingredient: ++j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8492/DfpField.java
Used ingredient: j++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8493/DfpField.java
Used ingredient: q++;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8494/DfpField.java
Used ingredient: ++pos2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8495/DfpField.java
Used ingredient: ++pos1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8496/DfpField.java
Used ingredient: int sig = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8497/DfpField.java
Used ingredient: pos = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8498/DfpField.java
Used ingredient: iflag = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8499/DfpField.java
Used ingredient: sumX += x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8500/DfpField.java
SuspiciousModificationPoint:       result[0] = new Dfp(this, new String(buf, 0, sp));
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 559
Used ingredient: result[0] = field.newDfp(new String(buf, 0, sp));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8501/DfpField.java
Used ingredient: result[1] = new Dfp(this, new String(buf));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8502/DfpField.java
Used ingredient: result[1] = field.newDfp(new String(buf));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8503/DfpField.java
Used ingredient: ln10           = new Dfp(this, ln10String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8504/DfpField.java
Used ingredient: sqr2Reciprocal = new Dfp(this, sqr2ReciprocalString);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8505/DfpField.java
Used ingredient: sqr3Reciprocal = new Dfp(this, sqr3ReciprocalString);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8506/DfpField.java
Used ingredient: e              = new Dfp(this, eString);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8507/DfpField.java
Used ingredient: ln2            = new Dfp(this, ln2String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8508/DfpField.java
Used ingredient: ln5            = new Dfp(this, ln5String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8509/DfpField.java
Used ingredient: Line l = new Line(p1, new Vector3D(0, 0, 2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8510/DfpField.java
Used ingredient: return new String(buffer, q, p - q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8511/DfpField.java
Used ingredient: return new String(outputbuffer, 0, 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8512/DfpField.java
Used ingredient: return new String(outputbuffer, 0, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8513/DfpField.java
Used ingredient: sqr2           = new Dfp(this, sqr2String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8514/DfpField.java
Used ingredient: sqr3           = new Dfp(this, sqr3String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8515/DfpField.java
Used ingredient: Plane p = new Plane(p1, new Vector3D(0.2, 0, 0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8516/DfpField.java
Used ingredient: return new Dfp(this, sign, nans);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8517/DfpField.java
Used ingredient: result = integrator.integrate(100, f, min, max);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8518/DfpField.java
Used ingredient: result = integrator.integrate(1000, f, min, max);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8519/DfpField.java
Used ingredient: result = integrator.integrate(10000, f, min, max);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8520/DfpField.java
Used ingredient: pi             = new Dfp(this, piString);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8521/DfpField.java
Used ingredient: dsA[i] = new DerivativeStructure(a.length, 0, a[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8522/DfpField.java
Used ingredient: dsX[i] = new DerivativeStructure(1, 1, 0, x[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8523/DfpField.java
Used ingredient: return DfpMath.pow(this, newInstance(p));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8524/DfpField.java
Used ingredient: return new SubLine(this, new IntervalsSet());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8525/DfpField.java
Used ingredient: return new SubPlane(this, new PolygonsSet());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8526/DfpField.java
Used ingredient: dsV[i] = new DerivativeStructure(0, 0, variables[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8527/DfpField.java
Used ingredient: Assert.assertEquals("0.", new Dfp(field, 0).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8528/DfpField.java
Used ingredient: dist = new TriangularDistribution(0, 0.5, 1.0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8529/DfpField.java
Used ingredient: dsX[i] = new DerivativeStructure(1, 1, x[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8530/DfpField.java
Used ingredient: dsX[i] = new DerivativeStructure(n, 1, i, x[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8531/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, 0.85, 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8532/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, 0.2, 0.6);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8533/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, 0.8, 1.2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8534/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, 0.3, 0.7);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8535/DfpField.java
Used ingredient: Line l2 = new Line(new Vector2D(-1.0, 2.0), 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8536/DfpField.java
Used ingredient: result[1] = result[1] - (tmp - result[0] - zs[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8537/DfpField.java
Used ingredient: result[1] = result[1] - (tmp - result[0] - zs[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8538/DfpField.java
Used ingredient: Assert.assertEquals("0.", new Dfp(field, 0l).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8539/DfpField.java
Used ingredient: return new SphericalCoordinates(new Vector3D(x, y, z));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8540/DfpField.java
Used ingredient: dist = new HypergeometricDistribution(1500, 40, 100);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8541/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, -0.2, 0.2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8542/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, -0.1, 0.3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8543/DfpField.java
Used ingredient: Assert.assertEquals("1.", new Dfp(field, 1).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8544/DfpField.java
Used ingredient: Segment segment = new Segment(p1, p2, new Line(p1, p2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8545/DfpField.java
Used ingredient: Plane p3 = new Plane(reference, new Vector3D(7, 0, -4));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8546/DfpField.java
Used ingredient: ParetoDistribution d = new ParetoDistribution(1, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8547/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, -0.3, 0.45);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8548/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, 0.85, 1.25);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8549/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, 0.55, 1.45);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8550/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, 0.05, 0.95);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8551/DfpField.java
Used ingredient: result = UnivariateSolverUtils.solve(f, 0.85, 1.75);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8552/DfpField.java
Used ingredient: Assert.assertEquals("0.", new Dfp(field, (byte) 0).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8553/DfpField.java
Used ingredient: return new DfpDec(getField(), sign, nans);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8554/DfpField.java
Used ingredient: dist = new TriangularDistribution(0, 1, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8555/DfpField.java
Used ingredient: dist = new UniformIntegerDistribution(0, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8556/DfpField.java
Used ingredient: dist = new UniformIntegerDistribution(0, 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8557/DfpField.java
Used ingredient: dist = new TriangularDistribution(-3, 2, 12);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8558/DfpField.java
Used ingredient: result = copysign(newInstance(getZero()), this);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8559/DfpField.java
Used ingredient: points[i] = new WeightedObservedPoint(1, i, y[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8560/DfpField.java
Used ingredient: instance = new MillerUpdatingRegression(3, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8561/DfpField.java
Used ingredient: instance = new MillerUpdatingRegression(10, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8562/DfpField.java
Used ingredient: resultN = newton.solve(100, f, min, max);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8563/DfpField.java
Used ingredient: solver = new ConjugateGradient(10, 0d, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8564/DfpField.java
Used ingredient: solver = new ConjugateGradient(10, 0., false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8565/DfpField.java
Used ingredient: public Dfp newDfp(final String s) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8566/DfpField.java
Used ingredient: model = new MillerUpdatingRegression(6, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8567/DfpField.java
Used ingredient: result = result * 31 + MathUtils.hash(getMin());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8568/DfpField.java
Used ingredient: return new HypergeometricDistribution(10, 5, 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8569/DfpField.java
Used ingredient: return new DerivativeStructure(2, 1, 0, x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8570/DfpField.java
Used ingredient: return new DerivativeStructure(4, 1, 3, alpha);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8571/DfpField.java
Used ingredient: new Floor(), new Rint(), new Signum(), new Ulp()
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8572/DfpField.java
Used ingredient: e = new NonMonotonicSequenceException(-1, 0, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8573/DfpField.java
Used ingredient: checkVector(r.getAxis(), new Vector3D(s, s, s));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8574/DfpField.java
Used ingredient: checkVector(r.getAxis(), new Vector3D(0, 0, -1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8575/DfpField.java
Used ingredient: Assert.assertEquals("1.", new Dfp(field, 1l).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8576/DfpField.java
Used ingredient: pinf = new DfpDec(field, 1).divide(new DfpDec(field, 0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8577/DfpField.java
Used ingredient: Plane p1 = new Plane(reference, new Vector3D(1, 3, 3));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8578/DfpField.java
Used ingredient: result = result * 31 + MathUtils.hash(getVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8579/DfpField.java
Used ingredient: dist = new HypergeometricDistribution(3000, 55, 200);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8580/DfpField.java
Used ingredient: final Quaternion qNul = new Quaternion(0, 0, 0, 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8581/DfpField.java
Used ingredient: return new Vector3D(1, this, factor, (Vector3D) v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8582/DfpField.java
Used ingredient: dsPoint[i] = new DerivativeStructure(nC, 1, i, params[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8583/DfpField.java
Used ingredient: imAppendTo = formatImaginary(im, new StringBuffer(), pos);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8584/DfpField.java
Used ingredient: Assert.assertEquals("-1.", new Dfp(field, -1).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8585/DfpField.java
Used ingredient: ninf = new DfpDec(field, -1).divide(new DfpDec(field, 0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8586/DfpField.java
Used ingredient: test(new DfpDec(field, 0).nextAfter(new DfpDec(field, 0)),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8587/DfpField.java
Used ingredient: Plane p2 = new Plane(reference, new Vector3D(-2, 4, 0));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8588/DfpField.java
Used ingredient: Assert.assertEquals("1.", new Dfp(field, (byte) 1).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8589/DfpField.java
Used ingredient: StringTokenizer st = new StringTokenizer(line, " ");
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8590/DfpField.java
Used ingredient: FDistribution f = new FDistribution(200000, 200000);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8591/DfpField.java
Used ingredient: return new LinearConstraint(lhs, relationship, rhs);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8592/DfpField.java
Used ingredient: result = result && (other.startIndex == startIndex);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8593/DfpField.java
Used ingredient: return new Vector3D(1, this, -factor, (Vector3D) v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8594/DfpField.java
Used ingredient: imAppendTo = formatImaginary(-im, new StringBuffer(), pos);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8595/DfpField.java
Used ingredient: Assert.assertEquals("-1.", new Dfp(field, -1l).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8596/DfpField.java
Used ingredient: Line l2 = new Line(new Vector2D(1, 2), new Vector2D(0, 1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8597/DfpField.java
Used ingredient: resultB = bracketing.solve(100, f, min, max);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8598/DfpField.java
Used ingredient: dist = new NormalDistribution(0, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8599/DfpField.java
Used ingredient: dist = new ZipfDistribution(2, 0.5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8600/DfpField.java
SuspiciousModificationPoint:       for (int i = 0; i < buf.length; i++) {
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 561
Used ingredient: for (int i = 0; i < out.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8601/DfpField.java
Used ingredient: for (int i = 0; i < f.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8602/DfpField.java
Used ingredient: for (int i = 0; i < u.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8603/DfpField.java
Used ingredient: for (int i = 0; i < beta.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8604/DfpField.java
Used ingredient: for (int i = 0; i < in.length; i ++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8605/DfpField.java
Used ingredient: for (int i = 0; i < sin.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8606/DfpField.java
Used ingredient: for (int i = 0; i < sig.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8607/DfpField.java
Used ingredient: for (int i = 0; i < n.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8608/DfpField.java
Used ingredient: for (int i = 0; i < in.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8609/DfpField.java
Used ingredient: for (int i = 0; i < arr.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8610/DfpField.java
Used ingredient: for (int i = 0; i < ref.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8611/DfpField.java
Used ingredient: for (int i = 0; i < x.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8612/DfpField.java
Used ingredient: for (int i = 0; i < a.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8613/DfpField.java
Used ingredient: for (int i = 0; i < f.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8614/DfpField.java
Used ingredient: for (int i = 0; i < s.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8615/DfpField.java
Used ingredient: for (int i = 0; i < p.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8616/DfpField.java
Used ingredient: for (int i = 0; i < d.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8617/DfpField.java
Used ingredient: for (int i = 0; i < m.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8618/DfpField.java
Used ingredient: for (int i = 0; i < b.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8619/DfpField.java
Used ingredient: for (int i = 0; i < k.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8620/DfpField.java
Used ingredient: for (int i = 0; i < v.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8621/DfpField.java
Used ingredient: for (int i = 1; i < f.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8622/DfpField.java
Used ingredient: for (int i = 0; i < f1.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8623/DfpField.java
Used ingredient: for (int i = 0; i < p1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8624/DfpField.java
Used ingredient: for (int i = 0; i < sub.length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8625/DfpField.java
Used ingredient: for (int i = 0; i < val.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8626/DfpField.java
Used ingredient: for (int i = 0; i < cos.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8627/DfpField.java
Used ingredient: for (int i = 0; i < sub.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8628/DfpField.java
Used ingredient: for (int i = 0; i < input.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8629/DfpField.java
Used ingredient: for (int i = 0; i < guess.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8630/DfpField.java
Used ingredient: for (int i = 0; i < real.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8631/DfpField.java
Used ingredient: for (int i = 0; i < init.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8632/DfpField.java
Used ingredient: for (int i = 0; i < stat.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8633/DfpField.java
Used ingredient: for (int i = 0; i < data.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8634/DfpField.java
Used ingredient: for (int i = 0; i < mant.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8635/DfpField.java
Used ingredient: for (int i = 0; i < test.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8636/DfpField.java
Used ingredient: for (int i = 0; i < norm.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8637/DfpField.java
Used ingredient: for (int i = 0; i < root.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8638/DfpField.java
Used ingredient: for (int i = 0; i < xval.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8639/DfpField.java
Used ingredient: for (int i = 0; i < xAll.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8640/DfpField.java
Used ingredient: for (int i = 0; i < vals.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8641/DfpField.java
Used ingredient: for (int i = 0; i < hash.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8642/DfpField.java
Used ingredient: for (int i = 0; i < keys.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8643/DfpField.java
Used ingredient: for (int i = 0; i < r.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8644/DfpField.java
Used ingredient: for (int i = 1; i < in.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8645/DfpField.java
Used ingredient: for (int i = 0; i < length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8646/DfpField.java
Used ingredient: for (int i = 0; i < x.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8647/DfpField.java
Used ingredient: for (int i = 0; i < a.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8648/DfpField.java
Used ingredient: for (int i = 0; i < s.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8649/DfpField.java
Used ingredient: for (int i = 0; i < p.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8650/DfpField.java
Used ingredient: for (int i = 0; i < z.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8651/DfpField.java
Used ingredient: for (int i = 0; i < m.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8652/DfpField.java
Used ingredient: for (int i = 0; i < y.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8653/DfpField.java
Used ingredient: for (int i = 0; i < v.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8654/DfpField.java
Used ingredient: for (int i = 1; i < f.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8655/DfpField.java
Used ingredient: for (int i = 2; i < f.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8656/DfpField.java
Used ingredient: for (int i = 1; i < s.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8657/DfpField.java
Used ingredient: for (int i = 0; i < cE.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8658/DfpField.java
Used ingredient: for (int i = 0; i < dX.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8659/DfpField.java
Used ingredient: for (int i = 0; i < dY.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8660/DfpField.java
Used ingredient: for (int i = 0; i < y0.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8661/DfpField.java
Used ingredient: for (int i = 0; i < dsY.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8662/DfpField.java
Used ingredient: for (int i = 0; i < l40.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8663/DfpField.java
Used ingredient: for (int i = 0; i < actual.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8664/DfpField.java
Used ingredient: for (int i = 0; i < result.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8665/DfpField.java
Used ingredient: for (int i = 0; i < source.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8666/DfpField.java
Used ingredient: for (int i = 0; i < values.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8667/DfpField.java
Used ingredient: for (int i = 0; i < labels.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8668/DfpField.java
Used ingredient: for (int i = 0; i < after.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8669/DfpField.java
Used ingredient: for (int i = 0; i < ranks.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8670/DfpField.java
Used ingredient: for (int i = 0; i < data2.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8671/DfpField.java
Used ingredient: for (int i = 0; i < dataU.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8672/DfpField.java
Used ingredient: for (int i = 0; i < dataC.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8673/DfpField.java
Used ingredient: for (int i = 0; i < data1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8674/DfpField.java
Used ingredient: for (int i = 0; i < knots.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8675/DfpField.java
Used ingredient: for (int i = 0; i < types.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8676/DfpField.java
Used ingredient: for(int i = 0; i < actual.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8677/DfpField.java
Used ingredient: for (int i = 0; i < value.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8678/DfpField.java
Used ingredient: for (int i = 0; i < mean.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8679/DfpField.java
Used ingredient: for (int i = 0; i < main.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8680/DfpField.java
Used ingredient: for (int i = 0; i < init.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8681/DfpField.java
Used ingredient: for (int i = 0; i < tmp2.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8682/DfpField.java
Used ingredient: for (int i = 0; i < yDot.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8683/DfpField.java
Used ingredient: for (int i = 0; i < last.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8684/DfpField.java
Used ingredient: for (int i = 0; i < data.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8685/DfpField.java
Used ingredient: for (int i = 0; i < data1.length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8686/DfpField.java
Used ingredient: for (int i = 0; i < xval.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8687/DfpField.java
Used ingredient: for (int i = 0; i < loop.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8688/DfpField.java
Used ingredient: for (int i = start; i < length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8689/DfpField.java
Used ingredient: for( int i = 0 ; i < x.length ; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8690/DfpField.java
Used ingredient: for(int i = 0; i < res.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8691/DfpField.java
Used ingredient: for (int i = 0; i < length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8692/DfpField.java
Used ingredient: for (int i = 1; i <= length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8693/DfpField.java
Used ingredient: for (int i = 1; i < y.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8694/DfpField.java
Used ingredient: for( int i = 0 ; i < x.length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8695/DfpField.java
Used ingredient: for (int n = 0; n < f.length; ++n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8696/DfpField.java
Used ingredient: for (int i = 0; i < oldLength; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8697/DfpField.java
Used ingredient: for (int i = 0; i < lowLength; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8698/DfpField.java
Used ingredient: for(int i = 0; i < xval.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8699/DfpField.java
Used ingredient: for (int j = 0; j < f.length; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8700/DfpField.java
SuspiciousModificationPoint:         buf[i] = a.charAt(i);
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 562
Used ingredient: cloud[i] = create();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8701/DfpField.java
Used ingredient: f[i] = p[i].value(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8702/DfpField.java
Used ingredient: y[i] = f.value(x[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8703/DfpField.java
Used ingredient: f[i] = f[i].add(tmp2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8704/DfpField.java
Used ingredient: out[i] /= v.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8705/DfpField.java
Used ingredient: out[i] *= v.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8706/DfpField.java
Used ingredient: out[i] = data[i].add(d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8707/DfpField.java
Used ingredient: fHi  = f.value(xHi);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8708/DfpField.java
Used ingredient: if (buf[i] == '.') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8709/DfpField.java
Used ingredient: x[i] = f.value(t);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8710/DfpField.java
Used ingredient: f[i] = build(a[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8711/DfpField.java
Used ingredient: out[i] = getNext();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8712/DfpField.java
Used ingredient: out[i] = sample();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8713/DfpField.java
Used ingredient: r[i] -= target[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8714/DfpField.java
Used ingredient: x[i] = e.getKey();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8715/DfpField.java
Used ingredient: out[i][i] = data[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8716/DfpField.java
Used ingredient: spx[1] = a.getZero();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8717/DfpField.java
Used ingredient: e[i] = secondary[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8718/DfpField.java
Used ingredient: sumImpl[i].clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8719/DfpField.java
Used ingredient: sumSqImpl[i].clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8720/DfpField.java
Used ingredient: buf = new char[a.length()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8721/DfpField.java
Used ingredient: c = source.charAt(index++);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8722/DfpField.java
Used ingredient: jacobian[i][1] = x.get(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8723/DfpField.java
Used ingredient: data[i] = v.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8724/DfpField.java
Used ingredient: actual[i] = output.get(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8725/DfpField.java
Used ingredient: fact = fact.divide(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8726/DfpField.java
Used ingredient: values[i] = getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8727/DfpField.java
Used ingredient: a[i] = r.nextDouble();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8728/DfpField.java
Used ingredient: lu = matrix.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8729/DfpField.java
Used ingredient: values[i] = getNext();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8730/DfpField.java
Used ingredient: sumLogImpl[i].clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8731/DfpField.java
Used ingredient: striped[q] = fpdecimal.charAt(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8732/DfpField.java
Used ingredient: out[i] = data[i].subtract(d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8733/DfpField.java
Used ingredient: basis[i][k] /= Math.sqrt(sp);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8734/DfpField.java
Used ingredient: zAbs[i] = FastMath.abs(z[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8735/DfpField.java
Used ingredient: cos[i] = FastMath.cos(arg);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8736/DfpField.java
Used ingredient: se[i] = FastMath.sqrt(var);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8737/DfpField.java
Used ingredient: Dfp pi = factory.getPi();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8738/DfpField.java
Used ingredient: y[i] = x.getEntry(i) / d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8739/DfpField.java
Used ingredient: data[i] = v1.getEntry(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8740/DfpField.java
Used ingredient: f[i] = f[i].multiply(dx);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8741/DfpField.java
Used ingredient: data[i] = data[i].add(d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8742/DfpField.java
Used ingredient: y[0] = FastMath.abs(sin);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8743/DfpField.java
Used ingredient: final Dfp u = y.rint();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8744/DfpField.java
Used ingredient: result = subtract(inc);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8745/DfpField.java
Used ingredient: dataR[i] = c.getReal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8746/DfpField.java
Used ingredient: double[] d = r.clone();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8747/DfpField.java
Used ingredient: diffa = Math.abs(diff);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8748/DfpField.java
Used ingredient: x[1] = getStartValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8749/DfpField.java
Used ingredient: final T x = u.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8750/DfpField.java
Used ingredient: final T y = u.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8751/DfpField.java
Used ingredient: final T z = u.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8752/DfpField.java
Used ingredient: result = Erf.erf(-i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8753/DfpField.java
Used ingredient: result = Erf.erfc(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8754/DfpField.java
Used ingredient: p[i] = new Double(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8755/DfpField.java
Used ingredient: w[i] = new Double(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8756/DfpField.java
Used ingredient: field = v.getField();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8757/DfpField.java
Used ingredient: in[0] = u.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8758/DfpField.java
Used ingredient: num = num.negate();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8759/DfpField.java
Used ingredient: xdfp = xdfp.negate();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8760/DfpField.java
Used ingredient: mant[i] = mant[i+1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8761/DfpField.java
Used ingredient: in[1] = u.getY();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8762/DfpField.java
Used ingredient: in[2] = u.getZ();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8763/DfpField.java
Used ingredient: out[i] = Double.NaN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8764/DfpField.java
Used ingredient: f = f.negate();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8765/DfpField.java
Used ingredient: f = f.multiply(fi);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8766/DfpField.java
Used ingredient: result[0] = intPart;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8767/DfpField.java
Used ingredient: mu[i] = h[i] / g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8768/DfpField.java
Used ingredient: ui = u.intValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8769/DfpField.java
Used ingredient: mant[i] = mant[i-1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8770/DfpField.java
Used ingredient: Dfp x = a.getOne();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8771/DfpField.java
Used ingredient: Dfp y = a.getOne();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8772/DfpField.java
Used ingredient: fi = fi.add(one);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8773/DfpField.java
Used ingredient: f = f.reciprocal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8774/DfpField.java
Used ingredient: f[i]  *= scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8775/DfpField.java
Used ingredient: facts[0] = -facts[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8776/DfpField.java
Used ingredient: y[0] = f.value(x[0]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8777/DfpField.java
Used ingredient: Dfp[] xs = split(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8778/DfpField.java
Used ingredient: Dfp[] spx = split(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8779/DfpField.java
Used ingredient: f = f1.subtract(f2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8780/DfpField.java
Used ingredient: facts[1] = -facts[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8781/DfpField.java
Used ingredient: A = matrix.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8782/DfpField.java
Used ingredient: f = f1.subtract(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8783/DfpField.java
Used ingredient: y[2] = f.value(x[2]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8784/DfpField.java
Used ingredient: y[1] = f.value(x[1]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8785/DfpField.java
Used ingredient: h = h ^ a.hashCode();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8786/DfpField.java
Used ingredient: xTab[i] = 0.1 * i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8787/DfpField.java
Used ingredient: ba[i][i] = main[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8788/DfpField.java
Used ingredient: double[] startPoint);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8789/DfpField.java
Used ingredient: u = w.orthogonal();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8790/DfpField.java
Used ingredient: num = Math.abs(num);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8791/DfpField.java
Used ingredient: return Math.cbrt(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8792/DfpField.java
Used ingredient: q = a.operate(p);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8793/DfpField.java
Used ingredient: y = a.operate(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8794/DfpField.java
Used ingredient: buf[i] = '0';
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8795/DfpField.java
Used ingredient: binStats.clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8796/DfpField.java
Used ingredient: minImpl[i].clear();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8797/DfpField.java
Used ingredient: buffer[p++] = '.';
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8798/DfpField.java
Used ingredient: s = FastMath.sqrt(s);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8799/DfpField.java
Used ingredient: scaled[i] *= ratio;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8800/DfpField.java
SuspiciousModificationPoint:         if (buf[i] >= '0' && buf[i] <= '9' && i < sp) {
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 563
Used ingredient: if (buf[i] >= '0' && buf[i] <= '9' && !leading) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8801/DfpField.java
Used ingredient: if (buf[i] >= '1' && buf[i] <= '9') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8802/DfpField.java
Used ingredient: if (observed1[i] == 0 && observed2[i] == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8803/DfpField.java
Used ingredient: if ((fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8804/DfpField.java
Used ingredient: if (y > 0 && y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8805/DfpField.java
Used ingredient: if (fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8806/DfpField.java
Used ingredient: if (y < 0 && y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8807/DfpField.java
Used ingredient: for (int k = 0; s != null && k < s.length; ++k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8808/DfpField.java
Used ingredient: if (iact >= 0 && isav == iu) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8809/DfpField.java
Used ingredient: return (fLo >= 0 && fHi <= 0) || (fLo <= 0 && fHi >= 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8810/DfpField.java
Used ingredient: for (int i = 0; i < data.length && n > 0; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8811/DfpField.java
Used ingredient: if ((lmDiag[j] == 0) && (nSing == solvedCols)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8812/DfpField.java
Used ingredient: if (i == j && i < p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8813/DfpField.java
Used ingredient: if (inputSigma[i] > uB[i] - lB[i]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8814/DfpField.java
Used ingredient: if (basicRow != null && basicRow == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8815/DfpField.java
Used ingredient: for (int i = -10; i <= 10; i += 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8816/DfpField.java
Used ingredient: for (int i = 0, j = 0; i < input.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8817/DfpField.java
Used ingredient: for (int i = 0; i < 4; i++, off += (i + 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8818/DfpField.java
Used ingredient: if (!(beta >= -1d && beta <= 1d)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8819/DfpField.java
Used ingredient: for (int i = 0; i < N; i += (i == 1 ? 2 : 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8820/DfpField.java
Used ingredient: } else if (1 - ninv <= d && d < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8821/DfpField.java
Used ingredient: if (fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8822/DfpField.java
Used ingredient: if (plusChar[0] != null && !plusChar[0].isEmpty()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8823/DfpField.java
Used ingredient: if (plusChar[1] != null && !plusChar[1].isEmpty()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8824/DfpField.java
Used ingredient: if ((nbPoints > 2) && (end - start != nbPoints)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8825/DfpField.java
Used ingredient: ((parl == 0) && (fp <= previousFP) && (previousFP < 0))) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8826/DfpField.java
Used ingredient: for (int i = 0, max = n * np / 2; i < max; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8827/DfpField.java
Used ingredient: for (int i = 0; i < N-1; i += (i == 0 ? 2 : 1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8828/DfpField.java
Used ingredient: if (minusChar[0] != null && !minusChar[0].isEmpty()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8829/DfpField.java
Used ingredient: if (minusChar[1] != null && !minusChar[1].isEmpty()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8830/DfpField.java
Used ingredient: if (i == 0 && x[i] < 0)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8831/DfpField.java
Used ingredient: if( x[i] == null || x[i].length == 0 ){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8832/DfpField.java
Used ingredient: if ((values[i] > cutoff) == booleanDirection) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8833/DfpField.java
Used ingredient: if (i < 0 || i >= this.parameters.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8834/DfpField.java
Used ingredient: if (y == yi && (yi & 1) == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8835/DfpField.java
Used ingredient: for (int i = 1 ; i <= 6 ; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8836/DfpField.java
Used ingredient: for (int i = data.length - 2; i >= 0; i -= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8837/DfpField.java
Used ingredient: for (int i = 3; i < 90; i += 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8838/DfpField.java
Used ingredient: for (int i = 2; i < 90; i += 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8839/DfpField.java
Used ingredient: if (df > 1 && df <= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8840/DfpField.java
Used ingredient: for (int i = 0; i <= n - 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8841/DfpField.java
Used ingredient: if (rh != 0 && (asign == bsign)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8842/DfpField.java
Used ingredient: for (int i0 = 0; i0 < n; i0 += 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8843/DfpField.java
Used ingredient: if ((magnitude >= 0 && sign >= 0) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8844/DfpField.java
Used ingredient: if (r >= lower && r <= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8845/DfpField.java
Used ingredient: while ((i >= 0) && (curr.getX() < mI.getX())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8846/DfpField.java
Used ingredient: while ((i >= begin) && (saved < work[i])) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8847/DfpField.java
Used ingredient: for (int j = 0, max = npt - np; j < max; j++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8848/DfpField.java
Used ingredient: for (double x = 0.1; x <= 2.9; x += 0.01) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8849/DfpField.java
Used ingredient: for (double b = -15.0; b <= 15.0; b += 0.2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8850/DfpField.java
Used ingredient: if (states[index] != FULL || keys[index] == key) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8851/DfpField.java
Used ingredient: if (performTest && (j <= maxChecks) && (k < maxIter)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8852/DfpField.java
Used ingredient: f[i] = (((k & 0x1) == 0) ? -scaledX : scaledX) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8853/DfpField.java
Used ingredient: if (basis != null ? basis.length == DIM : false)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8854/DfpField.java
Used ingredient: if ((parent == null) && (left == null) && (right == null)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8855/DfpField.java
Used ingredient: if (basicRow != null && basicRow.equals(row) && i < minIndex) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8856/DfpField.java
Used ingredient: if (termJ[1] == termK[1] && termJ[2] == termK[2]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8857/DfpField.java
Used ingredient: if (i > 0 && variablesToInclude[i] == variablesToInclude[i - 1]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8858/DfpField.java
Used ingredient: if (buf[i] == '.') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8859/DfpField.java
Used ingredient: f[i] = f[i].add(1.0 / (i * (i + 2)));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8860/DfpField.java
Used ingredient: for (int i = 0; i <= start; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8861/DfpField.java
Used ingredient: if (counter[i] == size[i] - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8862/DfpField.java
Used ingredient: if (counter[i] != size[i] - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8863/DfpField.java
Used ingredient: if (t == 0.0 && i >= j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8864/DfpField.java
Used ingredient: if (i == 4 || cur == length - 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8865/DfpField.java
Used ingredient: f[i] = (((k & 0x1) == 0) ? 1 : -1) *
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8866/DfpField.java
Used ingredient: for (int i = 0; i < sample.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8867/DfpField.java
Used ingredient: for (int i = 0; i < sample.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8868/DfpField.java
Used ingredient: final double a = 0.5 * (f[i] + f[n - i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8869/DfpField.java
Used ingredient: final double b = 0.5 * (f[i] - f[n - i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8870/DfpField.java
Used ingredient: for (int i = 0; i <= maxOrder; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8871/DfpField.java
Used ingredient: for (int i = 0; i <= high; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8872/DfpField.java
Used ingredient: for (int i = 0; i < steps; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8873/DfpField.java
Used ingredient: for (int i = 0; i < sample2.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8874/DfpField.java
Used ingredient: for (int i = 0; i < samples.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8875/DfpField.java
Used ingredient: for (int i = 0; i < sample1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8876/DfpField.java
Used ingredient: for (int i = 0; i < special.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8877/DfpField.java
Used ingredient: for (int i = 0; i <= fx.getOrder(); ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8878/DfpField.java
Used ingredient: for (int i = 0; i < in.length; i ++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8879/DfpField.java
Used ingredient: for (int i = 0; i <= order; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8880/DfpField.java
Used ingredient: for( int i = 0 ; i < rows ; i++ ){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8881/DfpField.java
Used ingredient: for (int i = 0; i < microsphereElements; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8882/DfpField.java
Used ingredient: for (int i = 0; i <= n; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8883/DfpField.java
Used ingredient: for (int i = 0; i <= 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8884/DfpField.java
Used ingredient: for (int i = 0; i <= j; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8885/DfpField.java
Used ingredient: for (int i = 0; i <= j; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8886/DfpField.java
Used ingredient: for (int i = 0; i < mant.length - 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8887/DfpField.java
Used ingredient: for (int i = 0; i < mant.length + 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8888/DfpField.java
Used ingredient: if (x >= 0 && x < RADIX) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8889/DfpField.java
Used ingredient: for (int i = 0; i < samples; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8890/DfpField.java
Used ingredient: for (int i = 0; i <= degree; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8891/DfpField.java
Used ingredient: for (int i = 0; i < (m - 2); ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8892/DfpField.java
Used ingredient: for (int i = 0; i < (m - 1); ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8893/DfpField.java
Used ingredient: if (Math.abs(beta[i] - betar[i]) > 1.0e-8) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8894/DfpField.java
Used ingredient: for (int i = 0; i <= iu; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8895/DfpField.java
Used ingredient: for (int i = 0; i <= jp; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8896/DfpField.java
Used ingredient: for (int i = 0; i <= pp; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8897/DfpField.java
Used ingredient: for (int i = 0; i <= 10; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8898/DfpField.java
Used ingredient: if (l == list[j] && i > next) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8899/DfpField.java
Used ingredient: for (int i = 0; i < lsbshift % 4; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8900/DfpField.java
SuspiciousModificationPoint:             buf[i] = '0';
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 564
Used ingredient: buffer[0] = ' ';
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8901/DfpField.java
Used ingredient: buffer[p++] = '0';
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8902/DfpField.java
Used ingredient: bp[i][k]  = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8903/DfpField.java
Used ingredient: b[i] = b[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8904/DfpField.java
Used ingredient: b[i][r] = e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8905/DfpField.java
Used ingredient: f[i] += tmp2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8906/DfpField.java
Used ingredient: probs[i] = p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8907/DfpField.java
Used ingredient: V[i][k] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8908/DfpField.java
Used ingredient: U[i][k] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8909/DfpField.java
Used ingredient: U[i][j] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8910/DfpField.java
Used ingredient: ret[i] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8911/DfpField.java
Used ingredient: r[_pi] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8912/DfpField.java
Used ingredient: d[i] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8913/DfpField.java
Used ingredient: f[i] *= d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8914/DfpField.java
Used ingredient: f[i] *= dx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8915/DfpField.java
Used ingredient: work[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8916/DfpField.java
Used ingredient: mant[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8917/DfpField.java
Used ingredient: mean[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8918/DfpField.java
Used ingredient: lJ[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8919/DfpField.java
Used ingredient: y[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8920/DfpField.java
Used ingredient: mu[0] = 0d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8921/DfpField.java
Used ingredient: buffer[p++] = '.';
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8922/DfpField.java
Used ingredient: buffer[--q] = '-';
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8923/DfpField.java
Used ingredient: out[i][j] = 0d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8924/DfpField.java
Used ingredient: counter[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8925/DfpField.java
Used ingredient: z[i][i] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8926/DfpField.java
Used ingredient: x[i][0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8927/DfpField.java
Used ingredient: orders[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8928/DfpField.java
Used ingredient: vector[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8929/DfpField.java
Used ingredient: upper[0] = 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8930/DfpField.java
Used ingredient: quotient[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8931/DfpField.java
Used ingredient: observed[i] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8932/DfpField.java
Used ingredient: if (buf[i] == '.') {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8933/DfpField.java
Used ingredient: r[i] = -r[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8934/DfpField.java
Used ingredient: x[i] = a - b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8935/DfpField.java
Used ingredient: d[i] = y[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8936/DfpField.java
Used ingredient: c[i] = y[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8937/DfpField.java
Used ingredient: dX[i] = x[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8938/DfpField.java
Used ingredient: dY[i] = y[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8939/DfpField.java
Used ingredient: index[i] = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8940/DfpField.java
Used ingredient: V[i][k] = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8941/DfpField.java
Used ingredient: U[i][k] = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8942/DfpField.java
Used ingredient: V[i][j] = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8943/DfpField.java
Used ingredient: U[i][j] = t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8944/DfpField.java
Used ingredient: a[i] = a[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8945/DfpField.java
Used ingredient: e[i] /= e[k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8946/DfpField.java
Used ingredient: ua[0][0] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8947/DfpField.java
Used ingredient: ua[k][k] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8948/DfpField.java
Used ingredient: sets[i] = hs;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8949/DfpField.java
Used ingredient: f[0] = coeff;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8950/DfpField.java
Used ingredient: d[i] = dpi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8951/DfpField.java
Used ingredient: p[i] = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8952/DfpField.java
Used ingredient: b[j] = temp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8953/DfpField.java
Used ingredient: suTi[j] *= a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8954/DfpField.java
Used ingredient: v[i] = comp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8955/DfpField.java
Used ingredient: in[1] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8956/DfpField.java
Used ingredient: y[0] =  1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8957/DfpField.java
Used ingredient: v[i] *= f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8958/DfpField.java
Used ingredient: f[0] += lo;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8959/DfpField.java
Used ingredient: f[0] = lo;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8960/DfpField.java
Used ingredient: y[0] = a[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8961/DfpField.java
Used ingredient: e[n - 1] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8962/DfpField.java
Used ingredient: e[k - 1] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8963/DfpField.java
Used ingredient: e[p - 2] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8964/DfpField.java
Used ingredient: e[p - 1] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8965/DfpField.java
Used ingredient: x[0] = y[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8966/DfpField.java
Used ingredient: y[0] = -y[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8967/DfpField.java
Used ingredient: y[i] = c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8968/DfpField.java
Used ingredient: dot[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8969/DfpField.java
Used ingredient: r[pos] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8970/DfpField.java
Used ingredient: r[m1] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8971/DfpField.java
Used ingredient: d[col] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8972/DfpField.java
Used ingredient: tmp[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8973/DfpField.java
Used ingredient: e[m] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8974/DfpField.java
Used ingredient: y[0] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8975/DfpField.java
Used ingredient: x[0] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8976/DfpField.java
Used ingredient: y[1] =  3.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8977/DfpField.java
Used ingredient: r[_i] /= X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8978/DfpField.java
Used ingredient: y[1] = 0.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8979/DfpField.java
Used ingredient: s[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8980/DfpField.java
Used ingredient: y[0] += 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8981/DfpField.java
Used ingredient: x[0] += 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8982/DfpField.java
Used ingredient: c[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8983/DfpField.java
Used ingredient: x[0] -= 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8984/DfpField.java
Used ingredient: dy[0] = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8985/DfpField.java
Used ingredient: xval[i] = x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8986/DfpField.java
Used ingredient: d[5] /= 4.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8987/DfpField.java
Used ingredient: y[2] = -4.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8988/DfpField.java
Used ingredient: d[i] = dI;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8989/DfpField.java
Used ingredient: p[i] *= 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8990/DfpField.java
Used ingredient: c[i+1] = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8991/DfpField.java
Used ingredient: mant[0] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8992/DfpField.java
Used ingredient: double f = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8993/DfpField.java
Used ingredient: work[j] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8994/DfpField.java
Used ingredient: double u = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8995/DfpField.java
Used ingredient: work1[j] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8996/DfpField.java
Used ingredient: bits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8997/DfpField.java
Used ingredient: termK[0] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8998/DfpField.java
Used ingredient: sc[n] = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/8999/DfpField.java
Used ingredient: c[n] = 0d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9000/DfpField.java
SuspiciousModificationPoint:       result[1] = new Dfp(this, new String(buf));
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 568
Used ingredient: result[0] = new Dfp(this, new String(buf, 0, sp));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9001/DfpField.java
Used ingredient: result[1] = field.newDfp(new String(buf));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9002/DfpField.java
Used ingredient: result[0] = field.newDfp(new String(buf, 0, sp));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9003/DfpField.java
Used ingredient: ln10           = new Dfp(this, ln10String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9004/DfpField.java
Used ingredient: e              = new Dfp(this, eString);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9005/DfpField.java
Used ingredient: ln2            = new Dfp(this, ln2String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9006/DfpField.java
Used ingredient: ln5            = new Dfp(this, ln5String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9007/DfpField.java
Used ingredient: sqr2           = new Dfp(this, sqr2String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9008/DfpField.java
Used ingredient: sqr3           = new Dfp(this, sqr3String);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9009/DfpField.java
Used ingredient: pi             = new Dfp(this, piString);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9010/DfpField.java
Used ingredient: return DfpMath.pow(this, newInstance(p));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9011/DfpField.java
Used ingredient: return new SubLine(this, new IntervalsSet());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9012/DfpField.java
Used ingredient: return new SubPlane(this, new PolygonsSet());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9013/DfpField.java
Used ingredient: sqr2Reciprocal = new Dfp(this, sqr2ReciprocalString);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9014/DfpField.java
Used ingredient: sqr3Reciprocal = new Dfp(this, sqr3ReciprocalString);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9015/DfpField.java
Used ingredient: return new Dfp(this, sign, nans);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9016/DfpField.java
Used ingredient: stat[i] = new DescriptiveStatistics();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9017/DfpField.java
Used ingredient: test(new DfpDec(field, 1).nextAfter(ninf),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9018/DfpField.java
Used ingredient: test(new DfpDec(field, 1).nextAfter(pinf),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9019/DfpField.java
Used ingredient: test(new DfpDec(field, -1).nextAfter(ninf),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9020/DfpField.java
Used ingredient: test(new DfpDec(field, -1).nextAfter(pinf),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9021/DfpField.java
Used ingredient: Line l = new Line(p1, new Vector3D(0, 0, 2));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9022/DfpField.java
Used ingredient: result[0] = a.add(shift).subtract(shift);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9023/DfpField.java
Used ingredient: TDistribution td =  new TDistribution(df);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9024/DfpField.java
Used ingredient: return new String(buffer, q, p - q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9025/DfpField.java
Used ingredient: return new String(outputbuffer, 0, 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9026/DfpField.java
Used ingredient: return new String(outputbuffer, 0, q);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9027/DfpField.java
Used ingredient: result = newInstance(getZero());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9028/DfpField.java
Used ingredient: resultN = newton.solve(100, f, min, max);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9029/DfpField.java
Used ingredient: public Dfp newDfp(final String s) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9030/DfpField.java
Used ingredient: final Dfp result = newInstance(getZero());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9031/DfpField.java
Used ingredient: return new DfpDec(getField(), sign, nans);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9032/DfpField.java
Used ingredient: this.two         = new Dfp(this, 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9033/DfpField.java
Used ingredient: Dfp result = newInstance(getZero());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9034/DfpField.java
Used ingredient: descriptives = new DescriptiveStatistics();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9035/DfpField.java
Used ingredient: GeometricMean result = new GeometricMean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9036/DfpField.java
Used ingredient: parametersNames = new ArrayList<String>();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9037/DfpField.java
Used ingredient: Assert.assertEquals("1.", new Dfp(field, 1).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9038/DfpField.java
Used ingredient: result = result * 31 + MathUtils.hash(getMin());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9039/DfpField.java
Used ingredient: subSampleStats[i] = new SummaryStatistics();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9040/DfpField.java
Used ingredient: StringBuffer outBuffer = new StringBuffer();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9041/DfpField.java
Used ingredient: final StringBuffer res = new StringBuffer();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9042/DfpField.java
Used ingredient: Assert.assertEquals("1.", new Dfp(field, 1l).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9043/DfpField.java
Used ingredient: *  result[1] is the upper bits of the remainder
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9044/DfpField.java
Used ingredient: Assert.assertEquals("-1.", new Dfp(field, -1).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9045/DfpField.java
Used ingredient: return new Dfp(this, s);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9046/DfpField.java
Used ingredient: return new Dfp(this, x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9047/DfpField.java
Used ingredient: labels[i] = Integer.toString(values[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9048/DfpField.java
Used ingredient: ranks[i] = new IntDoublePair(data[i], i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9049/DfpField.java
Used ingredient: TDistribution td = new TDistribution(5.);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9050/DfpField.java
Used ingredient: numbers[1] = Integer.parseInt(to.trim());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9051/DfpField.java
Used ingredient: result.mant[0] = aextradigit+bextradigit;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9052/DfpField.java
Used ingredient: this.zero        = new Dfp(this, 0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9053/DfpField.java
Used ingredient: FDistribution fd = new FDistribution(1, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9054/DfpField.java
Used ingredient: StringBuilder s = new StringBuilder();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9055/DfpField.java
Used ingredient: StringBuilder sb = new StringBuilder();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9056/DfpField.java
Used ingredient: StringBuilder rule = new StringBuilder();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9057/DfpField.java
Used ingredient: dist = new ExponentialDistribution(10.5d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9058/DfpField.java
Used ingredient: ParsePosition pos1 = new ParsePosition(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9059/DfpField.java
Used ingredient: result.sign = (byte) (sign * divisor.sign);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9060/DfpField.java
Used ingredient: StringBuilder out = new StringBuilder(msg);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9061/DfpField.java
Used ingredient: subPercentile result = new subPercentile();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9062/DfpField.java
Used ingredient: this.one         = new Dfp(this, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9063/DfpField.java
Used ingredient: result = result.add(newInstance(-1));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9064/DfpField.java
Used ingredient: FirstMoment result = new FirstMoment();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9065/DfpField.java
Used ingredient: ThirdMoment result = new ThirdMoment();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9066/DfpField.java
Used ingredient: dist = new ExponentialDistribution(11d);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9067/DfpField.java
Used ingredient: SemiVariance result = new SemiVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9068/DfpField.java
Used ingredient: result = result.multiply(results.get(i));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9069/DfpField.java
Used ingredient: FourthMoment result = new FourthMoment();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9070/DfpField.java
Used ingredient: int result = 31 + MathUtils.hash(getMax());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9071/DfpField.java
Used ingredient: return DfpMath.log(this.add(getOne()));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9072/DfpField.java
Used ingredient: return new ArrayRealVector(this, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9073/DfpField.java
Used ingredient: return new Decimal64(FastMath.sin(value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9074/DfpField.java
Used ingredient: return new ArrayFieldVector<T>(this, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9075/DfpField.java
Used ingredient: return new Decimal64(FastMath.rint(value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9076/DfpField.java
Used ingredient: return new Decimal64(FastMath.sinh(value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9077/DfpField.java
Used ingredient: return new Decimal64(FastMath.asin(value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9078/DfpField.java
Used ingredient: Assert.assertEquals("0.", new Dfp(field, 0).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9079/DfpField.java
Used ingredient: Assert.assertEquals("1.", new Dfp(field, (byte) 1).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9080/DfpField.java
Used ingredient: Assert.assertEquals("-1.", new Dfp(field, -1l).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9081/DfpField.java
Used ingredient: distribution = new ChiSquaredDistribution(df);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9082/DfpField.java
Used ingredient: final double result = integrator.integrate(f);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9083/DfpField.java
Used ingredient: final Dfp result = x.newInstance(x.getZero());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9084/DfpField.java
Used ingredient: result = result * 31 + MathUtils.hash(getN());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9085/DfpField.java
Used ingredient: prec = new SymmLQ(maxIterations, 1E-15, true);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9086/DfpField.java
Used ingredient: Assert.assertEquals("0.", new Dfp(field, 0l).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9087/DfpField.java
Used ingredient: StringBuilder builder = new StringBuilder();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9088/DfpField.java
Used ingredient: final StringBuilder s = new StringBuilder();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9089/DfpField.java
Used ingredient: dist = new UniformIntegerDistribution(0, 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9090/DfpField.java
Used ingredient: dist = new UniformIntegerDistribution(0, 5);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9091/DfpField.java
Used ingredient: return DfpMath.exp(this).subtract(getOne());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9092/DfpField.java
Used ingredient: return new Decimal64(FastMath.asinh(value));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9093/DfpField.java
Used ingredient: result = result * 31 + MathUtils.hash(getVariance());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9094/DfpField.java
Used ingredient: result = result * 31 + MathUtils.hash(getMean());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9095/DfpField.java
Used ingredient: *  result[2] is the lower bits of the remainder
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9096/DfpField.java
Used ingredient: model = new MillerUpdatingRegression(6, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9097/DfpField.java
Used ingredient: return new LUDecomposition(m).getDeterminant();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9098/DfpField.java
Used ingredient: Assert.assertEquals("-1.", new Dfp(field, (byte) -1).toString());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9099/DfpField.java
Used ingredient: dsX[i] = new DerivativeStructure(1, 1, x[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9100/DfpField.java
SuspiciousModificationPoint:       return result;
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 570
Used ingredient: return results;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9101/DfpField.java
Used ingredient: return result[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9102/DfpField.java
Used ingredient: return resultSet;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9103/DfpField.java
Used ingredient: return first;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9104/DfpField.java
Used ingredient: return rList;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9105/DfpField.java
Used ingredient: return split;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9106/DfpField.java
Used ingredient: return parent;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9107/DfpField.java
Used ingredient: return direct;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9108/DfpField.java
Used ingredient: return target;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9109/DfpField.java
Used ingredient: return best;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9110/DfpField.java
Used ingredient: return rule;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9111/DfpField.java
Used ingredient: return est;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9112/DfpField.java
Used ingredient: return ret;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9113/DfpField.java
Used ingredient: return lores;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9114/DfpField.java
Used ingredient: return res;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9115/DfpField.java
Used ingredient: return -res;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9116/DfpField.java
Used ingredient: return real;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9117/DfpField.java
Used ingredient: return residuals;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9118/DfpField.java
Used ingredient: return entries;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9119/DfpField.java
Used ingredient: return epsilon;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9120/DfpField.java
Used ingredient: return product;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9121/DfpField.java
Used ingredient: return est+err;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9122/DfpField.java
Used ingredient: return bIsNull;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9123/DfpField.java
Used ingredient: return sumImpl;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9124/DfpField.java
Used ingredient: return current;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9125/DfpField.java
Used ingredient: return measure;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9126/DfpField.java
Used ingredient: return reverse;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9127/DfpField.java
Used ingredient: return element;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9128/DfpField.java
Used ingredient: return fst(f);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9129/DfpField.java
Used ingredient: return theta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9130/DfpField.java
Used ingredient: return self();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9131/DfpField.java
Used ingredient: return offset;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9132/DfpField.java
Used ingredient: return strict;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9133/DfpField.java
Used ingredient: return field;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9134/DfpField.java
Used ingredient: return suffix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9135/DfpField.java
Used ingredient: return prefix;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9136/DfpField.java
Used ingredient: return input;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9137/DfpField.java
Used ingredient: return dist;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9138/DfpField.java
Used ingredient: return list;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9139/DfpField.java
Used ingredient: return facet;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9140/DfpField.java
Used ingredient: return start;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9141/DfpField.java
Used ingredient: return str;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9142/DfpField.java
Used ingredient: return true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9143/DfpField.java
Used ingredient: return extra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9144/DfpField.java
Used ingredient: return nextX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9145/DfpField.java
Used ingredient: return weight;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9146/DfpField.java
Used ingredient: return safety;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9147/DfpField.java
Used ingredient: return region;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9148/DfpField.java
Used ingredient: return center;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9149/DfpField.java
Used ingredient: return vector;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9150/DfpField.java
Used ingredient: return merged;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9151/DfpField.java
Used ingredient: return sizes;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9152/DfpField.java
Used ingredient: return steps;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9153/DfpField.java
Used ingredient: return sumsq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9154/DfpField.java
Used ingredient: return arity;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9155/DfpField.java
Used ingredient: return ratio;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9156/DfpField.java
Used ingredient: return count;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9157/DfpField.java
Used ingredient: return stats;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9158/DfpField.java
Used ingredient: return last;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9159/DfpField.java
Used ingredient: return stat;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9160/DfpField.java
Used ingredient: return sort;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9161/DfpField.java
Used ingredient: return sqrt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9162/DfpField.java
Used ingredient: return scale;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9163/DfpField.java
Used ingredient: return sqrtM;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9164/DfpField.java
Used ingredient: return beta;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9165/DfpField.java
Used ingredient: return std;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9166/DfpField.java
Used ingredient: return ranks;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9167/DfpField.java
Used ingredient: return repr;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9168/DfpField.java
Used ingredient: return null;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9169/DfpField.java
Used ingredient: return sum;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9170/DfpField.java
Used ingredient: return eps;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9171/DfpField.java
Used ingredient: return sumXX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9172/DfpField.java
Used ingredient: return sumXY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9173/DfpField.java
Used ingredient: return sumSq;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9174/DfpField.java
Used ingredient: return sumYY;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9175/DfpField.java
Used ingredient: return trace;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9176/DfpField.java
Used ingredient: return tree;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9177/DfpField.java
Used ingredient: return order;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9178/DfpField.java
Used ingredient: return output;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9179/DfpField.java
Used ingredient: return coeffs;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9180/DfpField.java
Used ingredient: return format;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9181/DfpField.java
Used ingredient: return sorted;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9182/DfpField.java
Used ingredient: return source;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9183/DfpField.java
Used ingredient: return stdDev;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9184/DfpField.java
Used ingredient: return errors;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9185/DfpField.java
Used ingredient: return sumLog;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9186/DfpField.java
Used ingredient: return eventT;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9187/DfpField.java
Used ingredient: return method;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9188/DfpField.java
Used ingredient: return normal;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9189/DfpField.java
Used ingredient: return cut;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9190/DfpField.java
Used ingredient: return quat;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9191/DfpField.java
Used ingredient: return kurt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9192/DfpField.java
Used ingredient: return out;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9193/DfpField.java
Used ingredient: return out2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9194/DfpField.java
Used ingredient: return rows;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9195/DfpField.java
Used ingredient: return modes;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9196/DfpField.java
Used ingredient: return root;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9197/DfpField.java
Used ingredient: return rMode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9198/DfpField.java
Used ingredient: return model;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9199/DfpField.java
Used ingredient: return values;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9200/DfpField.java
SuspiciousModificationPoint:         if (sqr2String == null || sqr2String.length() < highPrecisionDecimalDigits - 3) {
At: DfpField.java org.apache.commons.math3.dfp.DfpField
Line number: 578
Used ingredient: private static void computeStringConstants(final int highPrecisionDecimalDigits) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9201/DfpField.java
Used ingredient: final DfpField highPrecisionField = new DfpField(highPrecisionDecimalDigits, false);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9202/DfpField.java
Used ingredient: if ((encoding != null) && (encoding.length == 1) && (encoding[0] == 0x0L)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9203/DfpField.java
Used ingredient: if ((destination.length < rowsCount) || (destination[0].length < columnsCount)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9204/DfpField.java
Used ingredient: if ((sequence == null) || (sequence.length != size)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9205/DfpField.java
Used ingredient: if ((rm == null) || (b == null) || ( rm.getRowDimension() != b.getDimension())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9206/DfpField.java
Used ingredient: if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != mainSetDimension)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9207/DfpField.java
Used ingredient: if (stopFitness != 0 && bestFitness < (isMinimize ? stopFitness : -stopFitness)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9208/DfpField.java
Used ingredient: sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9209/DfpField.java
Used ingredient: if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != mainSetDimension)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9210/DfpField.java
Used ingredient: if (weights != null && weights.length != bases.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9211/DfpField.java
Used ingredient: sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9212/DfpField.java
Used ingredient: public String nextSecureHexString(int len) throws NotStrictlyPositiveException {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9213/DfpField.java
Used ingredient: if (covariance.length > 0 && covariance.length != covariance[0].length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9214/DfpField.java
Used ingredient: if (list.length < 1 || list.length > nvars + 1 - pos1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9215/DfpField.java
Used ingredient: if ((polynomials == null) || (polynomials.length <= (mu + 4))) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9216/DfpField.java
Used ingredient: final GaussIntegrator integrator = factory.legendreHighPrecision(7, 0, Math.PI / 2);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9217/DfpField.java
Used ingredient: if (xval.length == 0 || yval.length == 0 || zval.length == 0 || fval.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9218/DfpField.java
Used ingredient: if (xLen == 0 || yLen == 0 || z.length == 0 || f.length == 0 || f[0].length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9219/DfpField.java
Used ingredient: ln2String  = computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9220/DfpField.java
Used ingredient: if( variablesToInclude == null || variablesToInclude.length == 0){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9221/DfpField.java
Used ingredient: eString    = computeExp(highPrecisionOne, highPrecisionOne).toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9222/DfpField.java
Used ingredient: if (nextGeneration.getPopulationSize() < nextGeneration.getPopulationLimit()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9223/DfpField.java
Used ingredient: if (previous != null && checker.converged(getIterations(), previous, current)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9224/DfpField.java
Used ingredient: final GaussIntegrator integrator = factory.legendreHighPrecision(60, lo, hi);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9225/DfpField.java
Used ingredient: final GaussIntegrator g = FACTORY.legendreHighPrecision(numberOfPoints, a, b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9226/DfpField.java
Used ingredient: for (int minor = 0; minor < FastMath.min(qrt.length, qrt[0].length); minor++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9227/DfpField.java
Used ingredient: if (FastMath.abs(realEigenvalues[i]) < Precision.EPSILON * maxAbsoluteValue) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9228/DfpField.java
Used ingredient: if (FastMath.abs(realEigenvalues[i]) <= Precision.EPSILON * maxAbsoluteValue) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9229/DfpField.java
Used ingredient: if (singleMethod != null && !fastMethod.getName().equals(singleMethod)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9230/DfpField.java
Used ingredient: if ((x == null) || (y == null) || (x.length != y.length)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9231/DfpField.java
Used ingredient: if (isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9232/DfpField.java
Used ingredient: for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9233/DfpField.java
Used ingredient: piString   = computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9234/DfpField.java
Used ingredient: sqr2String           = highPrecisionSqr2.toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9235/DfpField.java
Used ingredient: return new GaussIntegrator(getRule(legendreHighPrecision, numberOfPoints));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9236/DfpField.java
Used ingredient: if (Precision.equals(vr, 0.0) && Precision.equals(vi, 0.0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9237/DfpField.java
Used ingredient: if ((hyperplanes == null) || (hyperplanes.length == 0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9238/DfpField.java
Used ingredient: * to the input string, but has higher precision than using a
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9239/DfpField.java
Used ingredient: for (String line = in.readLine(); line != null; line = in.readLine()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9240/DfpField.java
Used ingredient: if (checker != null && checker.converged(getIterations(), previous, current)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9241/DfpField.java
Used ingredient: public String nextHexString(int len) throws NotStrictlyPositiveException {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9242/DfpField.java
Used ingredient: for (int i = mant.length - 1; i >= mant.length - rounded.exp; i--) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9243/DfpField.java
Used ingredient: this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9244/DfpField.java
Used ingredient: if (xval.length == 0 || yval.length == 0 || fval.length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9245/DfpField.java
Used ingredient: if (xLen == 0 || yLen == 0 || f.length == 0 || f[0].length == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9246/DfpField.java
Used ingredient: return new GaussIntegrator(transform(getRule(legendreHighPrecision, numberOfPoints),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9247/DfpField.java
Used ingredient: private String orderToString(int order, String functionName, String parameterName) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9248/DfpField.java
Used ingredient: if ((iterations.getCount() + 1 >= getMinimalIterationCount()) && (delta <= limit)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9249/DfpField.java
Used ingredient: if ((node.getMinus().getCut() != null) || ((Boolean) node.getMinus().getAttribute())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9250/DfpField.java
Used ingredient: for (final Enumeration<String> keys = bundle.getKeys(); keys.hasMoreElements();) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9251/DfpField.java
Used ingredient: while (nextGeneration.getPopulationSize() < nextGeneration.getPopulationLimit()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9252/DfpField.java
Used ingredient: if (nextRight < xval.length && xval[nextRight] - xval[i] < xval[i] - xval[left]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9253/DfpField.java
Used ingredient: if( variablesToInclude.length > 2 || (variablesToInclude.length > 1 && !hasIntercept) ){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9254/DfpField.java
Used ingredient: sqr3String           = highPrecisionSqr3.toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9255/DfpField.java
Used ingredient: * @return RegressionResults the structure holding all regression results
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9256/DfpField.java
Used ingredient: if (parent == null || node == parent.getMinus()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9257/DfpField.java
Used ingredient: for (int i = source.length; i < source.length + offset; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9258/DfpField.java
Used ingredient: if (tree.getCut() == null && (Boolean) tree.getAttribute()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9259/DfpField.java
Used ingredient: for (Pair<String, Clusterer<DoublePoint>> pair : algorithms) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9260/DfpField.java
Used ingredient: * @return a string representation of the instance (in fact, its name)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9261/DfpField.java
Used ingredient: inc = power10(intLog10() - getDecimalDigits() + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9262/DfpField.java
Used ingredient: if ((parent == null) && (left == null) && (right == null)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9263/DfpField.java
Used ingredient: final Dfp highPrecisionThree      = new Dfp(highPrecisionField, 3);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9264/DfpField.java
Used ingredient: (prototypeStatistics == null) ? new SummaryStatistics() : prototypeStatistics;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9265/DfpField.java
Used ingredient: if (target.length != weightMatrix.getColumnDimension()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9266/DfpField.java
Used ingredient: if (costPerTimeUnit[k] < orderControl2 * costPerTimeUnit[optimalIter]) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9267/DfpField.java
Used ingredient: * particularly well suited when a very high precision is needed. The
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9268/DfpField.java
Used ingredient: if ((x == null && singletons.get(i) == null) ||
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9269/DfpField.java
Used ingredient: if (point != neighbor && neighbor.distanceFrom(point) <= eps) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9270/DfpField.java
Used ingredient: String product = ordersToString(compiler.getPartialDerivativeOrders(k),
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9271/DfpField.java
Used ingredient: private void insertionSort(final double[] work, final int begin, final int end) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9272/DfpField.java
Used ingredient: (initialStatistics == null) ? new SummaryStatistics() : initialStatistics;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9273/DfpField.java
Used ingredient: private StorelessBivariateCovariance getElement(final int i, final int j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9274/DfpField.java
Used ingredient: if (thisNorm == 0 || (thisNorm / lastNorm) * rNorm < dropThreshold) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9275/DfpField.java
Used ingredient: if (transitionMatrix.getColumnDimension() != stateEstimation.getDimension()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9276/DfpField.java
Used ingredient: final int begin, final int length) throws MathIllegalArgumentException  {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9277/DfpField.java
Used ingredient: public class BigFractionField implements Field<BigFraction>, Serializable  {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9278/DfpField.java
Used ingredient: if (basis != null ? basis.length == DIM : false)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9279/DfpField.java
Used ingredient: if (((xB - xA) <= xTol) || (FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9280/DfpField.java
Used ingredient: * NullArgumentException} when operating on a null element, it is the responsibility
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9281/DfpField.java
Used ingredient: for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9282/DfpField.java
Used ingredient: if (measurementMatrix.getColumnDimension() != transitionMatrix.getRowDimension()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9283/DfpField.java
Used ingredient: public static long gcd(final long p, final long q) throws MathArithmeticException {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9284/DfpField.java
Used ingredient: if (subVector.length == dimensionSize.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9285/DfpField.java
Used ingredient: if (singletons.length != probabilities.length) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9286/DfpField.java
Used ingredient: * Returns the number of observations (length of covariate vectors)
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9287/DfpField.java
Used ingredient: String nextSecureHexString(int len) throws NotStrictlyPositiveException;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9288/DfpField.java
Used ingredient: * @return a random value following the specified exponential distribution
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9289/DfpField.java
Used ingredient: if (internalArray.length <= startIndex + numElements) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9290/DfpField.java
Used ingredient: ChiSquaredDistribution distribution = (ChiSquaredDistribution) getDistribution();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9291/DfpField.java
Used ingredient: return (sign > 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9292/DfpField.java
Used ingredient: return (sign < 0) || ((mant[mant.length - 1] == 0) && !isInfinite());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9293/DfpField.java
Used ingredient: public Fraction parse(final String source, final ParsePosition pos) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9294/DfpField.java
Used ingredient: if (previous != null && checker.converged(iter, previous, current)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9295/DfpField.java
Used ingredient: for (LinearConstraint constraint : originalConstraints) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9296/DfpField.java
Used ingredient: private static class SegmentsBuilder implements BSPTreeVisitor<Euclidean2D> {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9297/DfpField.java
Used ingredient: if (iterations.getCount() >= getMinimalIterationCount()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9298/DfpField.java
Used ingredient: * @return  true if any coordinate of this vector is infinite and none are NaN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9299/DfpField.java
Used ingredient: public BigFraction parse(final String source, final ParsePosition pos) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9300/DfpField.java
SuspiciousModificationPoint:         return field.getRadixDigits();
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 644
Used ingredient: return getRadixDigits() * 4 - 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9301/Dfp.java
Used ingredient: mant = new int[field.getRadixDigits()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9302/Dfp.java
Used ingredient: return fields[i].getName();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9303/Dfp.java
Used ingredient: return field.getOne().divide(this);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9304/Dfp.java
Used ingredient: public int getRadixDigits() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9305/Dfp.java
Used ingredient: return fode.getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9306/Dfp.java
Used ingredient: return field.getOne();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9307/Dfp.java
Used ingredient: return field.getTwo();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9308/Dfp.java
Used ingredient: return field.getZero();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9309/Dfp.java
Used ingredient: return field.newDfp(sig, code);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9310/Dfp.java
Used ingredient: private final int radixDigits;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9311/Dfp.java
Used ingredient: return super.getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9312/Dfp.java
Used ingredient: return diag.getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9313/Dfp.java
Used ingredient: return simplex.getPoint(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9314/Dfp.java
Used ingredient: return mMat.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9315/Dfp.java
Used ingredient: return minImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9316/Dfp.java
Used ingredient: return meanImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9317/Dfp.java
Used ingredient: return super.getDistance(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9318/Dfp.java
Used ingredient: return super.getL1Distance(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9319/Dfp.java
Used ingredient: return ode.getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9320/Dfp.java
Used ingredient: return radixDigits;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9321/Dfp.java
Used ingredient: return gn.getMaxEvaluations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9322/Dfp.java
Used ingredient: return cg.getMaxEvaluations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9323/Dfp.java
Used ingredient: return field.newDfp(x);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9324/Dfp.java
Used ingredient: return varianceImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9325/Dfp.java
Used ingredient: return sqrtDiag.getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9326/Dfp.java
Used ingredient: return geoMeanImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9327/Dfp.java
Used ingredient: return new BigReal(d.negate());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9328/Dfp.java
Used ingredient: return tableau.getRowDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9329/Dfp.java
Used ingredient: return y.getPartialDerivative(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9330/Dfp.java
Used ingredient: return entries.get(index);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9331/Dfp.java
Used ingredient: return sumsqImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9332/Dfp.java
Used ingredient: return builder.toString();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9333/Dfp.java
Used ingredient: return iterations.getCount();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9334/Dfp.java
Used ingredient: return evaluations.getCount();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9335/Dfp.java
Used ingredient: return new PolygonsSet(edges);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9336/Dfp.java
Used ingredient: return statistics.getSumsq();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9337/Dfp.java
Used ingredient: return sumImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9338/Dfp.java
Used ingredient: return Locale.getDefault();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9339/Dfp.java
Used ingredient: return sumLogImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9340/Dfp.java
Used ingredient: return v.getDimension();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9341/Dfp.java
Used ingredient: return rebalanceRightGrown();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9342/Dfp.java
Used ingredient: return super.getVariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9343/Dfp.java
Used ingredient: return super.getCovariance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9344/Dfp.java
Used ingredient: return statistics.getMax();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9345/Dfp.java
Used ingredient: return context.getMessage();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9346/Dfp.java
Used ingredient: return optimum.getPointRef();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9347/Dfp.java
Used ingredient: return maxImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9348/Dfp.java
Used ingredient: return factors.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9349/Dfp.java
Used ingredient: return super.getValues();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9350/Dfp.java
Used ingredient: return tableau.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9351/Dfp.java
Used ingredient: return eDA.getNumElements();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9352/Dfp.java
Used ingredient: return gn.getEvaluations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9353/Dfp.java
Used ingredient: return cg.getEvaluations();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9354/Dfp.java
Used ingredient: return super.getWindowSize();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9355/Dfp.java
Used ingredient: return next.getIndex() >= 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9356/Dfp.java
Used ingredient: return v.getDistance(w);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9357/Dfp.java
Used ingredient: return wrapped.nextFloat();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9358/Dfp.java
Used ingredient: return eDA.getElements();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9359/Dfp.java
Used ingredient: return v.getL1Distance(w);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9360/Dfp.java
Used ingredient: return super.getMaxImpl();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9361/Dfp.java
Used ingredient: return compiler.getOrder();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9362/Dfp.java
Used ingredient: return dec.getSquareRoot();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9363/Dfp.java
Used ingredient: return v.getLInfDistance(w);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9364/Dfp.java
Used ingredient: return wrapped.nextGaussian();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9365/Dfp.java
Used ingredient: return super.getMax();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9366/Dfp.java
Used ingredient: return secondMoment.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9367/Dfp.java
Used ingredient: return super.getLInfDistance(v);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9368/Dfp.java
Used ingredient: return covarianceImpl.getResult();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9369/Dfp.java
Used ingredient: return BigRealField.getInstance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9370/Dfp.java
Used ingredient: return ComplexField.getInstance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9371/Dfp.java
Used ingredient: return iterations.getMaximalCount();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9372/Dfp.java
Used ingredient: return super.getStandardDeviation();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9373/Dfp.java
Used ingredient: this.mant    = new int[field.getRadixDigits()];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9374/Dfp.java
Used ingredient: return new StandardDeviation();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9375/Dfp.java
Used ingredient: return super.getVarianceImpl();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9376/Dfp.java
Used ingredient: return getExpectedDimension(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9377/Dfp.java
Used ingredient: return getExpectedDimension(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9378/Dfp.java
Used ingredient: return r.divide(points.size());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9379/Dfp.java
Used ingredient: return expandableODE.getTime();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9380/Dfp.java
Used ingredient: return new BigReal(d.add(a.d));
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9381/Dfp.java
Used ingredient: return weightMatrixSqrt.copy();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9382/Dfp.java
Used ingredient: return euclideanPoint.hashCode();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9383/Dfp.java
Used ingredient: return Euclidean1D.getInstance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9384/Dfp.java
Used ingredient: return Euclidean3D.getInstance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9385/Dfp.java
Used ingredient: return Euclidean2D.getInstance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9386/Dfp.java
Used ingredient: return errorCovariance.getData();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9387/Dfp.java
Used ingredient: return pode.getParametersNames();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9388/Dfp.java
Used ingredient: return FractionField.getInstance();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9389/Dfp.java
Used ingredient: return evaluations.getMaximalCount();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9390/Dfp.java
Used ingredient: return regression.getR();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9391/Dfp.java
Used ingredient: return singletons.get(i);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9392/Dfp.java
Used ingredient: return ran.nextBits(bits);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9393/Dfp.java
Used ingredient: return new Target(target);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9394/Dfp.java
Used ingredient: return getWrongDimension(0);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9395/Dfp.java
Used ingredient: return minus.getCell(point);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9396/Dfp.java
Used ingredient: return getWrongDimension(1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9397/Dfp.java
Used ingredient: return super.getGeoMeanImpl();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9398/Dfp.java
Used ingredient: return invalidDataSize.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9399/Dfp.java
Used ingredient: return fit(f, initialGuess);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9400/Dfp.java
SuspiciousModificationPoint:         boolean inc = false;
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1426
Used ingredient: boolean neg = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9401/Dfp.java
Used ingredient: boolean iev = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9402/Dfp.java
Used ingredient: boolean done = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9403/Dfp.java
Used ingredient: boolean recp = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9404/Dfp.java
Used ingredient: boolean ret = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9405/Dfp.java
Used ingredient: boolean sub = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9406/Dfp.java
Used ingredient: boolean up = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9407/Dfp.java
Used ingredient: boolean ok = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9408/Dfp.java
Used ingredient: boolean inexact = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9409/Dfp.java
Used ingredient: boolean invert = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9410/Dfp.java
Used ingredient: boolean found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9411/Dfp.java
Used ingredient: boolean flag = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9412/Dfp.java
Used ingredient: boolean stop = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9413/Dfp.java
Used ingredient: boolean reject = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9414/Dfp.java
Used ingredient: boolean negate = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9415/Dfp.java
Used ingredient: boolean caught = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9416/Dfp.java
Used ingredient: boolean inverted = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9417/Dfp.java
Used ingredient: boolean failure = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9418/Dfp.java
Used ingredient: boolean rescale = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9419/Dfp.java
Used ingredient: boolean useLong = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9420/Dfp.java
Used ingredient: boolean changed = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9421/Dfp.java
Used ingredient: boolean inSegment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9422/Dfp.java
Used ingredient: boolean isLongMin = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9423/Dfp.java
Used ingredient: boolean negative = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9424/Dfp.java
Used ingredient: boolean changeHi = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9425/Dfp.java
Used ingredient: boolean changeLo = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9426/Dfp.java
Used ingredient: boolean didThrow = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9427/Dfp.java
Used ingredient: leading = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9428/Dfp.java
Used ingredient: boolean negative=false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9429/Dfp.java
Used ingredient: boolean needReset = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9430/Dfp.java
Used ingredient: boolean subnormal = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9431/Dfp.java
Used ingredient: boolean bSkipTo40 = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9432/Dfp.java
Used ingredient: boolean keyPresent = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9433/Dfp.java
Used ingredient: boolean decimalFound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9434/Dfp.java
Used ingredient: boolean leading = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9435/Dfp.java
Used ingredient: newMapping = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9436/Dfp.java
Used ingredient: boolean good = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9437/Dfp.java
Used ingredient: lindep[col] = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9438/Dfp.java
Used ingredient: boolean rankProblem = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9439/Dfp.java
Used ingredient: boolean increment = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9440/Dfp.java
Used ingredient: boolean infiniteFound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9441/Dfp.java
Used ingredient: boolean pointInserted = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9442/Dfp.java
Used ingredient: boolean b = x.equals(y);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9443/Dfp.java
Used ingredient: boolean matching = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9444/Dfp.java
Used ingredient: boolean needsReorder = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9445/Dfp.java
Used ingredient: boolean isInfinite();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9446/Dfp.java
Used ingredient: boolean shouldThrow = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9447/Dfp.java
Used ingredient: boolean unequalCounts = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9448/Dfp.java
Used ingredient: boolean cluster1Found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9449/Dfp.java
Used ingredient: boolean cluster3Found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9450/Dfp.java
Used ingredient: boolean cluster2Found = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9451/Dfp.java
Used ingredient: increment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9452/Dfp.java
Used ingredient: isIdentity = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9453/Dfp.java
Used ingredient: boolean isSquare();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9454/Dfp.java
Used ingredient: final boolean inc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9455/Dfp.java
Used ingredient: finalized  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9456/Dfp.java
Used ingredient: lastSeen = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9457/Dfp.java
Used ingredient: matching = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9458/Dfp.java
Used ingredient: incMoment = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9459/Dfp.java
Used ingredient: negInf  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9460/Dfp.java
Used ingredient: boolean lastSeen;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9461/Dfp.java
Used ingredient: plusFound  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9462/Dfp.java
Used ingredient: nan     = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9463/Dfp.java
Used ingredient: inc = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9464/Dfp.java
Used ingredient: posInf  = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9465/Dfp.java
Used ingredient: loop   = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9466/Dfp.java
Used ingredient: boolean widthSufficient = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9467/Dfp.java
Used ingredient: boolean result = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9468/Dfp.java
Used ingredient: boolean emptyCluster = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9469/Dfp.java
Used ingredient: boolean allfound = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9470/Dfp.java
Used ingredient: boolean isIdentity = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9471/Dfp.java
Used ingredient: boolean newMapping = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9472/Dfp.java
Used ingredient: boolean previousRejected = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9473/Dfp.java
Used ingredient: this.tol_set = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9474/Dfp.java
Used ingredient: firstIteration = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9475/Dfp.java
Used ingredient: boolean firstTime = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9476/Dfp.java
Used ingredient: boolean converged = true;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9477/Dfp.java
Used ingredient: boolean isForward();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9478/Dfp.java
Used ingredient: double len = length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9479/Dfp.java
Used ingredient: double n = length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9480/Dfp.java
Used ingredient: double n0 = length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9481/Dfp.java
Used ingredient: transposed = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9482/Dfp.java
Used ingredient: trialgood = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9483/Dfp.java
Used ingredient: boolean isEmpty();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9484/Dfp.java
Used ingredient: boolean isNaN();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9485/Dfp.java
Used ingredient: boolean flag;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9486/Dfp.java
Used ingredient: boolean isMinim) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9487/Dfp.java
Used ingredient: singular = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9488/Dfp.java
Used ingredient: boolean strict) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9489/Dfp.java
Used ingredient: boolean isLast) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9490/Dfp.java
Used ingredient: minusFound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9491/Dfp.java
Used ingredient: private boolean nan;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9492/Dfp.java
Used ingredient: negInf = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9493/Dfp.java
Used ingredient: boolean leftShrunk;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9494/Dfp.java
Used ingredient: allfound = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9495/Dfp.java
Used ingredient: .booleanValue();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9496/Dfp.java
Used ingredient: boolean solvable) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9497/Dfp.java
Used ingredient: double lna = lns[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9498/Dfp.java
Used ingredient: double lnb = lns[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9499/Dfp.java
Used ingredient: allEquals = false;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9500/Dfp.java
SuspiciousModificationPoint:         switch (field.getRoundingMode()) {
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1427
Used ingredient: switch (getField().getRoundingMode()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9501/Dfp.java
Used ingredient: switch (roundingMethod) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9502/Dfp.java
Used ingredient: switch (c.getRelationship()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9503/Dfp.java
Used ingredient: public RoundingMode getRoundingMode() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9504/Dfp.java
Used ingredient: switch (expansionMode) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9505/Dfp.java
Used ingredient: switch (t.getOrder()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9506/Dfp.java
Used ingredient: if (fields[i].get(null) == order) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9507/Dfp.java
Used ingredient: switch (visitor.visitOrder(this)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9508/Dfp.java
Used ingredient: public enum RoundingMode {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9509/Dfp.java
Used ingredient: public int getExpansionMode() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9510/Dfp.java
Used ingredient: if (m.getColumnDimension() != n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9511/Dfp.java
Used ingredient: if (m.getColumnDimension() == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9512/Dfp.java
Used ingredient: public void testRoundDouble() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9513/Dfp.java
Used ingredient: if (inserted.getNode() == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9514/Dfp.java
Used ingredient: .setScale(scale, roundingMethod))
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9515/Dfp.java
Used ingredient: if (x.lessThan(field.getZero())) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9516/Dfp.java
Used ingredient: switch (other.side(inserted)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9517/Dfp.java
Used ingredient: return field.getOne().divide(this);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9518/Dfp.java
Used ingredient: if (b.getRowDimension() != m) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9519/Dfp.java
Used ingredient: public DfpField getField() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9520/Dfp.java
Used ingredient: this.roundingMode = roundingMode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9521/Dfp.java
Used ingredient: public void testBoundaries() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9522/Dfp.java
Used ingredient: public final void testToString() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9523/Dfp.java
Used ingredient: if (a.getRowDimension() != n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9524/Dfp.java
Used ingredient: public void setMode(int mode) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9525/Dfp.java
Used ingredient: public void testRemoveSingle() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9526/Dfp.java
Used ingredient: public int getColumnDimension() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9527/Dfp.java
Used ingredient: public double getBoundarySize() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9528/Dfp.java
Used ingredient: public FieldVector3D<T> negate() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9529/Dfp.java
Used ingredient: public void testIllConditioned() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9530/Dfp.java
Used ingredient: public void testRoundFloat() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9531/Dfp.java
Used ingredient: import java.math.RoundingMode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9532/Dfp.java
Used ingredient: return field.getRadixDigits();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9533/Dfp.java
Used ingredient: switch (allowedSolution) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9534/Dfp.java
Used ingredient: public void testRootEndpoints() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9535/Dfp.java
Used ingredient: if (!child2Set.contains(item1)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9536/Dfp.java
Used ingredient: if (visited.get(point) != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9537/Dfp.java
Used ingredient: if (!child1Set.contains(item2)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9538/Dfp.java
Used ingredient: public double getSecondMoment() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9539/Dfp.java
Used ingredient: switch (sub.side(hyperplane)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9540/Dfp.java
Used ingredient: switch (sub.side(cHyperplane)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9541/Dfp.java
Used ingredient: if (x.greaterThan(pi.divide(2))) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9542/Dfp.java
Used ingredient: public double getRankingThreshold() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9543/Dfp.java
Used ingredient: public void testRedundantSolvable() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9544/Dfp.java
Used ingredient: if (model1.getN() != model2.getN()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9545/Dfp.java
Used ingredient: public void testSolutionRightSide() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9546/Dfp.java
Used ingredient: } catch (NoSuchFieldException nsfe) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9547/Dfp.java
Used ingredient: public void testSolutionBelowSide() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9548/Dfp.java
Used ingredient: public void testSolutionAboveSide() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9549/Dfp.java
Used ingredient: public void testBoundsUnsupported() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9550/Dfp.java
Used ingredient: public final void testConjugate() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9551/Dfp.java
Used ingredient: if (length != second.getLength()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9552/Dfp.java
Used ingredient: public void testConditionNumber() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9553/Dfp.java
Used ingredient: weightMatrix.getColumnDimension());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9554/Dfp.java
Used ingredient: if (dx.getReal() <= dy.getReal()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9555/Dfp.java
Used ingredient: if (dy.getReal() <= dz.getReal()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9556/Dfp.java
Used ingredient: if (dx.getReal() <= dz.getReal()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9557/Dfp.java
Used ingredient: if (sig == (field.getRadixDigits() / 2) * 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9558/Dfp.java
Used ingredient: if (time > interval.getPreviousTime()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9559/Dfp.java
Used ingredient: if (time < interval.getPreviousTime()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9560/Dfp.java
Used ingredient: if (attribute.getPlusInside() != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9561/Dfp.java
Used ingredient: measNoise.getColumnDimension() != 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9562/Dfp.java
Used ingredient: public boolean getBoundIsAllowed() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9563/Dfp.java
Used ingredient: public FieldVector<T> append(T in) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9564/Dfp.java
Used ingredient: public void testConstrainedRosen() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9565/Dfp.java
Used ingredient: public void testCosineMixedTypes() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9566/Dfp.java
Used ingredient: public double getConditionNumber() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9567/Dfp.java
Used ingredient: public void testSolutionLeftSide() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9568/Dfp.java
Used ingredient: } catch (ClassNotFoundException e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9569/Dfp.java
Used ingredient: public void testContainsKey() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9570/Dfp.java
Used ingredient: while (idx != indices.get(0)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9571/Dfp.java
Used ingredient: public void testHalfBounded() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9572/Dfp.java
Used ingredient: public void testMinMaxDouble() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9573/Dfp.java
Used ingredient: public void testTrivialModel() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9574/Dfp.java
Used ingredient: public void testRound() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9575/Dfp.java
Used ingredient: public void testRemainder() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9576/Dfp.java
Used ingredient: public void testUnbounded() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9577/Dfp.java
Used ingredient: public void testLargeModel() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9578/Dfp.java
Used ingredient: public int getCount(int dim) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9579/Dfp.java
Used ingredient: public void testWrongOrder() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9580/Dfp.java
Used ingredient: public void testNormalizeAngle() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9581/Dfp.java
Used ingredient: testDa.getExpansionMode());
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9582/Dfp.java
Used ingredient: private RoundingMode rMode;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9583/Dfp.java
Used ingredient: public void testCoordinates() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9584/Dfp.java
Used ingredient: public void testBoundedSqrt() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9585/Dfp.java
Used ingredient: public Field<T> getField() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9586/Dfp.java
Used ingredient: public int getPopulationSize() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9587/Dfp.java
Used ingredient: public FractionField getField() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9588/Dfp.java
Used ingredient: public void testPreconditions() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9589/Dfp.java
Used ingredient: public void testMissingOrders() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9590/Dfp.java
Used ingredient: public void setIndex(int index) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9591/Dfp.java
Used ingredient: public void testIndicatorByte() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9592/Dfp.java
Used ingredient: public RealVector getSolution() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9593/Dfp.java
Used ingredient: public void testReferenceCode() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9594/Dfp.java
Used ingredient: if (entries.containsKey(i)) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9595/Dfp.java
Used ingredient: row >= m.getRowDimension()) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9596/Dfp.java
Used ingredient: public Field<BigReal> getField() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9597/Dfp.java
Used ingredient: public void testPreconditions3() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9598/Dfp.java
Used ingredient: public void testPreconditions2() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9599/Dfp.java
Used ingredient: public void testPreconditions4() {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9600/Dfp.java
SuspiciousModificationPoint:         if (inc) {
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1462
Used ingredient: if (in) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9601/Dfp.java
Used ingredient: if (!in) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9602/Dfp.java
Used ingredient: if (neg) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9603/Dfp.java
Used ingredient: if (iev) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9604/Dfp.java
Used ingredient: if (nan) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9605/Dfp.java
Used ingredient: if (i < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9606/Dfp.java
Used ingredient: if (hsig) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9607/Dfp.java
Used ingredient: if (recp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9608/Dfp.java
Used ingredient: if (inexact) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9609/Dfp.java
Used ingredient: if (inPlace) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9610/Dfp.java
Used ingredient: if (sub) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9611/Dfp.java
Used ingredient: if (up) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9612/Dfp.java
Used ingredient: if (inside) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9613/Dfp.java
Used ingredient: if (invert) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9614/Dfp.java
Used ingredient: if (strict) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9615/Dfp.java
Used ingredient: if (i < nh) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9616/Dfp.java
Used ingredient: if (!done) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9617/Dfp.java
Used ingredient: if (mixed) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9618/Dfp.java
Used ingredient: if (front) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9619/Dfp.java
Used ingredient: if (runGC) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9620/Dfp.java
Used ingredient: if (n < 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9621/Dfp.java
Used ingredient: if (n < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9622/Dfp.java
Used ingredient: if (n < k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9623/Dfp.java
Used ingredient: if (n < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9624/Dfp.java
Used ingredient: if (n < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9625/Dfp.java
Used ingredient: if (n > 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9626/Dfp.java
Used ingredient: if (i < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9627/Dfp.java
Used ingredient: if (i < 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9628/Dfp.java
Used ingredient: if (i < j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9629/Dfp.java
Used ingredient: if (n > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9630/Dfp.java
Used ingredient: if (n > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9631/Dfp.java
Used ingredient: if (i > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9632/Dfp.java
Used ingredient: if (i > 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9633/Dfp.java
Used ingredient: if (i > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9634/Dfp.java
Used ingredient: if (i > 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9635/Dfp.java
Used ingredient: if (i > j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9636/Dfp.java
Used ingredient: if (isNaN) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9637/Dfp.java
Used ingredient: if (m < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9638/Dfp.java
Used ingredient: if (j < i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9639/Dfp.java
Used ingredient: if (k > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9640/Dfp.java
Used ingredient: if (c < a) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9641/Dfp.java
Used ingredient: if (c > b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9642/Dfp.java
Used ingredient: if (min > e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9643/Dfp.java
Used ingredient: if (isMinim) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9644/Dfp.java
Used ingredient: if (!bisect) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9645/Dfp.java
Used ingredient: if (ipt > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9646/Dfp.java
Used ingredient: if (nct < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9647/Dfp.java
Used ingredient: if (i < npt) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9648/Dfp.java
Used ingredient: if (x < min) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9649/Dfp.java
Used ingredient: if (k < nct) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9650/Dfp.java
Used ingredient: if (good) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9651/Dfp.java
Used ingredient: if (flag) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9652/Dfp.java
Used ingredient: if (loop) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9653/Dfp.java
Used ingredient: if (fsal) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9654/Dfp.java
Used ingredient: if (stop) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9655/Dfp.java
Used ingredient: if (incMoment) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9656/Dfp.java
Used ingredient: if (increment) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9657/Dfp.java
Used ingredient: if (negate) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9658/Dfp.java
Used ingredient: if (reject) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9659/Dfp.java
Used ingredient: if (precon) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9660/Dfp.java
Used ingredient: if (isLast) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9661/Dfp.java
Used ingredient: if (d != n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9662/Dfp.java
Used ingredient: if (n == 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9663/Dfp.java
Used ingredient: if (n == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9664/Dfp.java
Used ingredient: if (n == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9665/Dfp.java
Used ingredient: if (i == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9666/Dfp.java
Used ingredient: if (i == k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9667/Dfp.java
Used ingredient: if (i == j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9668/Dfp.java
Used ingredient: if (i != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9669/Dfp.java
Used ingredient: if (n <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9670/Dfp.java
Used ingredient: if (n != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9671/Dfp.java
Used ingredient: if (n != 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9672/Dfp.java
Used ingredient: if (i != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9673/Dfp.java
Used ingredient: if (i >= N) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9674/Dfp.java
Used ingredient: if (i <= 5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9675/Dfp.java
Used ingredient: if (i != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9676/Dfp.java
Used ingredient: if (1 == n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9677/Dfp.java
Used ingredient: if (n < 32) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9678/Dfp.java
Used ingredient: if (m >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9679/Dfp.java
Used ingredient: if (n > 20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9680/Dfp.java
Used ingredient: if (n < 21) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9681/Dfp.java
Used ingredient: if (n < 67) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9682/Dfp.java
Used ingredient: if ( i > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9683/Dfp.java
Used ingredient: if (k != i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9684/Dfp.java
Used ingredient: if (v > hi) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9685/Dfp.java
Used ingredient: if (a == c) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9686/Dfp.java
Used ingredient: if (x == c) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9687/Dfp.java
Used ingredient: if (inverted) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9688/Dfp.java
Used ingredient: if (d < dMin) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9689/Dfp.java
Used ingredient: if (sign < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9690/Dfp.java
Used ingredient: if (singular) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9691/Dfp.java
Used ingredient: if (!isMinim) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9692/Dfp.java
Used ingredient: if (i >= npt) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9693/Dfp.java
Used ingredient: if (y < yMin) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9694/Dfp.java
Used ingredient: int n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9695/Dfp.java
Used ingredient: for (;;) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9696/Dfp.java
Used ingredient: if (increasing) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9697/Dfp.java
Used ingredient: switch (c) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9698/Dfp.java
Used ingredient: int index) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9699/Dfp.java
Used ingredient: if (fatal) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9700/Dfp.java
SuspiciousModificationPoint:             int rh = 1;
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1464
Used ingredient: int r = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9701/Dfp.java
Used ingredient: int rh = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9702/Dfp.java
Used ingredient: int n = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9703/Dfp.java
Used ingredient: int i = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9704/Dfp.java
Used ingredient: int c = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9705/Dfp.java
Used ingredient: int ih = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9706/Dfp.java
Used ingredient: int t = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9707/Dfp.java
Used ingredient: int r = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9708/Dfp.java
Used ingredient: int p = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9709/Dfp.java
Used ingredient: int j = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9710/Dfp.java
Used ingredient: int q = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9711/Dfp.java
Used ingredient: int rl = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9712/Dfp.java
Used ingredient: int k = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9713/Dfp.java
Used ingredient: int den = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9714/Dfp.java
Used ingredient: int sgn = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9715/Dfp.java
Used ingredient: int rnk = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9716/Dfp.java
Used ingredient: int n = 100;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9717/Dfp.java
Used ingredient: int ret = 7;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9718/Dfp.java
Used ingredient: int out = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9719/Dfp.java
Used ingredient: int res = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9720/Dfp.java
Used ingredient: int row = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9721/Dfp.java
Used ingredient: int ptr = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9722/Dfp.java
Used ingredient: int n = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9723/Dfp.java
Used ingredient: int n = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9724/Dfp.java
Used ingredient: int n = 6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9725/Dfp.java
Used ingredient: int n = 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9726/Dfp.java
Used ingredient: int i = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9727/Dfp.java
Used ingredient: int c = 77;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9728/Dfp.java
Used ingredient: int a = p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9729/Dfp.java
Used ingredient: int a = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9730/Dfp.java
Used ingredient: int k = i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9731/Dfp.java
Used ingredient: int x = y;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9732/Dfp.java
Used ingredient: int p = n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9733/Dfp.java
Used ingredient: int k = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9734/Dfp.java
Used ingredient: int j = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9735/Dfp.java
Used ingredient: int b = q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9736/Dfp.java
Used ingredient: int N = 9;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9737/Dfp.java
Used ingredient: int a = 30;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9738/Dfp.java
Used ingredient: int sp = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9739/Dfp.java
Used ingredient: int y = x0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9740/Dfp.java
Used ingredient: int p2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9741/Dfp.java
Used ingredient: int b = 50;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9742/Dfp.java
Used ingredient: int trial = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9743/Dfp.java
Used ingredient: int lower = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9744/Dfp.java
Used ingredient: int min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9745/Dfp.java
Used ingredient: int iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9746/Dfp.java
Used ingredient: int size = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9747/Dfp.java
Used ingredient: int dim = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9748/Dfp.java
Used ingredient: int n = 1024;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9749/Dfp.java
Used ingredient: int h = 3542;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9750/Dfp.java
Used ingredient: int its = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9751/Dfp.java
Used ingredient: int idx = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9752/Dfp.java
Used ingredient: int sig = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9753/Dfp.java
Used ingredient: int ipt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9754/Dfp.java
Used ingredient: int dim = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9755/Dfp.java
Used ingredient: int cnt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9756/Dfp.java
Used ingredient: int col = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9757/Dfp.java
Used ingredient: int num = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9758/Dfp.java
Used ingredient: int off = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9759/Dfp.java
Used ingredient: int l = idx;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9760/Dfp.java
Used ingredient: int out = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9761/Dfp.java
Used ingredient: int e = exp;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9762/Dfp.java
Used ingredient: int sum = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9763/Dfp.java
Used ingredient: int jpt = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9764/Dfp.java
Used ingredient: ntrits = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9765/Dfp.java
Used ingredient: int max = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9766/Dfp.java
Used ingredient: int result = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9767/Dfp.java
Used ingredient: int index = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9768/Dfp.java
Used ingredient: int iact = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9769/Dfp.java
Used ingredient: int count = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9770/Dfp.java
Used ingredient: int nextr = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9771/Dfp.java
Used ingredient: int cycle = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9772/Dfp.java
Used ingredient: int nobs = 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9773/Dfp.java
Used ingredient: int nobs = 21;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9774/Dfp.java
Used ingredient: int from2 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9775/Dfp.java
Used ingredient: int from1 = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9776/Dfp.java
Used ingredient: int nvars = 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9777/Dfp.java
Used ingredient: int i = j - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9778/Dfp.java
Used ingredient: int n = 10000;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9779/Dfp.java
Used ingredient: int j = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9780/Dfp.java
Used ingredient: int lower = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9781/Dfp.java
Used ingredient: int upper = 6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9782/Dfp.java
Used ingredient: int start = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9783/Dfp.java
Used ingredient: int pos1 = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9784/Dfp.java
Used ingredient: int pos2 = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9785/Dfp.java
Used ingredient: int maxI = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9786/Dfp.java
Used ingredient: inc = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9787/Dfp.java
Used ingredient: inc = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9788/Dfp.java
Used ingredient: iterc = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9789/Dfp.java
Used ingredient: sign = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9790/Dfp.java
Used ingredient: sign = +1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9791/Dfp.java
Used ingredient: sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9792/Dfp.java
Used ingredient: iact = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9793/Dfp.java
Used ingredient: iter = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9794/Dfp.java
Used ingredient: int l=10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9795/Dfp.java
Used ingredient: fn  = fn1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9796/Dfp.java
Used ingredient: min = -1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9797/Dfp.java
Used ingredient: b.sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9798/Dfp.java
Used ingredient: a.sign = 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9799/Dfp.java
Used ingredient: ntrits = 0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9800/Dfp.java
SuspiciousModificationPoint:             for (int i = 0; i < mant.length; i++) {
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1465
Used ingredient: for (int i = 0; i < mean.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9801/Dfp.java
Used ingredient: for (int i = 0; i < data.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9802/Dfp.java
Used ingredient: for (int i = 0; i < stat.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9803/Dfp.java
Used ingredient: for (int i = 0; i < main.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9804/Dfp.java
Used ingredient: for (int i = 0; i < init.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9805/Dfp.java
Used ingredient: for (int i = lsd; i < mant.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9806/Dfp.java
Used ingredient: for (int i = 0; i < data1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9807/Dfp.java
Used ingredient: for (int i = 0; i < data2.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9808/Dfp.java
Used ingredient: for (int i = 0; i < dataU.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9809/Dfp.java
Used ingredient: for (int i = 0; i < dataC.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9810/Dfp.java
Used ingredient: for (int i = 0; i < ranks.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9811/Dfp.java
Used ingredient: for (int i = 0; i < input.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9812/Dfp.java
Used ingredient: for (int i = 0; i < knots.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9813/Dfp.java
Used ingredient: for (int i = 0; i < data1.length; i++){
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9814/Dfp.java
Used ingredient: for (int i = 0; i < a.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9815/Dfp.java
Used ingredient: for (int i = 0; i < n.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9816/Dfp.java
Used ingredient: for (int i = 0; i < m.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9817/Dfp.java
Used ingredient: for (int i = 0; i < in.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9818/Dfp.java
Used ingredient: for (int i = 0; i < val.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9819/Dfp.java
Used ingredient: for (int i = 0; i < arr.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9820/Dfp.java
Used ingredient: for (int i = 0; i < sin.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9821/Dfp.java
Used ingredient: for (int i = 0; i < in.length; i ++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9822/Dfp.java
Used ingredient: for (int i = 0; i < out.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9823/Dfp.java
Used ingredient: for (int i = 0; i < real.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9824/Dfp.java
Used ingredient: for (int i = 0; i < vals.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9825/Dfp.java
Used ingredient: for (int i = 0; i < last.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9826/Dfp.java
Used ingredient: for (int i = 0; i < beta.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9827/Dfp.java
Used ingredient: for (int i = 0; i < data.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9828/Dfp.java
Used ingredient: for (int i = 0; i < xval.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9829/Dfp.java
Used ingredient: for (int i = 0; i < test.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9830/Dfp.java
Used ingredient: for (int i = 0; i < hash.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9831/Dfp.java
Used ingredient: for (int i = 0; i < root.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9832/Dfp.java
Used ingredient: for (int i = 0; i < init.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9833/Dfp.java
Used ingredient: for (int i = 0; i < norm.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9834/Dfp.java
Used ingredient: for (int i = 0; i < mant.length - 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9835/Dfp.java
Used ingredient: for (int i = 0; i < mant.length + 1; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9836/Dfp.java
Used ingredient: for (int i = 0; i < matrixT.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9837/Dfp.java
Used ingredient: for (int i = 0; i < noint1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9838/Dfp.java
Used ingredient: for (int i = 0; i < actual.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9839/Dfp.java
Used ingredient: for (int i = 0; i < method.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9840/Dfp.java
Used ingredient: for (int i = 0; i < target.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9841/Dfp.java
Used ingredient: for (int i = 0; i < optima.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9842/Dfp.java
Used ingredient: for (int i = 0; i < points.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9843/Dfp.java
Used ingredient: for ( int i = 0; i < point.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9844/Dfp.java
Used ingredient: for (int i = 1; i < ranks.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9845/Dfp.java
Used ingredient: for (int i = 1; i < point.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9846/Dfp.java
Used ingredient: for (int i = 0; i < after.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9847/Dfp.java
Used ingredient: for(int i = 0; i < actual.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9848/Dfp.java
Used ingredient: for (int i = 0; i < types.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9849/Dfp.java
Used ingredient: for (int i = 0; i < nData.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9850/Dfp.java
Used ingredient: for (int i = 0; i < pData.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9851/Dfp.java
Used ingredient: for (int i = 0; i < point.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9852/Dfp.java
Used ingredient: for (int i = 1; i < in.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9853/Dfp.java
Used ingredient: for (int i = 0; i < p1.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9854/Dfp.java
Used ingredient: for (int i = 0; i < d.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9855/Dfp.java
Used ingredient: for (int i = 0; i < a.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9856/Dfp.java
Used ingredient: for (int i = 0; i < f.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9857/Dfp.java
Used ingredient: for (int i = 0; i < s.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9858/Dfp.java
Used ingredient: for (int i = 0; i < u.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9859/Dfp.java
Used ingredient: for (int i = 0; i < x.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9860/Dfp.java
Used ingredient: for (int i = 0; i < p.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9861/Dfp.java
Used ingredient: for (int i = 0; i < k.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9862/Dfp.java
Used ingredient: for (int i = 0; i < v.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9863/Dfp.java
Used ingredient: for (int i = 0; i < m.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9864/Dfp.java
Used ingredient: for (int i = 0; i < cos.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9865/Dfp.java
Used ingredient: for (int i = 0; i < buf.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9866/Dfp.java
Used ingredient: for (int i = 0; i < sig.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9867/Dfp.java
Used ingredient: for (int i = 0; i < xval.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9868/Dfp.java
Used ingredient: for (int i = 0; i < keys.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9869/Dfp.java
Used ingredient: for (int i = 0; i < xAll.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9870/Dfp.java
Used ingredient: for (int i = 0; i < tmp2.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9871/Dfp.java
Used ingredient: for (int i = 0; i < yDot.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9872/Dfp.java
Used ingredient: for (int i=0; i<mant.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9873/Dfp.java
Used ingredient: for (int i = 1; i < points.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9874/Dfp.java
Used ingredient: for (int i = 0; i < scaled.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9875/Dfp.java
Used ingredient: for (int i = 0; i < varcov.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9876/Dfp.java
Used ingredient: for (int i = 0; i < labels.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9877/Dfp.java
Used ingredient: for (int i = 0; i < result.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9878/Dfp.java
Used ingredient: for (int i = 0; i < values.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9879/Dfp.java
Used ingredient: for (int i = 0; i < refInt.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9880/Dfp.java
Used ingredient: for (int i = 0; i < random.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9881/Dfp.java
Used ingredient: for (int i = 0; i < sample.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9882/Dfp.java
Used ingredient: for (int i = 0; i < lTData.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9883/Dfp.java
Used ingredient: for (int i = 0; i < weight.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9884/Dfp.java
Used ingredient: for (int i = 0; i < xArray.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9885/Dfp.java
Used ingredient: for (int i = 0; i < optima.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9886/Dfp.java
Used ingredient: for (int i = 0; i < points.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9887/Dfp.java
Used ingredient: for (int i = 0; i < scale.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9888/Dfp.java
Used ingredient: for (int i = 0; i < cache.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9889/Dfp.java
Used ingredient: for (int i = 0; i < value.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9890/Dfp.java
Used ingredient: for (int i = 0; i < guess.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9891/Dfp.java
Used ingredient: for (int i = 0; i < dydom.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9892/Dfp.java
Used ingredient: for (int i = 0; i < array.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9893/Dfp.java
Used ingredient: for (int i = 1; i < f.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9894/Dfp.java
Used ingredient: for (int i = 1; i < s.length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9895/Dfp.java
Used ingredient: for (int i = 0; i < f1.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9896/Dfp.java
Used ingredient: for (int i = 0; i < length; i++) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9897/Dfp.java
Used ingredient: for (int i = 1; i < tmp2.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9898/Dfp.java
Used ingredient: for (int i = 0; i < f.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9899/Dfp.java
Used ingredient: for (int i = 0; i < r.length; ++i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9900/Dfp.java
SuspiciousModificationPoint:                 final int r = mant[i] + rh;
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1466
Used ingredient: final int r = mant[i] * x + rh;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9901/Dfp.java
Used ingredient: final int lsb = mant[lsd];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9902/Dfp.java
Used ingredient: final int r = (dm * trial) + rh;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9903/Dfp.java
Used ingredient: final int n = main.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9904/Dfp.java
Used ingredient: final int p = main.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9905/Dfp.java
Used ingredient: final int m = main.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9906/Dfp.java
Used ingredient: final int s = m.length - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9907/Dfp.java
Used ingredient: final int ip = npt + i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9908/Dfp.java
Used ingredient: final int jp = npt + j;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9909/Dfp.java
Used ingredient: final int order = i + 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9910/Dfp.java
Used ingredient: final int r = nMinus1 >> s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9911/Dfp.java
Used ingredient: final int factor = -(i + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9912/Dfp.java
Used ingredient: final int r = a.mant[i]+b.mant[i]+rh;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9913/Dfp.java
Used ingredient: final int n = data.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9914/Dfp.java
Used ingredient: final int m = data.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9915/Dfp.java
Used ingredient: final int n = dataR.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9916/Dfp.java
Used ingredient: final int n = vData.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9917/Dfp.java
Used ingredient: final int n = a.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9918/Dfp.java
Used ingredient: final int n = f.length - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9919/Dfp.java
Used ingredient: final int n = x.length - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9920/Dfp.java
Used ingredient: final int len = a.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9921/Dfp.java
Used ingredient: final int n = xval.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9922/Dfp.java
Used ingredient: final int max = val.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9923/Dfp.java
Used ingredient: final int ip = i + npt;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9924/Dfp.java
Used ingredient: final int len = max - min + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9925/Dfp.java
Used ingredient: final int i1 = i0 + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9926/Dfp.java
Used ingredient: final int ip1 = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9927/Dfp.java
Used ingredient: final int index = i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9928/Dfp.java
Used ingredient: final int i3 = i0 + 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9929/Dfp.java
Used ingredient: final int i2 = i0 + 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9930/Dfp.java
Used ingredient: final int ip5 = i + 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9931/Dfp.java
Used ingredient: final int ii = index[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9932/Dfp.java
Used ingredient: final int np = n + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9933/Dfp.java
Used ingredient: final int nptm = npt - np;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9934/Dfp.java
Used ingredient: final int rem = n % 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9935/Dfp.java
Used ingredient: final int rh = r / divisor;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9936/Dfp.java
Used ingredient: final int size = main.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9937/Dfp.java
Used ingredient: final int dim = means.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9938/Dfp.java
Used ingredient: final int n = matrixT.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9939/Dfp.java
Used ingredient: final int[] m = new int[s + 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9940/Dfp.java
Used ingredient: final int dim = data.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9941/Dfp.java
Used ingredient: final int len = data.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9942/Dfp.java
Used ingredient: final int n = v.data.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9943/Dfp.java
Used ingredient: final int m = lTData.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9944/Dfp.java
Used ingredient: final int m = qrt[0].length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9945/Dfp.java
Used ingredient: final int max = index + num;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9946/Dfp.java
Used ingredient: final int n = testValues[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9947/Dfp.java
Used ingredient: final int n = data.length - 5;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9948/Dfp.java
Used ingredient: final int wrk_off = -(in + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9949/Dfp.java
Used ingredient: final int n = point.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9950/Dfp.java
Used ingredient: final int m = pivot.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9951/Dfp.java
Used ingredient: final int n     = x.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9952/Dfp.java
Used ingredient: final int n = qrt.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9953/Dfp.java
Used ingredient: final int l1 = v1.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9954/Dfp.java
Used ingredient: final int n = f.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9955/Dfp.java
Used ingredient: final int n = p.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9956/Dfp.java
Used ingredient: final int n = x.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9957/Dfp.java
Used ingredient: final int n = c.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9958/Dfp.java
Used ingredient: final int N = x.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9959/Dfp.java
Used ingredient: final int hLen = h.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9960/Dfp.java
Used ingredient: final int len = x.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9961/Dfp.java
Used ingredient: final int len = y.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9962/Dfp.java
Used ingredient: final int l2 = v2.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9963/Dfp.java
Used ingredient: final int n = sb.length();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9964/Dfp.java
Used ingredient: final int len = pT.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9965/Dfp.java
Used ingredient: final int xLen = x.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9966/Dfp.java
Used ingredient: final int zLen = z.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9967/Dfp.java
Used ingredient: final int yLen = y.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9968/Dfp.java
Used ingredient: final int nRows = d.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9969/Dfp.java
Used ingredient: final int n = guess.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9970/Dfp.java
Used ingredient: final int nRows = v.length;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9971/Dfp.java
Used ingredient: final int x = in.readInt();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9972/Dfp.java
Used ingredient: final int i = index - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9973/Dfp.java
Used ingredient: final int index = i - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9974/Dfp.java
Used ingredient: final int p = diag - o;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9975/Dfp.java
Used ingredient: final int nh = n * np / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9976/Dfp.java
Used ingredient: final int n = degree() + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9977/Dfp.java
Used ingredient: final int index = i * 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9978/Dfp.java
Used ingredient: final int vi = v[index];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9979/Dfp.java
Used ingredient: final int ij = index[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9980/Dfp.java
Used ingredient: final int index  = i * 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9981/Dfp.java
Used ingredient: init[i] = minPoint[i] + 3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9982/Dfp.java
Used ingredient: final int high = n - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9983/Dfp.java
Used ingredient: final int k = i / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9984/Dfp.java
Used ingredient: final int iMax = n / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9985/Dfp.java
Used ingredient: final int nMinus1 = n - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9986/Dfp.java
Used ingredient: final int nfx = nfm - n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9987/Dfp.java
Used ingredient: final int z0 = v[indexRm1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9988/Dfp.java
Used ingredient: final int lastI = xLen - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9989/Dfp.java
Used ingredient: final int lastK = zLen - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9990/Dfp.java
Used ingredient: final int lastJ = yLen - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9991/Dfp.java
Used ingredient: init[i] = maxPoint[i] - 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9992/Dfp.java
Used ingredient: final long m = mantissa(b);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9993/Dfp.java
Used ingredient: final int power = p - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9994/Dfp.java
Used ingredient: final int kp1 = k + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9995/Dfp.java
Used ingredient: final int jp1 = j + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9996/Dfp.java
Used ingredient: final int kP1 = k + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9997/Dfp.java
Used ingredient: final int step = n / 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9998/Dfp.java
Used ingredient: final int halfN = n / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/9999/Dfp.java
Used ingredient: final int j_p_1 = j + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10000/Dfp.java
SuspiciousModificationPoint:                 rh = r / RADIX;
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1467
Used ingredient: int rh = extra / RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10001/Dfp.java
Used ingredient: mant[i] = r % RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10002/Dfp.java
Used ingredient: r = r / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10003/Dfp.java
Used ingredient: x /= RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10004/Dfp.java
Used ingredient: r = r / shift.x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10005/Dfp.java
Used ingredient: r[m1] = 1.0 / X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10006/Dfp.java
Used ingredient: rhs[m] = rhs[m] / X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10007/Dfp.java
Used ingredient: r = r * rnd;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10008/Dfp.java
Used ingredient: rhs[i] = xk / xi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10009/Dfp.java
Used ingredient: iter = iter + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10010/Dfp.java
Used ingredient: ret = t * c / x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10011/Dfp.java
Used ingredient: shift.x = p / s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10012/Dfp.java
Used ingredient: shift.y = q / s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10013/Dfp.java
Used ingredient: theta += pi / 6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10014/Dfp.java
Used ingredient: theta -= pi / 6;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10015/Dfp.java
Used ingredient: extra = RADIX-extra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10016/Dfp.java
Used ingredient: extra = extra - rh * RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10017/Dfp.java
Used ingredient: mant[i] = r - rh * RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10018/Dfp.java
Used ingredient: first = from - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10019/Dfp.java
Used ingredient: oneOverN = 1 / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10020/Dfp.java
Used ingredient: double z = r / s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10021/Dfp.java
Used ingredient: t = -t / A[k][k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10022/Dfp.java
Used ingredient: cur = next + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10023/Dfp.java
Used ingredient: result = a + b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10024/Dfp.java
Used ingredient: temp = ra + rb;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10025/Dfp.java
Used ingredient: ret = a + b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10026/Dfp.java
Used ingredient: kStart = n - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10027/Dfp.java
Used ingredient: remA = a + b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10028/Dfp.java
Used ingredient: remA = xa + a;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10029/Dfp.java
Used ingredient: mean = sum / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10030/Dfp.java
Used ingredient: ret = a - b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10031/Dfp.java
Used ingredient: ret = a * b;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10032/Dfp.java
Used ingredient: res *= i * f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10033/Dfp.java
Used ingredient: f = f / h;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10034/Dfp.java
Used ingredient: this.rho = rho;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10035/Dfp.java
Used ingredient: n = n / f;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10036/Dfp.java
Used ingredient: n = n / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10037/Dfp.java
Used ingredient: r = 2 * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10038/Dfp.java
Used ingredient: sum += ri * ri;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10039/Dfp.java
Used ingredient: ret = 0.5 * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10040/Dfp.java
Used ingredient: error += e * e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10041/Dfp.java
Used ingredient: sn = g / t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10042/Dfp.java
Used ingredient: ret = x * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10043/Dfp.java
Used ingredient: prod *= x - i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10044/Dfp.java
Used ingredient: m = n / 2.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10045/Dfp.java
Used ingredient: r[pos - 1] = X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10046/Dfp.java
Used ingredient: ya = epsA / za;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10047/Dfp.java
Used ingredient: s1 += r * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10048/Dfp.java
Used ingredient: s3 += r * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10049/Dfp.java
Used ingredient: q = q / r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10050/Dfp.java
Used ingredient: p = p / r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10051/Dfp.java
Used ingredient: q = fa / fc;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10052/Dfp.java
Used ingredient: c = 1.0 / t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10053/Dfp.java
Used ingredient: s = 1.0 / t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10054/Dfp.java
Used ingredient: s = 1.0 / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10055/Dfp.java
Used ingredient: s = 2.0 / n;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10056/Dfp.java
Used ingredient: d = 1.0 / d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10057/Dfp.java
Used ingredient: k = 1.0 / k;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10058/Dfp.java
Used ingredient: cs = f / t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10059/Dfp.java
Used ingredient: dx = 1.0 / div;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10060/Dfp.java
Used ingredient: hc = H1 * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10061/Dfp.java
Used ingredient: p = p / 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10062/Dfp.java
Used ingredient: dN = 1 / dN;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10063/Dfp.java
Used ingredient: c = q / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10064/Dfp.java
Used ingredient: s = p / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10065/Dfp.java
Used ingredient: p = x / s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10066/Dfp.java
Used ingredient: q = z / s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10067/Dfp.java
Used ingredient: q = q / p;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10068/Dfp.java
Used ingredient: d = p / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10069/Dfp.java
Used ingredient: dy[1] = x / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10070/Dfp.java
Used ingredient: rhs[mp1] = X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10071/Dfp.java
Used ingredient: trial = trial * 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10072/Dfp.java
Used ingredient: ratiob += nb / da;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10073/Dfp.java
Used ingredient: cbar = d2 / d1new;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10074/Dfp.java
Used ingredient: xbar -= x / fact1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10075/Dfp.java
Used ingredient: ybar -= y / fact1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10076/Dfp.java
Used ingredient: source = "1 / -2";
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10077/Dfp.java
Used ingredient: hex = "0" + hex;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10078/Dfp.java
Used ingredient: t = (v - u) / 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10079/Dfp.java
Used ingredient: d[r][c] = e * e;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10080/Dfp.java
Used ingredient: nDev = dev / n0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10081/Dfp.java
Used ingredient: dxNorm += s * s;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10082/Dfp.java
Used ingredient: q = q / shift.x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10083/Dfp.java
Used ingredient: p = p / shift.x;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10084/Dfp.java
Used ingredient: theta += pi /12;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10085/Dfp.java
Used ingredient: theta = -2 * pi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10086/Dfp.java
Used ingredient: temp = fX - fX2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10087/Dfp.java
Used ingredient: dy[0] = 1.0 / q;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10088/Dfp.java
Used ingredient: yb += epsB / za;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10089/Dfp.java
Used ingredient: remainder[i] = r - rh * RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10090/Dfp.java
Used ingredient: product[i+j] = r - rh * RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10091/Dfp.java
Used ingredient: double rb = r - ra;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10092/Dfp.java
Used ingredient: h = h - ort[m] * g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10093/Dfp.java
Used ingredient: r[nextr] = xk / xi;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10094/Dfp.java
Used ingredient: xbar += dx / fact1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10095/Dfp.java
Used ingredient: ybar += dy / fact1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10096/Dfp.java
Used ingredient: xbar -= dx / fact1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10097/Dfp.java
Used ingredient: ybar -= dy / fact1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10098/Dfp.java
Used ingredient: arr[j] = GLD_RATIO;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10099/Dfp.java
Used ingredient: mu[i] = h[i] / g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10100/Dfp.java
SuspiciousModificationPoint:                 mant[i] = r - rh * RADIX;
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1468
Used ingredient: remainder[i] = r - rh * RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10101/Dfp.java
Used ingredient: result.mant[i] = r - rh * RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10102/Dfp.java
Used ingredient: mant[i] = r % RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10103/Dfp.java
Used ingredient: product[i+j] = r - rh * RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10104/Dfp.java
Used ingredient: extra = extra - rh * RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10105/Dfp.java
Used ingredient: mant[i] = RADIX-mant[i]-1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10106/Dfp.java
Used ingredient: int rh = extra / RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10107/Dfp.java
Used ingredient: matrixT[i][idx] = -r / w;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10108/Dfp.java
Used ingredient: dataI[1] = srcI0 - srcI1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10109/Dfp.java
Used ingredient: dataR[1] = srcR0 - srcR1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10110/Dfp.java
Used ingredient: rl = r - rh * divisor;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10111/Dfp.java
Used ingredient: start += nreq - row - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10112/Dfp.java
Used ingredient: actRed = 1.0 - r * r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10113/Dfp.java
Used ingredient: newArr[i] = arr[i] * val;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10114/Dfp.java
Used ingredient: dataI[0] = srcI0 + srcI1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10115/Dfp.java
Used ingredient: dataR[0] = srcR0 + srcR1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10116/Dfp.java
Used ingredient: result.mant[i] = rh;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10117/Dfp.java
Used ingredient: array[i] = (i + 1) * inv;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10118/Dfp.java
Used ingredient: f[i] = s1 - s2 * s2 - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10119/Dfp.java
Used ingredient: if (x >= 0 && x < RADIX) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10120/Dfp.java
Used ingredient: iRm1[j] = (j + r - 1) % r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10121/Dfp.java
Used ingredient: iRm2[j] = (j + r - 2) % r;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10122/Dfp.java
Used ingredient: aXX[i][j] = (i - 1) * aX[i][j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10123/Dfp.java
Used ingredient: gradients[3] = 1 - (1 / den);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10124/Dfp.java
Used ingredient: jacobian[2][2] = -rho / r2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10125/Dfp.java
Used ingredient: x[i] = p[i] + alpha * d[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10126/Dfp.java
Used ingredient: d[m] = d1 * X * X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10127/Dfp.java
Used ingredient: r[m2] = Y - X * r[m2];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10128/Dfp.java
Used ingredient: nextr += nvars - i - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10129/Dfp.java
Used ingredient: int i = n - k + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10130/Dfp.java
Used ingredient: errfac[i] *= e / (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10131/Dfp.java
Used ingredient: result.mant[0] = rh;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10132/Dfp.java
Used ingredient: a[1] = c - a[0] + d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10133/Dfp.java
Used ingredient: aXY[i][j] = j * aX[i][j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10134/Dfp.java
Used ingredient: data[i] = data[i] - d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10135/Dfp.java
Used ingredient: data[i] = data[i] * d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10136/Dfp.java
Used ingredient: int i1 = p1 * p2 * p3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10137/Dfp.java
Used ingredient: int i2 = p1 * p2 * p4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10138/Dfp.java
Used ingredient: yDot[i] = 3 * t5 - y[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10139/Dfp.java
Used ingredient: t[index]     = p.getX();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10140/Dfp.java
Used ingredient: mant[mant.length-1] = rh;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10141/Dfp.java
Used ingredient: f[i] = (i + 1) * sum - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10142/Dfp.java
Used ingredient: yDot[3] = -invR3  * y[1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10143/Dfp.java
Used ingredient: yDot[2] = -invR3  * y[0];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10144/Dfp.java
Used ingredient: mant[i] = mant[i-1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10145/Dfp.java
Used ingredient: rh = r / RADIX;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10146/Dfp.java
Used ingredient: matrixT[idx][idx]     = 1.0;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10147/Dfp.java
Used ingredient: meanImpl[i]    = new Mean();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10148/Dfp.java
Used ingredient: if (x < 0 || x >= RADIX) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10149/Dfp.java
Used ingredient: z[i] = beta * (z[i] + zI);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10150/Dfp.java
Used ingredient: yDDot[i] = -omega2 * y[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10151/Dfp.java
Used ingredient: va[i][j] += -beta * hK[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10152/Dfp.java
Used ingredient: final int r = mant[i] * x + rh;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10153/Dfp.java
Used ingredient: aYY[i][j] = (j - 1) * aY[i][j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10154/Dfp.java
Used ingredient: y1[j] = y0[j] + h * yDot0[j];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10155/Dfp.java
Used ingredient: jacobian[i][j] = i * (j + 1);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10156/Dfp.java
Used ingredient: yDot[i] = t * (t * t - y[i]);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10157/Dfp.java
Used ingredient: gradient[i] = point[i] / d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10158/Dfp.java
Used ingredient: ratio = (f - fopt) / vquad;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10159/Dfp.java
Used ingredient: jacobian[1][1] =  x / rho2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10160/Dfp.java
Used ingredient: jacobian[1][0] = -y / rho2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10161/Dfp.java
Used ingredient: rHessian[1][0] = -x * yOr3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10162/Dfp.java
Used ingredient: rHessian[2][0] = -z * xOr3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10163/Dfp.java
Used ingredient: rHessian[2][1] = -y * zOr3;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10164/Dfp.java
Used ingredient: final int r = mant[i] + rh;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10165/Dfp.java
Used ingredient: init[i] = maxPoint[i] - 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10166/Dfp.java
Used ingredient: init[i] = minPoint[i] - 20;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10167/Dfp.java
Used ingredient: jacobian[i][j] = dx * tmp4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10168/Dfp.java
Used ingredient: minImpl[i]     = new Min();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10169/Dfp.java
Used ingredient: maxImpl[i]     = new Max();
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10170/Dfp.java
Used ingredient: rhs[m] = rhs[m] / X;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10171/Dfp.java
Used ingredient: h = h - ort[m] * g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10172/Dfp.java
Used ingredient: mu[i] = h[i] / g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10173/Dfp.java
Used ingredient: ort[m] = ort[m] - g;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10174/Dfp.java
Used ingredient: ret = ret * 31 + nRows;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10175/Dfp.java
Used ingredient: z[j] += hIJ * hKI;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10176/Dfp.java
Used ingredient: arr[2] ^= arr[3] << 8;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10177/Dfp.java
Used ingredient: arr[6] ^= arr[7] << 8;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10178/Dfp.java
Used ingredient: aX[i][j] = i * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10179/Dfp.java
Used ingredient: aY[i][j] = j * c;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10180/Dfp.java
Used ingredient: ret = 1.0 - 0.5 * t;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10181/Dfp.java
Used ingredient: e[nrt] = A[nrt][p - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10182/Dfp.java
Used ingredient: arr[4] ^= arr[5] << 10;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10183/Dfp.java
Used ingredient: arr[0] ^= arr[1] << 11;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10184/Dfp.java
Used ingredient: arr[7] ^= arr[0] >>> 9;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10185/Dfp.java
Used ingredient: arr[1] ^= arr[2] >>> 2;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10186/Dfp.java
Used ingredient: arr[5] ^= arr[6] >>> 4;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10187/Dfp.java
Used ingredient: gradients[0] = 1 / den;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10188/Dfp.java
Used ingredient: hI[j] -= alpha * hI[k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10189/Dfp.java
Used ingredient: nP[i] = p[i] + nD[i];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10190/Dfp.java
Used ingredient: arr[3] ^= arr[4] >>> 16;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10191/Dfp.java
Used ingredient: d2[i] = 2 * i + 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10192/Dfp.java
Used ingredient: mt[0] = mt[N - 1];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10193/Dfp.java
Used ingredient: remB = -(remA - xa - a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10194/Dfp.java
Used ingredient: alpha[k] += d * yRow[k];
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10195/Dfp.java
Used ingredient: remB += -(remA - b - a);
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10196/Dfp.java
Used ingredient: xTab[i] = 0.1 * i;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10197/Dfp.java
Used ingredient: data[i] = data[i] / d;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10198/Dfp.java
Used ingredient: angt = angbd * i / iu;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10199/Dfp.java
Used ingredient: f[i] = i * sum - 1;
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10200/Dfp.java
SuspiciousModificationPoint:             if (rh != 0) {
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1471
Used ingredient: if (rh == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10201/Dfp.java
Used ingredient: if (err != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10202/Dfp.java
Used ingredient: if (r == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10203/Dfp.java
Used ingredient: if (r <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10204/Dfp.java
Used ingredient: if (h == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10205/Dfp.java
Used ingredient: if (n != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10206/Dfp.java
Used ingredient: if (i != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10207/Dfp.java
Used ingredient: if (d != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10208/Dfp.java
Used ingredient: if (s != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10209/Dfp.java
Used ingredient: if (m != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10210/Dfp.java
Used ingredient: if (s1 != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10211/Dfp.java
Used ingredient: if (y != y0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10212/Dfp.java
Used ingredient: if (row == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10213/Dfp.java
Used ingredient: if (i-- != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10214/Dfp.java
Used ingredient: if (s != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10215/Dfp.java
Used ingredient: if (b != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10216/Dfp.java
Used ingredient: if (w != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10217/Dfp.java
Used ingredient: if (a != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10218/Dfp.java
Used ingredient: if (dpj != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10219/Dfp.java
Used ingredient: if (n <= 0 ) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10220/Dfp.java
Used ingredient: if (r >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10221/Dfp.java
Used ingredient: if (p != -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10222/Dfp.java
Used ingredient: if (r < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10223/Dfp.java
Used ingredient: if (row > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10224/Dfp.java
Used ingredient: if (n == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10225/Dfp.java
Used ingredient: if (i == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10226/Dfp.java
Used ingredient: if (n <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10227/Dfp.java
Used ingredient: if (k != im) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10228/Dfp.java
Used ingredient: if (tS <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10229/Dfp.java
Used ingredient: if (n != 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10230/Dfp.java
Used ingredient: if (d != n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10231/Dfp.java
Used ingredient: if (i != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10232/Dfp.java
Used ingredient: if (i != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10233/Dfp.java
Used ingredient: if (k != i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10234/Dfp.java
Used ingredient: if (al == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10235/Dfp.java
Used ingredient: if (e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10236/Dfp.java
Used ingredient: if (e <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10237/Dfp.java
Used ingredient: if (g >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10238/Dfp.java
Used ingredient: if (g <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10239/Dfp.java
Used ingredient: if (e >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10240/Dfp.java
Used ingredient: if (d >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10241/Dfp.java
Used ingredient: if (s == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10242/Dfp.java
Used ingredient: if (q == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10243/Dfp.java
Used ingredient: if (q >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10244/Dfp.java
Used ingredient: if (a == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10245/Dfp.java
Used ingredient: if (k == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10246/Dfp.java
Used ingredient: if (p == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10247/Dfp.java
Used ingredient: if (x == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10248/Dfp.java
Used ingredient: if (j == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10249/Dfp.java
Used ingredient: if (y == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10250/Dfp.java
Used ingredient: if (p >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10251/Dfp.java
Used ingredient: if (k <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10252/Dfp.java
Used ingredient: if (p <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10253/Dfp.java
Used ingredient: if (x <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10254/Dfp.java
Used ingredient: if (v <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10255/Dfp.java
Used ingredient: if (c2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10256/Dfp.java
Used ingredient: if (g0 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10257/Dfp.java
Used ingredient: if (sd <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10258/Dfp.java
Used ingredient: if (dk == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10259/Dfp.java
Used ingredient: if (mu >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10260/Dfp.java
Used ingredient: if (f1 >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10261/Dfp.java
Used ingredient: if (f1 <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10262/Dfp.java
Used ingredient: if (s2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10263/Dfp.java
Used ingredient: if (y2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10264/Dfp.java
Used ingredient: if (j == 40) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10265/Dfp.java
Used ingredient: if (x1 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10266/Dfp.java
Used ingredient: if (y1 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10267/Dfp.java
Used ingredient: if (d != d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10268/Dfp.java
Used ingredient: if (j != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10269/Dfp.java
Used ingredient: if (a != b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10270/Dfp.java
Used ingredient: if (j != k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10271/Dfp.java
Used ingredient: if (k != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10272/Dfp.java
Used ingredient: if (x != x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10273/Dfp.java
Used ingredient: if (m != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10274/Dfp.java
Used ingredient: if (err != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10275/Dfp.java
Used ingredient: if (shift != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10276/Dfp.java
Used ingredient: if (whole != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10277/Dfp.java
Used ingredient: if (k[i] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10278/Dfp.java
Used ingredient: if (norm == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10279/Dfp.java
Used ingredient: if (r != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10280/Dfp.java
Used ingredient: if (paru == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10281/Dfp.java
Used ingredient: if (e[k] != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10282/Dfp.java
Used ingredient: if (sign != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10283/Dfp.java
Used ingredient: if (di != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10284/Dfp.java
Used ingredient: if (xb != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10285/Dfp.java
Used ingredient: if (excp != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10286/Dfp.java
Used ingredient: if (xabs != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10287/Dfp.java
Used ingredient: if (arg >= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10288/Dfp.java
Used ingredient: if (rank > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10289/Dfp.java
Used ingredient: if (--e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10290/Dfp.java
Used ingredient: if (max <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10291/Dfp.java
Used ingredient: if (remA > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10292/Dfp.java
Used ingredient: if (len <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10293/Dfp.java
Used ingredient: if (den == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10294/Dfp.java
Used ingredient: if (idx == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10295/Dfp.java
Used ingredient: if (dot >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10296/Dfp.java
Used ingredient: if (1 != out) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10297/Dfp.java
Used ingredient: if (val == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10298/Dfp.java
Used ingredient: if (d == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10299/Dfp.java
Used ingredient: if (s == 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10300/Dfp.java
SuspiciousModificationPoint:         if (exp < MIN_EXP) {
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1478
Used ingredient: if (exp > MAX_EXP) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10301/Dfp.java
Used ingredient: if (exp < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10302/Dfp.java
Used ingredient: if (exponent <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10303/Dfp.java
Used ingredient: if (exponent < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10304/Dfp.java
Used ingredient: if (tempa <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10305/Dfp.java
Used ingredient: if (a.exp < b.exp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10306/Dfp.java
Used ingredient: if (expansion <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10307/Dfp.java
Used ingredient: if (excp != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10308/Dfp.java
Used ingredient: if (index < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10309/Dfp.java
Used ingredient: if (exponent != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10310/Dfp.java
Used ingredient: if (eps < 0.0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10311/Dfp.java
Used ingredient: if (index < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10312/Dfp.java
Used ingredient: if (idxStep < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10313/Dfp.java
Used ingredient: if (resid <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10314/Dfp.java
Used ingredient: if (exponent == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10315/Dfp.java
Used ingredient: if (stepSize <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10316/Dfp.java
Used ingredient: if (expected == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10317/Dfp.java
Used ingredient: if (index < -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10318/Dfp.java
Used ingredient: if (nSteps < 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10319/Dfp.java
Used ingredient: if (nSteps < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10320/Dfp.java
Used ingredient: if (extremeT < t) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10321/Dfp.java
Used ingredient: if (colIndex < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10322/Dfp.java
Used ingredient: if (sdec <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10323/Dfp.java
Used ingredient: if (x >= C_LIMIT) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10324/Dfp.java
Used ingredient: if (index < low) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10325/Dfp.java
Used ingredient: if (temp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10326/Dfp.java
Used ingredient: if (delsq <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10327/Dfp.java
Used ingredient: if (wBegin < wEnd) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10328/Dfp.java
Used ingredient: if (temp < stplen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10329/Dfp.java
Used ingredient: if (a.exp > b.exp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10330/Dfp.java
Used ingredient: if (x == Long.MIN_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10331/Dfp.java
Used ingredient: if (nans != FINITE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10332/Dfp.java
Used ingredient: if (stepsq == ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10333/Dfp.java
Used ingredient: if (step < minStep) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10334/Dfp.java
Used ingredient: if (wMiddle < wEnd) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10335/Dfp.java
Used ingredient: if (exponent < -1074) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10336/Dfp.java
Used ingredient: if (e <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10337/Dfp.java
Used ingredient: if (p <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10338/Dfp.java
Used ingredient: if (x <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10339/Dfp.java
Used ingredient: if (max <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10340/Dfp.java
Used ingredient: if (len <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10341/Dfp.java
Used ingredient: if (x <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10342/Dfp.java
Used ingredient: if (x <= 0.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10343/Dfp.java
Used ingredient: if (x < -20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10344/Dfp.java
Used ingredient: if (x <= m) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10345/Dfp.java
Used ingredient: if (den < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10346/Dfp.java
Used ingredient: if (p <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10347/Dfp.java
Used ingredient: if (x <= x1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10348/Dfp.java
Used ingredient: if (p < 0.1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10349/Dfp.java
Used ingredient: if (p < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10350/Dfp.java
Used ingredient: if (x < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10351/Dfp.java
Used ingredient: if (e < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10352/Dfp.java
Used ingredient: if (p < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10353/Dfp.java
Used ingredient: if (x < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10354/Dfp.java
Used ingredient: if (xa < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10355/Dfp.java
Used ingredient: if (x1 < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10356/Dfp.java
Used ingredient: if (x1 < x0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10357/Dfp.java
Used ingredient: if (pCrit <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10358/Dfp.java
Used ingredient: if (alpha <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10359/Dfp.java
Used ingredient: if (shape <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10360/Dfp.java
Used ingredient: if (mean <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10361/Dfp.java
Used ingredient: if (size <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10362/Dfp.java
Used ingredient: if (beta <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10363/Dfp.java
Used ingredient: if (temp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10364/Dfp.java
Used ingredient: if (extra != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10365/Dfp.java
Used ingredient: if (nreq < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10366/Dfp.java
Used ingredient: if (x < -0.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10367/Dfp.java
Used ingredient: if (xInt < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10368/Dfp.java
Used ingredient: if (p < 10.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10369/Dfp.java
Used ingredient: if (shape <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10370/Dfp.java
Used ingredient: if (shape <= 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10371/Dfp.java
Used ingredient: if (index == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10372/Dfp.java
Used ingredient: if (eigen <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10373/Dfp.java
Used ingredient: if (length < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10374/Dfp.java
Used ingredient: if (den <= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10375/Dfp.java
Used ingredient: if (scale <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10376/Dfp.java
Used ingredient: if (x < -2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10377/Dfp.java
Used ingredient: if (x < min) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10378/Dfp.java
Used ingredient: if (x < a) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10379/Dfp.java
Used ingredient: if (x < m) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10380/Dfp.java
Used ingredient: if (x < mu) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10381/Dfp.java
Used ingredient: if (max < e) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10382/Dfp.java
Used ingredient: if (x < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10383/Dfp.java
Used ingredient: if (xa < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10384/Dfp.java
Used ingredient: if (pos < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10385/Dfp.java
Used ingredient: if (maxIter <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10386/Dfp.java
Used ingredient: if (error <= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10387/Dfp.java
Used ingredient: if (lower < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10388/Dfp.java
Used ingredient: if (begin < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10389/Dfp.java
Used ingredient: if (det < 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10390/Dfp.java
Used ingredient: if (beta < 0.) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10391/Dfp.java
Used ingredient: if (alpha < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10392/Dfp.java
Used ingredient: if (value < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10393/Dfp.java
Used ingredient: if (shape < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10394/Dfp.java
Used ingredient: if (current < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10395/Dfp.java
Used ingredient: if (xDegree < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10396/Dfp.java
Used ingredient: if (yDegree < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10397/Dfp.java
Used ingredient: if (param[2] <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10398/Dfp.java
Used ingredient: if (param[5] <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10399/Dfp.java
Used ingredient: if (beta < 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10400/Dfp.java
SuspiciousModificationPoint:         if (exp > MAX_EXP) {
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1484
Used ingredient: if (exp < MIN_EXP) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10401/Dfp.java
Used ingredient: if (temp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10402/Dfp.java
Used ingredient: if (a.exp > b.exp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10403/Dfp.java
Used ingredient: if (x >= LOG_MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10404/Dfp.java
Used ingredient: if (exp < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10405/Dfp.java
Used ingredient: if (exponent <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10406/Dfp.java
Used ingredient: if (exponent < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10407/Dfp.java
Used ingredient: if (tempa <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10408/Dfp.java
Used ingredient: if (a.exp < b.exp) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10409/Dfp.java
Used ingredient: if (excp != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10410/Dfp.java
Used ingredient: if (exponent != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10411/Dfp.java
Used ingredient: if (exponent == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10412/Dfp.java
Used ingredient: if (expected == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10413/Dfp.java
Used ingredient: if (x >= C_LIMIT) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10414/Dfp.java
Used ingredient: if (tmp > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10415/Dfp.java
Used ingredient: if (tmp1 > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10416/Dfp.java
Used ingredient: if (stplen > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10417/Dfp.java
Used ingredient: if (exponent > 1023) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10418/Dfp.java
Used ingredient: if (x <= -LOG_MAX_VALUE) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10419/Dfp.java
Used ingredient: if (expansion <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10420/Dfp.java
Used ingredient: if (stepsq == ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10421/Dfp.java
Used ingredient: if (step > maxStep) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10422/Dfp.java
Used ingredient: if (exponent > -1023) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10423/Dfp.java
Used ingredient: if (expX > expY + 27) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10424/Dfp.java
Used ingredient: if (index < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10425/Dfp.java
Used ingredient: if (eps < 0.0d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10426/Dfp.java
Used ingredient: if (index < n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10427/Dfp.java
Used ingredient: if (idxStep < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10428/Dfp.java
Used ingredient: if (resid <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10429/Dfp.java
Used ingredient: if (stepSize <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10430/Dfp.java
Used ingredient: if (index < -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10431/Dfp.java
Used ingredient: if (nSteps < 4) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10432/Dfp.java
Used ingredient: if (nSteps < 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10433/Dfp.java
Used ingredient: if (extremeT < t) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10434/Dfp.java
Used ingredient: if (colIndex < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10435/Dfp.java
Used ingredient: if (sdec <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10436/Dfp.java
Used ingredient: if (index < low) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10437/Dfp.java
Used ingredient: if (delsq <= ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10438/Dfp.java
Used ingredient: if (wBegin < wEnd) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10439/Dfp.java
Used ingredient: if (temp < stplen) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10440/Dfp.java
Used ingredient: if (temp == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10441/Dfp.java
Used ingredient: if (extra != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10442/Dfp.java
Used ingredient: if (index == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10443/Dfp.java
Used ingredient: if (next != null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10444/Dfp.java
Used ingredient: if (idxStep == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10445/Dfp.java
Used ingredient: if (index == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10446/Dfp.java
Used ingredient: if (steps[j] == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10447/Dfp.java
Used ingredient: if (index == max) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10448/Dfp.java
Used ingredient: if (beta == ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10449/Dfp.java
Used ingredient: if (index == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10450/Dfp.java
Used ingredient: if (steps == null) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10451/Dfp.java
Used ingredient: if (e >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10452/Dfp.java
Used ingredient: if (p >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10453/Dfp.java
Used ingredient: if (remA > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10454/Dfp.java
Used ingredient: if (x >= 0.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10455/Dfp.java
Used ingredient: if (x >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10456/Dfp.java
Used ingredient: if (pm >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10457/Dfp.java
Used ingredient: if (x > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10458/Dfp.java
Used ingredient: if (x > 0.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10459/Dfp.java
Used ingredient: if (xj > 0.) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10460/Dfp.java
Used ingredient: if (p > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10461/Dfp.java
Used ingredient: if (x > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10462/Dfp.java
Used ingredient: if (fp > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10463/Dfp.java
Used ingredient: if (x > 20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10464/Dfp.java
Used ingredient: if (order > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10465/Dfp.java
Used ingredient: if (knew >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10466/Dfp.java
Used ingredient: if (comp >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10467/Dfp.java
Used ingredient: if (real >= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10468/Dfp.java
Used ingredient: if (pos >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10469/Dfp.java
Used ingredient: if (x > 20.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10470/Dfp.java
Used ingredient: if (x > 0.25) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10471/Dfp.java
Used ingredient: if (comp > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10472/Dfp.java
Used ingredient: if (ipt > n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10473/Dfp.java
Used ingredient: if (_i > _j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10474/Dfp.java
Used ingredient: if (x > 1.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10475/Dfp.java
Used ingredient: if (x0 > x1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10476/Dfp.java
Used ingredient: if (_a > _b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10477/Dfp.java
Used ingredient: if (error >= 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10478/Dfp.java
Used ingredient: if (order > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10479/Dfp.java
Used ingredient: if (daux > 0.) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10480/Dfp.java
Used ingredient: if (real > 20.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10481/Dfp.java
Used ingredient: if (error > 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10482/Dfp.java
Used ingredient: if (x.sign >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10483/Dfp.java
Used ingredient: if (y > yMax) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10484/Dfp.java
Used ingredient: if (xa > 1.5) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10485/Dfp.java
Used ingredient: if (fX > fX2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10486/Dfp.java
Used ingredient: if (x >= upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10487/Dfp.java
Used ingredient: if (shs > ZERO) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10488/Dfp.java
Used ingredient: if (itest >= 3) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10489/Dfp.java
Used ingredient: if (getN() > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10490/Dfp.java
Used ingredient: if (offset > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10491/Dfp.java
Used ingredient: if (nonZero >= m) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10492/Dfp.java
Used ingredient: if (termJ[0] > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10493/Dfp.java
Used ingredient: if (maxOrder > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10494/Dfp.java
Used ingredient: if (hDouble >= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10495/Dfp.java
Used ingredient: if (delta >= 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10496/Dfp.java
Used ingredient: if (x > upper) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10497/Dfp.java
Used ingredient: if (x * x > 1.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10498/Dfp.java
Used ingredient: if (term[0] > 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10499/Dfp.java
Used ingredient: if (sumxx > 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10500/Dfp.java
SuspiciousModificationPoint:         if (n != 0) {
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1490
Used ingredient: if (n <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10501/Dfp.java
Used ingredient: if (i != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10502/Dfp.java
Used ingredient: if (d != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10503/Dfp.java
Used ingredient: if (s != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10504/Dfp.java
Used ingredient: if (m != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10505/Dfp.java
Used ingredient: if (n == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10506/Dfp.java
Used ingredient: if (n != 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10507/Dfp.java
Used ingredient: if (n <= 0 ) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10508/Dfp.java
Used ingredient: if (s1 != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10509/Dfp.java
Used ingredient: if (y != y0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10510/Dfp.java
Used ingredient: if (rh != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10511/Dfp.java
Used ingredient: if (e >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10512/Dfp.java
Used ingredient: if (p >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10513/Dfp.java
Used ingredient: if (e <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10514/Dfp.java
Used ingredient: if (p <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10515/Dfp.java
Used ingredient: if (x <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10516/Dfp.java
Used ingredient: if (e == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10517/Dfp.java
Used ingredient: if (p == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10518/Dfp.java
Used ingredient: if (x == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10519/Dfp.java
Used ingredient: if (x != x) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10520/Dfp.java
Used ingredient: if (g >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10521/Dfp.java
Used ingredient: if (d >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10522/Dfp.java
Used ingredient: if (q >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10523/Dfp.java
Used ingredient: if (n > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10524/Dfp.java
Used ingredient: if (n > 20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10525/Dfp.java
Used ingredient: if (r <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10526/Dfp.java
Used ingredient: if (g <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10527/Dfp.java
Used ingredient: if (k <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10528/Dfp.java
Used ingredient: if (v <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10529/Dfp.java
Used ingredient: if (n < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10530/Dfp.java
Used ingredient: if (r == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10531/Dfp.java
Used ingredient: if (h == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10532/Dfp.java
Used ingredient: if (i == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10533/Dfp.java
Used ingredient: if (d != n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10534/Dfp.java
Used ingredient: if (i != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10535/Dfp.java
Used ingredient: if (i != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10536/Dfp.java
Used ingredient: if (k != i) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10537/Dfp.java
Used ingredient: if (s == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10538/Dfp.java
Used ingredient: if (q == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10539/Dfp.java
Used ingredient: if (a == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10540/Dfp.java
Used ingredient: if (k == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10541/Dfp.java
Used ingredient: if (j == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10542/Dfp.java
Used ingredient: if (y == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10543/Dfp.java
Used ingredient: if (d != d) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10544/Dfp.java
Used ingredient: if (j != 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10545/Dfp.java
Used ingredient: if (a != b) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10546/Dfp.java
Used ingredient: if (j != k) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10547/Dfp.java
Used ingredient: if (k != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10548/Dfp.java
Used ingredient: if (m != j) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10549/Dfp.java
Used ingredient: if (n == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10550/Dfp.java
Used ingredient: if (n == 2) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10551/Dfp.java
Used ingredient: if (sign != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10552/Dfp.java
Used ingredient: if (len <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10553/Dfp.java
Used ingredient: if (err != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10554/Dfp.java
Used ingredient: if (dpj != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10555/Dfp.java
Used ingredient: if (den == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10556/Dfp.java
Used ingredient: if (i-- != 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10557/Dfp.java
Used ingredient: if (s != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10558/Dfp.java
Used ingredient: if (b != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10559/Dfp.java
Used ingredient: if (w != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10560/Dfp.java
Used ingredient: if (a != 0.0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10561/Dfp.java
Used ingredient: if (den < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10562/Dfp.java
Used ingredient: if (p != -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10563/Dfp.java
Used ingredient: if (x1 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10564/Dfp.java
Used ingredient: if (mu >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10565/Dfp.java
Used ingredient: if (f1 >= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10566/Dfp.java
Used ingredient: if (tS <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10567/Dfp.java
Used ingredient: if (sd <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10568/Dfp.java
Used ingredient: if (f1 <= 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10569/Dfp.java
Used ingredient: if (n <= 61) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10570/Dfp.java
Used ingredient: if (rh == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10571/Dfp.java
Used ingredient: if (k != im) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10572/Dfp.java
Used ingredient: if (al == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10573/Dfp.java
Used ingredient: if (c2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10574/Dfp.java
Used ingredient: if (g0 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10575/Dfp.java
Used ingredient: if (dk == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10576/Dfp.java
Used ingredient: if (s2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10577/Dfp.java
Used ingredient: if (y2 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10578/Dfp.java
Used ingredient: if (j == 40) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10579/Dfp.java
Used ingredient: if (y1 == 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10580/Dfp.java
Used ingredient: if (n == -1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10581/Dfp.java
Used ingredient: if (p > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10582/Dfp.java
Used ingredient: if (x > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10583/Dfp.java
Used ingredient: if (fp > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10584/Dfp.java
Used ingredient: if (x > 20) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10585/Dfp.java
Used ingredient: if (x <= m) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10586/Dfp.java
Used ingredient: if (p <= 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10587/Dfp.java
Used ingredient: if (e < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10588/Dfp.java
Used ingredient: if (p < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10589/Dfp.java
Used ingredient: if (x < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10590/Dfp.java
Used ingredient: if (xa < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10591/Dfp.java
Used ingredient: if (x1 < 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10592/Dfp.java
Used ingredient: if (i >= N) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10593/Dfp.java
Used ingredient: if (p == 1) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10594/Dfp.java
Used ingredient: if (x == c) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10595/Dfp.java
Used ingredient: if (x == y) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10596/Dfp.java
Used ingredient: if (r >= p) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10597/Dfp.java
Used ingredient: if ( i > 0) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10598/Dfp.java
Used ingredient: if (y > 0)  {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10599/Dfp.java
Used ingredient: if (m >= n) {
/mnt/vdb1/home/ubuntu/output_extension/Math/Math_2/10600/Dfp.java
SuspiciousModificationPoint:             field.setIEEEFlagsBits(DfpField.FLAG_INEXACT);
At: Dfp.java org.apache.commons.math3.dfp.Dfp
Line number: 1492


Node: zimin


Date: Wed Jul  4 12:37:46 EDT 2018

