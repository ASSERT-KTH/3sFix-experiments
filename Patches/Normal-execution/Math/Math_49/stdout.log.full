update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/java to provide /usr/bin/java (java) in manual mode
update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
[-customengine, fr.inria.astor.approaches.zm.ZmEngine, -package, org.apache.commons, -srcjavafolder, /src/main/java/, -failing, org.apache.commons.math.linear.SparseRealVectorTest:, -jvm4testexecution, /mnt/vdb/jdk1.7.0_80/bin/, -binjavafolder, /target/classes/, -flthreshold, 0, -srctestfolder, /src/test/java/, -location, /tmp/math_49_Genprog, -javacompliancelevel, 5, -dependencies, /tmp/math_49_Genprog/target/classes/:/tmp/math_49_Genprog/target/test-classes/:/tmp/math_49_Genprog/lib/commons-discovery-0.5.jar:/mnt/vdb1/home/ubuntu/defects4j-repair-runner/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar, -parameters, disablelog:false:logtestexecution:true, -bintestfolder, /target/test-classes/, -maxgen, 0]
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:610) - command line arguments: [-customengine  fr.inria.astor.approaches.zm.ZmEngine  -package  org.apache.commons  -srcjavafolder  /src/main/java/  -failing  org.apache.commons.math.linear.SparseRealVectorTest:  -jvm4testexecution  /mnt/vdb/jdk1.7.0_80/bin/  -binjavafolder  /target/classes/  -flthreshold  0  -srctestfolder  /src/test/java/  -location  /tmp/math_49_Genprog  -javacompliancelevel  5  -dependencies  /tmp/math_49_Genprog/target/classes/:/tmp/math_49_Genprog/target/test-classes/:/tmp/math_49_Genprog/lib/commons-discovery-0.5.jar:/mnt/vdb1/home/ubuntu/defects4j-repair-runner/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar  -parameters  disablelog:false:logtestexecution:true  -bintestfolder  /target/test-classes/  -maxgen  0]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:810) - Source folders: [/tmp/math_49_Genprog/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:829) - Source Test folders: [/tmp/math_49_Genprog/src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/math_49_Genprog/./output_astor/AstorMain-math_49_Genprog//bin//default from 570 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.0
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/tmp/math_49_Genprog/lib/commons-discovery-0.5.jar, /tmp/math_49_Genprog/target/classes/, /tmp/math_49_Genprog/target/test-classes/, /tmp/math_49_Genprog/./output_astor/AstorMain-math_49_Genprog//bin//default]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math.random.ValueServerTest#testNextDigest
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:2954, fails: 3, GZoltar suspicious 23538, with positive susp 396
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 2954
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 396 with susp > 0.0, we consider: 396
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:1066) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:1151) - Creating model,  Code location from working folder: /tmp/math_49_Genprog/./output_astor/AstorMain-math_49_Genprog//src//default
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:61) - building model: /tmp/math_49_Genprog/./output_astor/AstorMain-math_49_Genprog//src//default, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:73) - Classpath for building SpoonModel [/tmp/math_49_Genprog/target/classes/, /tmp/math_49_Genprog/target/test-classes/, /tmp/math_49_Genprog/lib/commons-discovery-0.5.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:1070) - 
---- Initial suspicious size: 391
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryRunner$1, methodName=org.apache.commons.math.RetryRunner$1{evaluate()V 0.0, lineNumber=59, susp=0.028104971365967134]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryRunner$1, methodName=org.apache.commons.math.RetryRunner$1{evaluate()V 0.0, lineNumber=54, susp=0.02765006318046655]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryRunner$1, methodName=org.apache.commons.math.RetryRunner$1{evaluate()V 0.0, lineNumber=56, susp=0.02765006318046655]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryRunner$1, methodName=org.apache.commons.math.RetryRunner$1{evaluate()V 0.0, lineNumber=57, susp=0.02765006318046655]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryRunner, methodName=org.apache.commons.math.RetryRunner{methodInvoker(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement; 0.0, lineNumber=45, susp=0.02765006318046655]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryRunner, methodName=org.apache.commons.math.RetryRunner{methodInvoker(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement; 0.0, lineNumber=46, susp=0.02765006318046655]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 391,  345
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 345
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 345, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:63) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:64) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:workingDirectory= /tmp/math_49_Genprog/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvm4testexecution= /mnt/vdb/jdk1.7.0_80/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:binjavafolder= /target/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:skipfitnessinitialpopulation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:flthreshold= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:tmax2= 960000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:tmax1= 120000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:srctestfolder= /src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:failing= org.apache.commons.math.linear.SparseRealVectorTest:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logtestexecution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:projectIdentifier= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:stopfirst= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:customengine= fr.inria.astor.approaches.zm.ZmEngine
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:bintestfolder= /target/test-classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxGeneration= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:max_synthesis_step= 2000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxtime= 60
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvmversion= 1.7.0_80
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:mode= jgenprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:jvm4evosuitetestexecution= /mnt/vdb/jdk1.7.0_80/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:dependenciespath= /tmp/math_49_Genprog/target/classes/:/tmp/math_49_Genprog/target/test-classes/:/tmp/math_49_Genprog/lib/commons-discovery-0.5.jar:/mnt/vdb1/home/ubuntu/defects4j-repair-runner/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:packageToInstrument= org.apache.commons
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:parsesourcefromoriginal= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:srcjavafolder= /src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:location= /tmp/math_49_Genprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:68) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.startEvolution(AstorCoreEngine.java:169) - 
----Starting Solution Search
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:235) - Time Repair Loop (s): 0.0
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:237) - generationsexecuted: 0
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:299) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:249) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
TOTAL_TIME=0.0
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=null
NR_FAILLING_COMPILATIONS=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=MAX_GENERATION

Patch stats:

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:98) - Storing ing JSON at /tmp/math_49_Genprog/./output_astor/AstorMain-math_49_Genprog//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:99) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":null,"OUTPUT_STATUS":"MAX_GENERATION","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":null,"TOTAL_TIME":0.0,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:197) - Time Total(s): 1509.15
Number of SuspiciousModificationPoint: 345
SuspiciousModificationPoint:         return empiricalDistribution;
At: ValueServer.java org.apache.commons.math.random.ValueServer
Line number: 242
Used ingredient: empiricalDistribution.load(url);
/mnt/vdb/output_extension/Math/Math_49/1/ValueServer.java
Used ingredient: return empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/2/ValueServer.java
Used ingredient: return minimalIterationCount;
/mnt/vdb/output_extension/Math/Math_49/3/ValueServer.java
Used ingredient: return distribution;
/mnt/vdb/output_extension/Math/Math_49/4/ValueServer.java
Used ingredient: empiricalDistribution.reSeed(100);
/mnt/vdb/output_extension/Math/Math_49/5/ValueServer.java
Used ingredient: * before loading empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/6/ValueServer.java
Used ingredient: /** Use empirical distribution.  */
/mnt/vdb/output_extension/Math/Math_49/7/ValueServer.java
Used ingredient: empiricalDistribution.reSeed(1000);
/mnt/vdb/output_extension/Math/Math_49/8/ValueServer.java
Used ingredient: HypergeometricDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/9/ValueServer.java
Used ingredient: return varianceDirection;
/mnt/vdb/output_extension/Math/Math_49/10/ValueServer.java
Used ingredient: return partialDerivativeX;
/mnt/vdb/output_extension/Math/Math_49/11/ValueServer.java
Used ingredient: return partialDerivativeY;
/mnt/vdb/output_extension/Math/Math_49/12/ValueServer.java
Used ingredient: return partialDerivativeXX;
/mnt/vdb/output_extension/Math/Math_49/13/ValueServer.java
Used ingredient: return partialDerivativeYY;
/mnt/vdb/output_extension/Math/Math_49/14/ValueServer.java
Used ingredient: return partialDerivativeXY;
/mnt/vdb/output_extension/Math/Math_49/15/ValueServer.java
Used ingredient: return maximalIterationCount;
/mnt/vdb/output_extension/Math/Math_49/16/ValueServer.java
Used ingredient: extends AbstractDistribution
/mnt/vdb/output_extension/Math/Math_49/17/ValueServer.java
Used ingredient: * The Binomial Distribution.
/mnt/vdb/output_extension/Math/Math_49/18/ValueServer.java
Used ingredient: BinomialDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/19/ValueServer.java
Used ingredient: ExponentialDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/20/ValueServer.java
Used ingredient: return new TDistributionImpl(5.0);
/mnt/vdb/output_extension/Math/Math_49/21/ValueServer.java
Used ingredient: public EmpiricalDistributionImpl() {
/mnt/vdb/output_extension/Math/Math_49/22/ValueServer.java
Used ingredient: empiricalDistribution2.reSeed(1000);
/mnt/vdb/output_extension/Math/Math_49/23/ValueServer.java
Used ingredient: * hypergeometric distribution.
/mnt/vdb/output_extension/Math/Math_49/24/ValueServer.java
Used ingredient: return value(maximumPosition);
/mnt/vdb/output_extension/Math/Math_49/25/ValueServer.java
Used ingredient: empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/26/ValueServer.java
Used ingredient: vs.getEmpiricalDistribution() != null);
/mnt/vdb/output_extension/Math/Math_49/27/ValueServer.java
Used ingredient: return brightestIllumination;
/mnt/vdb/output_extension/Math/Math_49/28/ValueServer.java
Used ingredient: return stateTransitionMatrix;
/mnt/vdb/output_extension/Math/Math_49/29/ValueServer.java
Used ingredient: return numericalVariance;
/mnt/vdb/output_extension/Math/Math_49/30/ValueServer.java
Used ingredient: return representation;
/mnt/vdb/output_extension/Math/Math_49/31/ValueServer.java
Used ingredient: NormalDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/32/ValueServer.java
Used ingredient: * @return the varianceDirection
/mnt/vdb/output_extension/Math/Math_49/33/ValueServer.java
Used ingredient: * The Exponential Distribution.
/mnt/vdb/output_extension/Math/Math_49/34/ValueServer.java
Used ingredient: if ((empiricalDistribution == null) ||
/mnt/vdb/output_extension/Math/Math_49/35/ValueServer.java
Used ingredient: empiricalDistribution2.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/36/ValueServer.java
Used ingredient: public interface EmpiricalDistribution {
/mnt/vdb/output_extension/Math/Math_49/37/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load(x);
/mnt/vdb/output_extension/Math/Math_49/38/ValueServer.java
Used ingredient: verifySame(empiricalDistribution2, dist2);
/mnt/vdb/output_extension/Math/Math_49/39/ValueServer.java
Used ingredient: * @return Returns the distribution.
/mnt/vdb/output_extension/Math/Math_49/40/ValueServer.java
Used ingredient: return new ExponentialDistributionImpl(5.0);
/mnt/vdb/output_extension/Math/Math_49/41/ValueServer.java
Used ingredient: return contributingStatistics;
/mnt/vdb/output_extension/Math/Math_49/42/ValueServer.java
Used ingredient: return polynomialDerivative();
/mnt/vdb/output_extension/Math/Math_49/43/ValueServer.java
Used ingredient: return numArtificialVariables;
/mnt/vdb/output_extension/Math/Math_49/44/ValueServer.java
Used ingredient: empiricalDistribution2.load(dataArray);
/mnt/vdb/output_extension/Math/Math_49/45/ValueServer.java
Used ingredient: return new ZipfDistributionImpl(10, 1);
/mnt/vdb/output_extension/Math/Math_49/46/ValueServer.java
Used ingredient: return minRatioPositions.get(0);
/mnt/vdb/output_extension/Math/Math_49/47/ValueServer.java
Used ingredient: return new GammaDistributionImpl(4d, 2d);
/mnt/vdb/output_extension/Math/Math_49/48/ValueServer.java
Used ingredient: * @return Value of property empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/49/ValueServer.java
Used ingredient: * The Hypergeometric Distribution.
/mnt/vdb/output_extension/Math/Math_49/50/ValueServer.java
Used ingredient: distribution = makeDistribution();
/mnt/vdb/output_extension/Math/Math_49/51/ValueServer.java
Used ingredient: return new PascalDistributionImpl(10,0.70);
/mnt/vdb/output_extension/Math/Math_49/52/ValueServer.java
Used ingredient: * @return PDF for this distribution.
/mnt/vdb/output_extension/Math/Math_49/53/ValueServer.java
Used ingredient: * @return PMF for this distribution.
/mnt/vdb/output_extension/Math/Math_49/54/ValueServer.java
Used ingredient: * @return CDF for this distribution.
/mnt/vdb/output_extension/Math/Math_49/55/ValueServer.java
Used ingredient: * Test cases for PascalDistribution.
/mnt/vdb/output_extension/Math/Math_49/56/ValueServer.java
Used ingredient: return super.getDimension();
/mnt/vdb/output_extension/Math/Math_49/57/ValueServer.java
Used ingredient: return statistics.getMin();
/mnt/vdb/output_extension/Math/Math_49/58/ValueServer.java
Used ingredient: return getWrongDimension(0);
/mnt/vdb/output_extension/Math/Math_49/59/ValueServer.java
Used ingredient: return getWrongDimension(1);
/mnt/vdb/output_extension/Math/Math_49/60/ValueServer.java
Used ingredient: return new BigFraction(num);
/mnt/vdb/output_extension/Math/Math_49/61/ValueServer.java
Used ingredient: return processNoiseCovMatrix;
/mnt/vdb/output_extension/Math/Math_49/62/ValueServer.java
Used ingredient: return maxIterations;
/mnt/vdb/output_extension/Math/Math_49/63/ValueServer.java
Used ingredient: return tableau.getSolution();
/mnt/vdb/output_extension/Math/Math_49/64/ValueServer.java
Used ingredient: return maxEvaluations;
/mnt/vdb/output_extension/Math/Math_49/65/ValueServer.java
Used ingredient: return jacobianEvaluations;
/mnt/vdb/output_extension/Math/Math_49/66/ValueServer.java
Used ingredient: return statisticsMeanHistory;
/mnt/vdb/output_extension/Math/Math_49/67/ValueServer.java
Used ingredient: return statisticsDHistory;
/mnt/vdb/output_extension/Math/Math_49/68/ValueServer.java
Used ingredient: * Normal Distribution</a></p>
/mnt/vdb/output_extension/Math/Math_49/69/ValueServer.java
Used ingredient: * The Gamma Distribution.
/mnt/vdb/output_extension/Math/Math_49/70/ValueServer.java
Used ingredient: return standardDeviation;
/mnt/vdb/output_extension/Math/Math_49/71/ValueServer.java
Used ingredient: * Student's t-Distribution.
/mnt/vdb/output_extension/Math/Math_49/72/ValueServer.java
Used ingredient: return new Complex(realPart);
/mnt/vdb/output_extension/Math/Math_49/73/ValueServer.java
Used ingredient: return plus.reunite(minus);
/mnt/vdb/output_extension/Math/Math_49/74/ValueServer.java
Used ingredient: return remainingRegion;
/mnt/vdb/output_extension/Math/Math_49/75/ValueServer.java
Used ingredient: return rebalanceRightGrown();
/mnt/vdb/output_extension/Math/Math_49/76/ValueServer.java
Used ingredient: return maxIterationCount;
/mnt/vdb/output_extension/Math/Math_49/77/ValueServer.java
Used ingredient: return stateVariation;
/mnt/vdb/output_extension/Math/Math_49/78/ValueServer.java
Used ingredient: return mainSetDimension;
/mnt/vdb/output_extension/Math/Math_49/79/ValueServer.java
Used ingredient: return evaluations;
/mnt/vdb/output_extension/Math/Math_49/80/ValueServer.java
Used ingredient: PascalDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/81/ValueServer.java
Used ingredient: BetaDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/82/ValueServer.java
Used ingredient: ChiSquaredDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/83/ValueServer.java
Used ingredient: WeibullDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/84/ValueServer.java
Used ingredient: return getExpectedDimension(0);
/mnt/vdb/output_extension/Math/Math_49/85/ValueServer.java
Used ingredient: return getExpectedDimension(1);
/mnt/vdb/output_extension/Math/Math_49/86/ValueServer.java
Used ingredient: * @return the gradient function
/mnt/vdb/output_extension/Math/Math_49/87/ValueServer.java
Used ingredient: public interface Distribution {
/mnt/vdb/output_extension/Math/Math_49/88/ValueServer.java
Used ingredient: return (Complex) lastDimension;
/mnt/vdb/output_extension/Math/Math_49/89/ValueServer.java
Used ingredient: return maximumPosition.clone();
/mnt/vdb/output_extension/Math/Math_49/90/ValueServer.java
Used ingredient: * Test cases for FDistribution.
/mnt/vdb/output_extension/Math/Math_49/91/ValueServer.java
Used ingredient: * Test cases for TDistribution.
/mnt/vdb/output_extension/Math/Math_49/92/ValueServer.java
Used ingredient: return new PolynomialFunction(a);
/mnt/vdb/output_extension/Math/Math_49/93/ValueServer.java
Used ingredient: * @return the reciprocal fraction
/mnt/vdb/output_extension/Math/Math_49/94/ValueServer.java
Used ingredient: return new NormalDistributionImpl(2.1, 1.4);
/mnt/vdb/output_extension/Math/Math_49/95/ValueServer.java
Used ingredient: new NormalDistributionImpl(1, 0);
/mnt/vdb/output_extension/Math/Math_49/96/ValueServer.java
Used ingredient: /** Getter for property empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/97/ValueServer.java
Used ingredient: return new BinomialDistributionImpl(10, 0.70);
/mnt/vdb/output_extension/Math/Math_49/98/ValueServer.java
Used ingredient: * @return PMF for the distribution.
/mnt/vdb/output_extension/Math/Math_49/99/ValueServer.java
Used ingredient: new ExponentialDistributionImpl(0);
/mnt/vdb/output_extension/Math/Math_49/100/ValueServer.java
SuspiciousModificationPoint:         return empiricalDistribution.getNextValue();
At: ValueServer.java org.apache.commons.math.random.ValueServer
Line number: 319
Used ingredient: empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/101/ValueServer.java
Used ingredient: empiricalDistribution2.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/102/ValueServer.java
Used ingredient: values[i] = empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/103/ValueServer.java
Used ingredient: stats.addValue(empiricalDistribution.getNextValue());
/mnt/vdb/output_extension/Math/Math_49/104/ValueServer.java
Used ingredient: stats.addValue(empiricalDistribution2.getNextValue());
/mnt/vdb/output_extension/Math/Math_49/105/ValueServer.java
Used ingredient: return empiricalDistribution;
/mnt/vdb/output_extension/Math/Math_49/106/ValueServer.java
Used ingredient: empiricalDistribution.reSeed(100);
/mnt/vdb/output_extension/Math/Math_49/107/ValueServer.java
Used ingredient: empiricalDistribution.reSeed(1000);
/mnt/vdb/output_extension/Math/Math_49/108/ValueServer.java
Used ingredient: empiricalDistribution2.reSeed(1000);
/mnt/vdb/output_extension/Math/Math_49/109/ValueServer.java
Used ingredient: return new ExponentialDistributionImpl(5.0);
/mnt/vdb/output_extension/Math/Math_49/110/ValueServer.java
Used ingredient: empiricalDistribution.load(valuesFileURL);
/mnt/vdb/output_extension/Math/Math_49/111/ValueServer.java
Used ingredient: mu = empiricalDistribution.getSampleStats().getMean();
/mnt/vdb/output_extension/Math/Math_49/112/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load(x);
/mnt/vdb/output_extension/Math/Math_49/113/ValueServer.java
Used ingredient: return new PascalDistributionImpl(10,0.70);
/mnt/vdb/output_extension/Math/Math_49/114/ValueServer.java
Used ingredient: return new NormalDistributionImpl(2.1, 1.4);
/mnt/vdb/output_extension/Math/Math_49/115/ValueServer.java
Used ingredient: return new BinomialDistributionImpl(10, 0.70);
/mnt/vdb/output_extension/Math/Math_49/116/ValueServer.java
Used ingredient: empiricalDistribution.load(url);
/mnt/vdb/output_extension/Math/Math_49/117/ValueServer.java
Used ingredient: * before loading empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/118/ValueServer.java
Used ingredient: verifySame(empiricalDistribution2, dist2);
/mnt/vdb/output_extension/Math/Math_49/119/ValueServer.java
Used ingredient: empiricalDistribution2.load(dataArray);
/mnt/vdb/output_extension/Math/Math_49/120/ValueServer.java
Used ingredient: return new GammaDistributionImpl(4d, 2d);
/mnt/vdb/output_extension/Math/Math_49/121/ValueServer.java
Used ingredient: return new ChiSquaredDistributionImpl(5.0);
/mnt/vdb/output_extension/Math/Math_49/122/ValueServer.java
Used ingredient: return evaluations.getMaximalCount();
/mnt/vdb/output_extension/Math/Math_49/123/ValueServer.java
Used ingredient: dist = new EmpiricalDistributionImpl(5, null);
/mnt/vdb/output_extension/Math/Math_49/124/ValueServer.java
Used ingredient: * @return Value of property empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/125/ValueServer.java
Used ingredient: return new WeibullDistributionImpl(1.2, 2.1);
/mnt/vdb/output_extension/Math/Math_49/126/ValueServer.java
Used ingredient: (empiricalDistribution.getBinStats().size() == 0)) {
/mnt/vdb/output_extension/Math/Math_49/127/ValueServer.java
Used ingredient: Assert.assertEquals(values[i],empiricalDistribution.getNextValue(), 0d);
/mnt/vdb/output_extension/Math/Math_49/128/ValueServer.java
Used ingredient: public EmpiricalDistributionImpl() {
/mnt/vdb/output_extension/Math/Math_49/129/ValueServer.java
Used ingredient: vs.getEmpiricalDistribution() != null);
/mnt/vdb/output_extension/Math/Math_49/130/ValueServer.java
Used ingredient: return new ZipfDistributionImpl(10, 1);
/mnt/vdb/output_extension/Math/Math_49/131/ValueServer.java
Used ingredient: return new CauchyDistributionImpl(1.2, 2.1);
/mnt/vdb/output_extension/Math/Math_49/132/ValueServer.java
Used ingredient: return polynomialFunction.getCoefficients();
/mnt/vdb/output_extension/Math/Math_49/133/ValueServer.java
Used ingredient: /** Getter for property empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/134/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((File) null);
/mnt/vdb/output_extension/Math/Math_49/135/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((URL) null);
/mnt/vdb/output_extension/Math/Math_49/136/ValueServer.java
Used ingredient: return new HypergeometricDistributionImpl(10,5, 5);
/mnt/vdb/output_extension/Math/Math_49/137/ValueServer.java
Used ingredient: return new TDistributionImpl(5.0);
/mnt/vdb/output_extension/Math/Math_49/138/ValueServer.java
Used ingredient: if ((empiricalDistribution == null) ||
/mnt/vdb/output_extension/Math/Math_49/139/ValueServer.java
Used ingredient: return minRatioPositions.get(0);
/mnt/vdb/output_extension/Math/Math_49/140/ValueServer.java
Used ingredient: return new FDistributionImpl(5.0, 6.0);
/mnt/vdb/output_extension/Math/Math_49/141/ValueServer.java
Used ingredient: * @return the median for this distribution.
/mnt/vdb/output_extension/Math/Math_49/142/ValueServer.java
Used ingredient: return denominator.intValue();
/mnt/vdb/output_extension/Math/Math_49/143/ValueServer.java
Used ingredient: return denominator.longValue();
/mnt/vdb/output_extension/Math/Math_49/144/ValueServer.java
Used ingredient: return stateEstimation.getData();
/mnt/vdb/output_extension/Math/Math_49/145/ValueServer.java
Used ingredient: return attribute.getPlusInside();
/mnt/vdb/output_extension/Math/Math_49/146/ValueServer.java
Used ingredient: return attribute.getPlusOutside();
/mnt/vdb/output_extension/Math/Math_49/147/ValueServer.java
Used ingredient: return new Fraction(num.intValue(), 1);
/mnt/vdb/output_extension/Math/Math_49/148/ValueServer.java
Used ingredient: return BigFractionField.getInstance();
/mnt/vdb/output_extension/Math/Math_49/149/ValueServer.java
Used ingredient: return recurseIntersection(node.getPlus(),
/mnt/vdb/output_extension/Math/Math_49/150/ValueServer.java
Used ingredient: return new Variance().evaluate(Y.getData());
/mnt/vdb/output_extension/Math/Math_49/151/ValueServer.java
Used ingredient: public final class EmpiricalDistributionTest {
/mnt/vdb/output_extension/Math/Math_49/152/ValueServer.java
Used ingredient: * Test cases for the EmpiricalDistribution class
/mnt/vdb/output_extension/Math/Math_49/153/ValueServer.java
Used ingredient: return numerator.divide(denominator).intValue();
/mnt/vdb/output_extension/Math/Math_49/154/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl();
/mnt/vdb/output_extension/Math/Math_49/155/ValueServer.java
Used ingredient: return computeCovarianceMatrix(matrix, true);
/mnt/vdb/output_extension/Math/Math_49/156/ValueServer.java
Used ingredient: return numerator.divide(denominator).longValue();
/mnt/vdb/output_extension/Math/Math_49/157/ValueServer.java
Used ingredient: return createComplex(real - subtrahend.getReal(),
/mnt/vdb/output_extension/Math/Math_49/158/ValueServer.java
Used ingredient: Assert.assertEquals(2d, distribution.getBeta(), 0);
/mnt/vdb/output_extension/Math/Math_49/159/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(1);
/mnt/vdb/output_extension/Math/Math_49/160/ValueServer.java
Used ingredient: public EmpiricalDistribution getEmpiricalDistribution() {
/mnt/vdb/output_extension/Math/Math_49/161/ValueServer.java
Used ingredient: /** Use empirical distribution.  */
/mnt/vdb/output_extension/Math/Math_49/162/ValueServer.java
Used ingredient: public interface EmpiricalDistribution {
/mnt/vdb/output_extension/Math/Math_49/163/ValueServer.java
Used ingredient: * @return the mean for this distribution.
/mnt/vdb/output_extension/Math/Math_49/164/ValueServer.java
Used ingredient: return evaluations.getCount();
/mnt/vdb/output_extension/Math/Math_49/165/ValueServer.java
Used ingredient: return numerator.intValue();
/mnt/vdb/output_extension/Math/Math_49/166/ValueServer.java
Used ingredient: return numerator.longValue();
/mnt/vdb/output_extension/Math/Math_49/167/ValueServer.java
Used ingredient: return remainingRegion.getSize();
/mnt/vdb/output_extension/Math/Math_49/168/ValueServer.java
Used ingredient: return cachedResult.longValue();
/mnt/vdb/output_extension/Math/Math_49/169/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(0, 3, 5);
/mnt/vdb/output_extension/Math/Math_49/170/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(5, 6, 5);
/mnt/vdb/output_extension/Math/Math_49/171/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(5, 3, 6);
/mnt/vdb/output_extension/Math/Math_49/172/ValueServer.java
Used ingredient: dist = new ExponentialDistributionImpl(11d);
/mnt/vdb/output_extension/Math/Math_49/173/ValueServer.java
Used ingredient: return stateEstimation.getDimension();
/mnt/vdb/output_extension/Math/Math_49/174/ValueServer.java
Used ingredient: return makeCumulativeTestValues();
/mnt/vdb/output_extension/Math/Math_49/175/ValueServer.java
Used ingredient: return calculateAsymptoticPValue(Wmin, N);
/mnt/vdb/output_extension/Math/Math_49/176/ValueServer.java
Used ingredient: double mu = distribution.getMean();
/mnt/vdb/output_extension/Math/Math_49/177/ValueServer.java
Used ingredient: return computeCovarianceMatrix(data, true);
/mnt/vdb/output_extension/Math/Math_49/178/ValueServer.java
Used ingredient: return new Fraction (w.intValue(),
/mnt/vdb/output_extension/Math/Math_49/179/ValueServer.java
Used ingredient: return Double.compare(value, other.value);
/mnt/vdb/output_extension/Math/Math_49/180/ValueServer.java
Used ingredient: return eDA.substituteMostRecentElement(v);
/mnt/vdb/output_extension/Math/Math_49/181/ValueServer.java
Used ingredient: return new Line(zero, direction.negate());
/mnt/vdb/output_extension/Math/Math_49/182/ValueServer.java
Used ingredient: return FractionField.getInstance();
/mnt/vdb/output_extension/Math/Math_49/183/ValueServer.java
Used ingredient: return handler.getMaximalValueError();
/mnt/vdb/output_extension/Math/Math_49/184/ValueServer.java
Used ingredient: return Double.valueOf(str).doubleValue();
/mnt/vdb/output_extension/Math/Math_49/185/ValueServer.java
Used ingredient: return isAdd ? fraction : fraction.negate();
/mnt/vdb/output_extension/Math/Math_49/186/ValueServer.java
Used ingredient: return calculateBetaVariance().getData();
/mnt/vdb/output_extension/Math/Math_49/187/ValueServer.java
Used ingredient: return calculateExactPValue(Wmax, N);
/mnt/vdb/output_extension/Math/Math_49/188/ValueServer.java
Used ingredient: return FastMath.sqrt(variance.getResult());
/mnt/vdb/output_extension/Math/Math_49/189/ValueServer.java
Used ingredient: return 1 - distribution.cumulativeProbability(
/mnt/vdb/output_extension/Math/Math_49/190/ValueServer.java
Used ingredient: return rankCorrelation.getCorrelationMatrix();
/mnt/vdb/output_extension/Math/Math_49/191/ValueServer.java
Used ingredient: public EmpiricalDistributionImpl(int binCount) {
/mnt/vdb/output_extension/Math/Math_49/192/ValueServer.java
Used ingredient: return recurseIntersection(node.getPlus(), sub);
/mnt/vdb/output_extension/Math/Math_49/193/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((double[]) null);
/mnt/vdb/output_extension/Math/Math_49/194/ValueServer.java
Used ingredient: empiricalDistribution2 = new EmpiricalDistributionImpl(1);
/mnt/vdb/output_extension/Math/Math_49/195/ValueServer.java
Used ingredient: * Test cases for HyperGeometriclDistribution.
/mnt/vdb/output_extension/Math/Math_49/196/ValueServer.java
Used ingredient: dist = new BinomialDistributionImpl(10, 0.5);
/mnt/vdb/output_extension/Math/Math_49/197/ValueServer.java
Used ingredient: dist = new BinomialDistributionImpl(30, 0.3);
/mnt/vdb/output_extension/Math/Math_49/198/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(5, -1, 5);
/mnt/vdb/output_extension/Math/Math_49/199/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(5, 3, -1);
/mnt/vdb/output_extension/Math/Math_49/200/ValueServer.java
SuspiciousModificationPoint:         return binStats;
At: EmpiricalDistributionImpl.java org.apache.commons.math.random.EmpiricalDistributionImpl
Line number: 448
Used ingredient: return initial;
/mnt/vdb/output_extension/Math/Math_49/201/EmpiricalDistributionImpl.java
Used ingredient: return binCount;
/mnt/vdb/output_extension/Math/Math_49/202/EmpiricalDistributionImpl.java
Used ingredient: return minStep;
/mnt/vdb/output_extension/Math/Math_49/203/EmpiricalDistributionImpl.java
Used ingredient: return points;
/mnt/vdb/output_extension/Math/Math_49/204/EmpiricalDistributionImpl.java
Used ingredient: return (int)s;
/mnt/vdb/output_extension/Math/Math_49/205/EmpiricalDistributionImpl.java
Used ingredient: return stats;
/mnt/vdb/output_extension/Math/Math_49/206/EmpiricalDistributionImpl.java
Used ingredient: return iterations;
/mnt/vdb/output_extension/Math/Math_49/207/EmpiricalDistributionImpl.java
Used ingredient: return stepStart;
/mnt/vdb/output_extension/Math/Math_49/208/EmpiricalDistributionImpl.java
Used ingredient: return gradients;
/mnt/vdb/output_extension/Math/Math_49/209/EmpiricalDistributionImpl.java
Used ingredient: return context;
/mnt/vdb/output_extension/Math/Math_49/210/EmpiricalDistributionImpl.java
Used ingredient: return entries;
/mnt/vdb/output_extension/Math/Math_49/211/EmpiricalDistributionImpl.java
Used ingredient: return gradient;
/mnt/vdb/output_extension/Math/Math_49/212/EmpiricalDistributionImpl.java
Used ingredient: return starter;
/mnt/vdb/output_extension/Math/Math_49/213/EmpiricalDistributionImpl.java
Used ingredient: return target;
/mnt/vdb/output_extension/Math/Math_49/214/EmpiricalDistributionImpl.java
Used ingredient: return natural;
/mnt/vdb/output_extension/Math/Math_49/215/EmpiricalDistributionImpl.java
Used ingredient: return indices;
/mnt/vdb/output_extension/Math/Math_49/216/EmpiricalDistributionImpl.java
Used ingredient: return jacobian;
/mnt/vdb/output_extension/Math/Math_49/217/EmpiricalDistributionImpl.java
Used ingredient: return start;
/mnt/vdb/output_extension/Math/Math_49/218/EmpiricalDistributionImpl.java
Used ingredient: return point;
/mnt/vdb/output_extension/Math/Math_49/219/EmpiricalDistributionImpl.java
Used ingredient: return baseRoot;
/mnt/vdb/output_extension/Math/Math_49/220/EmpiricalDistributionImpl.java
Used ingredient: return inverse;
/mnt/vdb/output_extension/Math/Math_49/221/EmpiricalDistributionImpl.java
Used ingredient: return minus;
/mnt/vdb/output_extension/Math/Math_49/222/EmpiricalDistributionImpl.java
Used ingredient: return segments;
/mnt/vdb/output_extension/Math/Math_49/223/EmpiricalDistributionImpl.java
Used ingredient: return (int)m;
/mnt/vdb/output_extension/Math/Math_49/224/EmpiricalDistributionImpl.java
Used ingredient: return beta;
/mnt/vdb/output_extension/Math/Math_49/225/EmpiricalDistributionImpl.java
Used ingredient: return begin;
/mnt/vdb/output_extension/Math/Math_49/226/EmpiricalDistributionImpl.java
Used ingredient: return minPos;
/mnt/vdb/output_extension/Math/Math_49/227/EmpiricalDistributionImpl.java
Used ingredient: return -b.sign;
/mnt/vdb/output_extension/Math/Math_49/228/EmpiricalDistributionImpl.java
Used ingredient: return nans;
/mnt/vdb/output_extension/Math/Math_49/229/EmpiricalDistributionImpl.java
Used ingredient: return constraints;
/mnt/vdb/output_extension/Math/Math_49/230/EmpiricalDistributionImpl.java
Used ingredient: return sampleStats;
/mnt/vdb/output_extension/Math/Math_49/231/EmpiricalDistributionImpl.java
Used ingredient: return coordinates;
/mnt/vdb/output_extension/Math/Math_49/232/EmpiricalDistributionImpl.java
Used ingredient: return nanStrategy;
/mnt/vdb/output_extension/Math/Math_49/233/EmpiricalDistributionImpl.java
Used ingredient: return iterator();
/mnt/vdb/output_extension/Math/Math_49/234/EmpiricalDistributionImpl.java
Used ingredient: return next(bits);
/mnt/vdb/output_extension/Math/Math_49/235/EmpiricalDistributionImpl.java
Used ingredient: return boundaries;
/mnt/vdb/output_extension/Math/Math_49/236/EmpiricalDistributionImpl.java
Used ingredient: return tiesStrategy;
/mnt/vdb/output_extension/Math/Math_49/237/EmpiricalDistributionImpl.java
Used ingredient: return interpolator;
/mnt/vdb/output_extension/Math/Math_49/238/EmpiricalDistributionImpl.java
Used ingredient: return getData();
/mnt/vdb/output_extension/Math/Math_49/239/EmpiricalDistributionImpl.java
Used ingredient: return residuals;
/mnt/vdb/output_extension/Math/Math_49/240/EmpiricalDistributionImpl.java
Used ingredient: return dimension;
/mnt/vdb/output_extension/Math/Math_49/241/EmpiricalDistributionImpl.java
Used ingredient: return numerator;
/mnt/vdb/output_extension/Math/Math_49/242/EmpiricalDistributionImpl.java
Used ingredient: return generator;
/mnt/vdb/output_extension/Math/Math_49/243/EmpiricalDistributionImpl.java
Used ingredient: return outMatrix;
/mnt/vdb/output_extension/Math/Math_49/244/EmpiricalDistributionImpl.java
Used ingredient: return subMatrix;
/mnt/vdb/output_extension/Math/Math_49/245/EmpiricalDistributionImpl.java
Used ingredient: return imaginary;
/mnt/vdb/output_extension/Math/Math_49/246/EmpiricalDistributionImpl.java
Used ingredient: return candidate;
/mnt/vdb/output_extension/Math/Math_49/247/EmpiricalDistributionImpl.java
Used ingredient: return finalTime;
/mnt/vdb/output_extension/Math/Math_49/248/EmpiricalDistributionImpl.java
Used ingredient: return generated;
/mnt/vdb/output_extension/Math/Math_49/249/EmpiricalDistributionImpl.java
Used ingredient: return !singular;
/mnt/vdb/output_extension/Math/Math_49/250/EmpiricalDistributionImpl.java
Used ingredient: return fct(data);
/mnt/vdb/output_extension/Math/Math_49/251/EmpiricalDistributionImpl.java
Used ingredient: return fst(data);
/mnt/vdb/output_extension/Math/Math_49/252/EmpiricalDistributionImpl.java
Used ingredient: return quantiles;
/mnt/vdb/output_extension/Math/Math_49/253/EmpiricalDistributionImpl.java
Used ingredient: return ieeeFlags;
/mnt/vdb/output_extension/Math/Math_49/254/EmpiricalDistributionImpl.java
Used ingredient: return this.nobs;
/mnt/vdb/output_extension/Math/Math_49/255/EmpiricalDistributionImpl.java
Used ingredient: return b.getData();
/mnt/vdb/output_extension/Math/Math_49/256/EmpiricalDistributionImpl.java
Used ingredient: return initialTime;
/mnt/vdb/output_extension/Math/Math_49/257/EmpiricalDistributionImpl.java
Used ingredient: return (int) value;
/mnt/vdb/output_extension/Math/Math_49/258/EmpiricalDistributionImpl.java
Used ingredient: return searchStart;
/mnt/vdb/output_extension/Math/Math_49/259/EmpiricalDistributionImpl.java
Used ingredient: return denominator;
/mnt/vdb/output_extension/Math/Math_49/260/EmpiricalDistributionImpl.java
Used ingredient: return determinant;
/mnt/vdb/output_extension/Math/Math_49/261/EmpiricalDistributionImpl.java
Used ingredient: return position;
/mnt/vdb/output_extension/Math/Math_49/262/EmpiricalDistributionImpl.java
Used ingredient: return location;
/mnt/vdb/output_extension/Math/Math_49/263/EmpiricalDistributionImpl.java
Used ingredient: return matrix;
/mnt/vdb/output_extension/Math/Math_49/264/EmpiricalDistributionImpl.java
Used ingredient: return exponent;
/mnt/vdb/output_extension/Math/Math_49/265/EmpiricalDistributionImpl.java
Used ingredient: return split(y);
/mnt/vdb/output_extension/Math/Math_49/266/EmpiricalDistributionImpl.java
Used ingredient: return next(32);
/mnt/vdb/output_extension/Math/Math_49/267/EmpiricalDistributionImpl.java
Used ingredient: return clusters;
/mnt/vdb/output_extension/Math/Math_49/268/EmpiricalDistributionImpl.java
Used ingredient: return strict;
/mnt/vdb/output_extension/Math/Math_49/269/EmpiricalDistributionImpl.java
Used ingredient: return previous;
/mnt/vdb/output_extension/Math/Math_49/270/EmpiricalDistributionImpl.java
Used ingredient: return variance;
/mnt/vdb/output_extension/Math/Math_49/271/EmpiricalDistributionImpl.java
Used ingredient: return parent;
/mnt/vdb/output_extension/Math/Math_49/272/EmpiricalDistributionImpl.java
Used ingredient: return outline;
/mnt/vdb/output_extension/Math/Math_49/273/EmpiricalDistributionImpl.java
Used ingredient: return argument;
/mnt/vdb/output_extension/Math/Math_49/274/EmpiricalDistributionImpl.java
Used ingredient: return lastTime;
/mnt/vdb/output_extension/Math/Math_49/275/EmpiricalDistributionImpl.java
Used ingredient: return lastSeen;
/mnt/vdb/output_extension/Math/Math_49/276/EmpiricalDistributionImpl.java
Used ingredient: return unscaled;
/mnt/vdb/output_extension/Math/Math_49/277/EmpiricalDistributionImpl.java
Used ingredient: return quantile;
/mnt/vdb/output_extension/Math/Math_49/278/EmpiricalDistributionImpl.java
Used ingredient: return minIndex;
/mnt/vdb/output_extension/Math/Math_49/279/EmpiricalDistributionImpl.java
Used ingredient: return c.length;
/mnt/vdb/output_extension/Math/Math_49/280/EmpiricalDistributionImpl.java
Used ingredient: return element;
/mnt/vdb/output_extension/Math/Math_49/281/EmpiricalDistributionImpl.java
Used ingredient: return maxStep;
/mnt/vdb/output_extension/Math/Math_49/282/EmpiricalDistributionImpl.java
Used ingredient: return capacity;
/mnt/vdb/output_extension/Math/Math_49/283/EmpiricalDistributionImpl.java
Used ingredient: return results;
/mnt/vdb/output_extension/Math/Math_49/284/EmpiricalDistributionImpl.java
Used ingredient: return columns;
/mnt/vdb/output_extension/Math/Math_49/285/EmpiricalDistributionImpl.java
Used ingredient: return main;
/mnt/vdb/output_extension/Math/Math_49/286/EmpiricalDistributionImpl.java
Used ingredient: return params;
/mnt/vdb/output_extension/Math/Math_49/287/EmpiricalDistributionImpl.java
Used ingredient: return median;
/mnt/vdb/output_extension/Math/Math_49/288/EmpiricalDistributionImpl.java
Used ingredient: return a.sign;
/mnt/vdb/output_extension/Math/Math_49/289/EmpiricalDistributionImpl.java
Used ingredient: return -a.sign;
/mnt/vdb/output_extension/Math/Math_49/290/EmpiricalDistributionImpl.java
Used ingredient: return divisor;
/mnt/vdb/output_extension/Math/Math_49/291/EmpiricalDistributionImpl.java
Used ingredient: return split;
/mnt/vdb/output_extension/Math/Math_49/292/EmpiricalDistributionImpl.java
Used ingredient: return region;
/mnt/vdb/output_extension/Math/Math_49/293/EmpiricalDistributionImpl.java
Used ingredient: return list;
/mnt/vdb/output_extension/Math/Math_49/294/EmpiricalDistributionImpl.java
Used ingredient: return direct;
/mnt/vdb/output_extension/Math/Math_49/295/EmpiricalDistributionImpl.java
Used ingredient: return origin;
/mnt/vdb/output_extension/Math/Math_49/296/EmpiricalDistributionImpl.java
Used ingredient: return first;
/mnt/vdb/output_extension/Math/Math_49/297/EmpiricalDistributionImpl.java
Used ingredient: return rList;
/mnt/vdb/output_extension/Math/Math_49/298/EmpiricalDistributionImpl.java
Used ingredient: return arity;
/mnt/vdb/output_extension/Math/Math_49/299/EmpiricalDistributionImpl.java
Used ingredient: return this.min;
/mnt/vdb/output_extension/Math/Math_49/300/EmpiricalDistributionImpl.java
SuspiciousModificationPoint:         empiricalDistribution = new EmpiricalDistributionImpl();
At: ValueServer.java org.apache.commons.math.random.ValueServer
Line number: 173
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(1);
/mnt/vdb/output_extension/Math/Math_49/301/ValueServer.java
Used ingredient: empiricalDistribution2 = new EmpiricalDistributionImpl(1);
/mnt/vdb/output_extension/Math/Math_49/302/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(100);
/mnt/vdb/output_extension/Math/Math_49/303/ValueServer.java
Used ingredient: empiricalDistribution2 = new EmpiricalDistributionImpl(100);
/mnt/vdb/output_extension/Math/Math_49/304/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(1001);
/mnt/vdb/output_extension/Math/Math_49/305/ValueServer.java
Used ingredient: empiricalDistribution2 = new EmpiricalDistributionImpl(1001);
/mnt/vdb/output_extension/Math/Math_49/306/ValueServer.java
Used ingredient: EmpiricalDistribution dist = new EmpiricalDistributionImpl();
/mnt/vdb/output_extension/Math/Math_49/307/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(binCount);
/mnt/vdb/output_extension/Math/Math_49/308/ValueServer.java
Used ingredient: EmpiricalDistributionImpl dist = new EmpiricalDistributionImpl(5);
/mnt/vdb/output_extension/Math/Math_49/309/ValueServer.java
Used ingredient: public EmpiricalDistribution getEmpiricalDistribution() {
/mnt/vdb/output_extension/Math/Math_49/310/ValueServer.java
Used ingredient: private EmpiricalDistribution empiricalDistribution = null;
/mnt/vdb/output_extension/Math/Math_49/311/ValueServer.java
Used ingredient: EmpiricalDistribution dist = new EmpiricalDistributionImpl(5, generator);
/mnt/vdb/output_extension/Math/Math_49/312/ValueServer.java
Used ingredient: ExponentialDistribution d1 = new ExponentialDistributionImpl(1);
/mnt/vdb/output_extension/Math/Math_49/313/ValueServer.java
Used ingredient: ExponentialDistribution d2 = new ExponentialDistributionImpl(3);
/mnt/vdb/output_extension/Math/Math_49/314/ValueServer.java
Used ingredient: NormalDistribution d = new NormalDistributionImpl(mean, sd);
/mnt/vdb/output_extension/Math/Math_49/315/ValueServer.java
Used ingredient: NormalDistribution normal = new NormalDistributionImpl(0,1);
/mnt/vdb/output_extension/Math/Math_49/316/ValueServer.java
Used ingredient: TDistribution tDistribution = new TDistributionImpl(45);
/mnt/vdb/output_extension/Math/Math_49/317/ValueServer.java
Used ingredient: setDistribution(new BinomialDistributionImpl(5, 0.0d));
/mnt/vdb/output_extension/Math/Math_49/318/ValueServer.java
Used ingredient: setDistribution(new BinomialDistributionImpl(5, 1.0d));
/mnt/vdb/output_extension/Math/Math_49/319/ValueServer.java
Used ingredient: WeibullDistribution dist = new WeibullDistributionImpl(1, 2);
/mnt/vdb/output_extension/Math/Math_49/320/ValueServer.java
Used ingredient: setDistribution(new NormalDistributionImpl(0, 1));
/mnt/vdb/output_extension/Math/Math_49/321/ValueServer.java
Used ingredient: distribution = new ChiSquaredDistributionImpl(df);
/mnt/vdb/output_extension/Math/Math_49/322/ValueServer.java
Used ingredient: setDistribution(new PascalDistributionImpl(5,0.0d));
/mnt/vdb/output_extension/Math/Math_49/323/ValueServer.java
Used ingredient: setDistribution(new PascalDistributionImpl(5,1.0d));
/mnt/vdb/output_extension/Math/Math_49/324/ValueServer.java
Used ingredient: setDistribution(new NormalDistributionImpl(0, 0.1));
/mnt/vdb/output_extension/Math/Math_49/325/ValueServer.java
Used ingredient: BetaDistribution d = new BetaDistributionImpl(alpha, beta);
/mnt/vdb/output_extension/Math/Math_49/326/ValueServer.java
Used ingredient: protected EmpiricalDistributionImpl empiricalDistribution = null;
/mnt/vdb/output_extension/Math/Math_49/327/ValueServer.java
Used ingredient: TDistribution distribution = new TDistributionImpl(n - 1);
/mnt/vdb/output_extension/Math/Math_49/328/ValueServer.java
Used ingredient: protected EmpiricalDistributionImpl empiricalDistribution2 = null;
/mnt/vdb/output_extension/Math/Math_49/329/ValueServer.java
Used ingredient: setDistribution(new ChiSquaredDistributionImpl(0.1d));
/mnt/vdb/output_extension/Math/Math_49/330/ValueServer.java
Used ingredient: TDistributionImpl td = new TDistributionImpl(5.);
/mnt/vdb/output_extension/Math/Math_49/331/ValueServer.java
Used ingredient: FDistributionImpl fd = new FDistributionImpl(1, 1);
/mnt/vdb/output_extension/Math/Math_49/332/ValueServer.java
Used ingredient: dist = new EmpiricalDistributionImpl(5, null);
/mnt/vdb/output_extension/Math/Math_49/333/ValueServer.java
Used ingredient: setDistribution(new HypergeometricDistributionImpl(5,5,3));
/mnt/vdb/output_extension/Math/Math_49/334/ValueServer.java
Used ingredient: setDistribution(new HypergeometricDistributionImpl(5,0,3));
/mnt/vdb/output_extension/Math/Math_49/335/ValueServer.java
Used ingredient: setDistribution(new HypergeometricDistributionImpl(5,3,5));
/mnt/vdb/output_extension/Math/Math_49/336/ValueServer.java
Used ingredient: ChiSquaredDistribution d = new ChiSquaredDistributionImpl(df);
/mnt/vdb/output_extension/Math/Math_49/337/ValueServer.java
Used ingredient: PoissonDistribution dist = new PoissonDistributionImpl(100);
/mnt/vdb/output_extension/Math/Math_49/338/ValueServer.java
Used ingredient: TDistribution tDistribution = new TDistributionImpl(nObs - 2);
/mnt/vdb/output_extension/Math/Math_49/339/ValueServer.java
Used ingredient: distribution = new TDistributionImpl(degrees);
/mnt/vdb/output_extension/Math/Math_49/340/ValueServer.java
Used ingredient: distribution = new TDistributionImpl(n - 2);
/mnt/vdb/output_extension/Math/Math_49/341/ValueServer.java
Used ingredient: NormalDistribution distribution = new NormalDistributionImpl(0, 1);
/mnt/vdb/output_extension/Math/Math_49/342/ValueServer.java
Used ingredient: PoissonDistribution dist = new PoissonDistributionImpl(mean);
/mnt/vdb/output_extension/Math/Math_49/343/ValueServer.java
Used ingredient: GammaDistribution d = new GammaDistributionImpl(alpha, 1 / rate);
/mnt/vdb/output_extension/Math/Math_49/344/ValueServer.java
Used ingredient: setDistribution(new TDistributionImpl(1d));
/mnt/vdb/output_extension/Math/Math_49/345/ValueServer.java
Used ingredient: GammaDistribution distribution = new GammaDistributionImpl( a, b );
/mnt/vdb/output_extension/Math/Math_49/346/ValueServer.java
Used ingredient: FDistribution fdist = new FDistributionImpl(a.dfbg, a.dfwg);
/mnt/vdb/output_extension/Math/Math_49/347/ValueServer.java
Used ingredient: FDistributionImpl fd = new FDistributionImpl(100000, 100000);
/mnt/vdb/output_extension/Math/Math_49/348/ValueServer.java
Used ingredient: BetaDistributionImpl betaDistribution = new BetaDistributionImpl(2, 4);
/mnt/vdb/output_extension/Math/Math_49/349/ValueServer.java
Used ingredient: dist = new ExponentialDistributionImpl(11d);
/mnt/vdb/output_extension/Math/Math_49/350/ValueServer.java
Used ingredient: public abstract IntegerDistribution makeDistribution();
/mnt/vdb/output_extension/Math/Math_49/351/ValueServer.java
Used ingredient: dist = new ExponentialDistributionImpl(10.5d);
/mnt/vdb/output_extension/Math/Math_49/352/ValueServer.java
Used ingredient: public NormalDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/353/ValueServer.java
Used ingredient: public ExponentialDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/354/ValueServer.java
Used ingredient: HypergeometricDistribution dist = new HypergeometricDistributionImpl(5, 3, 4);
/mnt/vdb/output_extension/Math/Math_49/355/ValueServer.java
Used ingredient: PascalDistributionTest testInstance = new PascalDistributionTest();
/mnt/vdb/output_extension/Math/Math_49/356/ValueServer.java
Used ingredient: BinomialDistributionTest testInstance = new BinomialDistributionTest();
/mnt/vdb/output_extension/Math/Math_49/357/ValueServer.java
Used ingredient: return new ExponentialDistributionImpl(5.0);
/mnt/vdb/output_extension/Math/Math_49/358/ValueServer.java
Used ingredient: FDistribution dist = (FDistribution) getDistribution();
/mnt/vdb/output_extension/Math/Math_49/359/ValueServer.java
Used ingredient: TDistribution dist = (TDistribution) getDistribution();
/mnt/vdb/output_extension/Math/Math_49/360/ValueServer.java
Used ingredient: public ChiSquaredDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/361/ValueServer.java
Used ingredient: dist = new BinomialDistributionImpl(10, 0.5);
/mnt/vdb/output_extension/Math/Math_49/362/ValueServer.java
Used ingredient: dist = new BinomialDistributionImpl(30, 0.3);
/mnt/vdb/output_extension/Math/Math_49/363/ValueServer.java
Used ingredient: public WeibullDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/364/ValueServer.java
Used ingredient: public GammaDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/365/ValueServer.java
Used ingredient: public CauchyDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/366/ValueServer.java
Used ingredient: final NormalDistributionImpl standardNormal = new NormalDistributionImpl(
/mnt/vdb/output_extension/Math/Math_49/367/ValueServer.java
Used ingredient: public abstract ContinuousDistribution makeDistribution();
/mnt/vdb/output_extension/Math/Math_49/368/ValueServer.java
Used ingredient: private void verifySame(EmpiricalDistribution d1, EmpiricalDistribution d2) {
/mnt/vdb/output_extension/Math/Math_49/369/ValueServer.java
Used ingredient: TDistribution distribution = new TDistributionImpl(degreesOfFreedom);
/mnt/vdb/output_extension/Math/Math_49/370/ValueServer.java
Used ingredient: dist = new HypergeometricDistributionImpl(1500, 40, 100);
/mnt/vdb/output_extension/Math/Math_49/371/ValueServer.java
Used ingredient: dist = new HypergeometricDistributionImpl(3000, 55, 200);
/mnt/vdb/output_extension/Math/Math_49/372/ValueServer.java
Used ingredient: return new BinomialDistributionImpl(10, 0.70);
/mnt/vdb/output_extension/Math/Math_49/373/ValueServer.java
Used ingredient: mu = empiricalDistribution.getSampleStats().getMean();
/mnt/vdb/output_extension/Math/Math_49/374/ValueServer.java
Used ingredient: return new HypergeometricDistributionImpl(10,5, 5);
/mnt/vdb/output_extension/Math/Math_49/375/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load(x);
/mnt/vdb/output_extension/Math/Math_49/376/ValueServer.java
Used ingredient: values[i] = empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/377/ValueServer.java
Used ingredient: dist = new NormalDistributionImpl(0, 1);
/mnt/vdb/output_extension/Math/Math_49/378/ValueServer.java
Used ingredient: public FDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/379/ValueServer.java
Used ingredient: public TDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/380/ValueServer.java
Used ingredient: public IntegerDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/381/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((URL) null);
/mnt/vdb/output_extension/Math/Math_49/382/ValueServer.java
Used ingredient: dist = new PascalDistributionImpl(10, 0.5);
/mnt/vdb/output_extension/Math/Math_49/383/ValueServer.java
Used ingredient: dist = new PascalDistributionImpl(25, 0.3);
/mnt/vdb/output_extension/Math/Math_49/384/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((File) null);
/mnt/vdb/output_extension/Math/Math_49/385/ValueServer.java
Used ingredient: dist = new KolmogorovSmirnovDistributionImpl(200);
/mnt/vdb/output_extension/Math/Math_49/386/ValueServer.java
Used ingredient: dist = new KolmogorovSmirnovDistributionImpl(341);
/mnt/vdb/output_extension/Math/Math_49/387/ValueServer.java
Used ingredient: dist = new KolmogorovSmirnovDistributionImpl(389);
/mnt/vdb/output_extension/Math/Math_49/388/ValueServer.java
Used ingredient: dist = new NormalDistributionImpl(2.2, 1.4);
/mnt/vdb/output_extension/Math/Math_49/389/ValueServer.java
Used ingredient: ZipfDistributionTest testInstance = new ZipfDistributionTest();
/mnt/vdb/output_extension/Math/Math_49/390/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((double[]) null);
/mnt/vdb/output_extension/Math/Math_49/391/ValueServer.java
Used ingredient: dist = new NormalDistributionImpl(-2000.9, 10.4);
/mnt/vdb/output_extension/Math/Math_49/392/ValueServer.java
Used ingredient: final NormalDistributionImpl standardNormal = new NormalDistributionImpl(0, 1);
/mnt/vdb/output_extension/Math/Math_49/393/ValueServer.java
Used ingredient: distribution = new ChiSquaredDistributionImpl(expected.length - 1.0);
/mnt/vdb/output_extension/Math/Math_49/394/ValueServer.java
Used ingredient: normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
/mnt/vdb/output_extension/Math/Math_49/395/ValueServer.java
Used ingredient: return new PascalDistributionImpl(10,0.70);
/mnt/vdb/output_extension/Math/Math_49/396/ValueServer.java
Used ingredient: return new NormalDistributionImpl(2.1, 1.4);
/mnt/vdb/output_extension/Math/Math_49/397/ValueServer.java
Used ingredient: distribution = makeDistribution();
/mnt/vdb/output_extension/Math/Math_49/398/ValueServer.java
Used ingredient: dist = new WeibullDistributionImpl(0, 2);
/mnt/vdb/output_extension/Math/Math_49/399/ValueServer.java
Used ingredient: dist = new WeibullDistributionImpl(1, 0);
/mnt/vdb/output_extension/Math/Math_49/400/ValueServer.java
SuspiciousModificationPoint:         empiricalDistribution.load(valuesFileURL);
At: ValueServer.java org.apache.commons.math.random.ValueServer
Line number: 174
Used ingredient: empiricalDistribution.load(url);
/mnt/vdb/output_extension/Math/Math_49/401/ValueServer.java
Used ingredient: empiricalDistribution2.load(dataArray);
/mnt/vdb/output_extension/Math/Math_49/402/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load(x);
/mnt/vdb/output_extension/Math/Math_49/403/ValueServer.java
Used ingredient: empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/404/ValueServer.java
Used ingredient: empiricalDistribution2.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/405/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((File) null);
/mnt/vdb/output_extension/Math/Math_49/406/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((URL) null);
/mnt/vdb/output_extension/Math/Math_49/407/ValueServer.java
Used ingredient: return empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/408/ValueServer.java
Used ingredient: vs.getEmpiricalDistribution() != null);
/mnt/vdb/output_extension/Math/Math_49/409/ValueServer.java
Used ingredient: empiricalDistribution.reSeed(100);
/mnt/vdb/output_extension/Math/Math_49/410/ValueServer.java
Used ingredient: empiricalDistribution.reSeed(1000);
/mnt/vdb/output_extension/Math/Math_49/411/ValueServer.java
Used ingredient: empiricalDistribution2.reSeed(1000);
/mnt/vdb/output_extension/Math/Math_49/412/ValueServer.java
Used ingredient: verifySame(empiricalDistribution2, dist2);
/mnt/vdb/output_extension/Math/Math_49/413/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((double[]) null);
/mnt/vdb/output_extension/Math/Math_49/414/ValueServer.java
Used ingredient: dist = new EmpiricalDistributionImpl(5, null);
/mnt/vdb/output_extension/Math/Math_49/415/ValueServer.java
Used ingredient: values[i] = empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/416/ValueServer.java
Used ingredient: if ((empiricalDistribution == null) ||
/mnt/vdb/output_extension/Math/Math_49/417/ValueServer.java
Used ingredient: public EmpiricalDistributionImpl() {
/mnt/vdb/output_extension/Math/Math_49/418/ValueServer.java
Used ingredient: (empiricalDistribution.getBinStats().size() == 0)) {
/mnt/vdb/output_extension/Math/Math_49/419/ValueServer.java
Used ingredient: mu = empiricalDistribution.getSampleStats().getMean();
/mnt/vdb/output_extension/Math/Math_49/420/ValueServer.java
Used ingredient: stats.addValue(empiricalDistribution.getNextValue());
/mnt/vdb/output_extension/Math/Math_49/421/ValueServer.java
Used ingredient: return empiricalDistribution;
/mnt/vdb/output_extension/Math/Math_49/422/ValueServer.java
Used ingredient: * before loading empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/423/ValueServer.java
Used ingredient: distribution.cumulativeProbability(lower);
/mnt/vdb/output_extension/Math/Math_49/424/ValueServer.java
Used ingredient: stats.addValue(empiricalDistribution2.getNextValue());
/mnt/vdb/output_extension/Math/Math_49/425/ValueServer.java
Used ingredient: * Test EmpiricalDistrbution.load() using sample data file.<br>
/mnt/vdb/output_extension/Math/Math_49/426/ValueServer.java
Used ingredient: int[] sample = distribution.sample(sampleSize);
/mnt/vdb/output_extension/Math/Math_49/427/ValueServer.java
Used ingredient: public EmpiricalDistributionImpl(int binCount) {
/mnt/vdb/output_extension/Math/Math_49/428/ValueServer.java
Used ingredient: * Test cases for the EmpiricalDistribution class
/mnt/vdb/output_extension/Math/Math_49/429/ValueServer.java
Used ingredient: public interface EmpiricalDistribution {
/mnt/vdb/output_extension/Math/Math_49/430/ValueServer.java
Used ingredient: new ExponentialDistributionImpl(0);
/mnt/vdb/output_extension/Math/Math_49/431/ValueServer.java
Used ingredient: private final NormalDistribution normal;
/mnt/vdb/output_extension/Math/Math_49/432/ValueServer.java
Used ingredient: public PoissonDistributionImpl(double p) {
/mnt/vdb/output_extension/Math/Math_49/433/ValueServer.java
Used ingredient: /** Use empirical distribution.  */
/mnt/vdb/output_extension/Math/Math_49/434/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl();
/mnt/vdb/output_extension/Math/Math_49/435/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(1);
/mnt/vdb/output_extension/Math/Math_49/436/ValueServer.java
Used ingredient: implements BinomialDistribution, Serializable {
/mnt/vdb/output_extension/Math/Math_49/437/ValueServer.java
Used ingredient: implements NormalDistribution, Serializable {
/mnt/vdb/output_extension/Math/Math_49/438/ValueServer.java
Used ingredient: implements PascalDistribution, Serializable {
/mnt/vdb/output_extension/Math/Math_49/439/ValueServer.java
Used ingredient: return new PascalDistributionImpl(10,0.70);
/mnt/vdb/output_extension/Math/Math_49/440/ValueServer.java
Used ingredient: * Test EmpiricalDistrbution.load(double[]) using data taken from
/mnt/vdb/output_extension/Math/Math_49/441/ValueServer.java
Used ingredient: empiricalDistribution2 = new EmpiricalDistributionImpl(1);
/mnt/vdb/output_extension/Math/Math_49/442/ValueServer.java
Used ingredient: public PascalDistributionImpl(int r, double p) {
/mnt/vdb/output_extension/Math/Math_49/443/ValueServer.java
Used ingredient: public NormalDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/444/ValueServer.java
Used ingredient: public final class EmpiricalDistributionTest {
/mnt/vdb/output_extension/Math/Math_49/445/ValueServer.java
Used ingredient: /** Getter for property empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/446/ValueServer.java
Used ingredient: dist = new ExponentialDistributionImpl(11d);
/mnt/vdb/output_extension/Math/Math_49/447/ValueServer.java
Used ingredient: return new ExponentialDistributionImpl(5.0);
/mnt/vdb/output_extension/Math/Math_49/448/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(0, 3, 5);
/mnt/vdb/output_extension/Math/Math_49/449/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(5, 6, 5);
/mnt/vdb/output_extension/Math/Math_49/450/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(5, 3, 6);
/mnt/vdb/output_extension/Math/Math_49/451/ValueServer.java
Used ingredient: dist = new NormalDistributionImpl(0, 1);
/mnt/vdb/output_extension/Math/Math_49/452/ValueServer.java
Used ingredient: public FDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/453/ValueServer.java
Used ingredient: public TDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/454/ValueServer.java
Used ingredient: private TDistribution distribution;
/mnt/vdb/output_extension/Math/Math_49/455/ValueServer.java
Used ingredient: private IntegerDistribution distribution;
/mnt/vdb/output_extension/Math/Math_49/456/ValueServer.java
Used ingredient: new NormalDistributionImpl(1, 0);
/mnt/vdb/output_extension/Math/Math_49/457/ValueServer.java
Used ingredient: public NormalDistributionImpl(){
/mnt/vdb/output_extension/Math/Math_49/458/ValueServer.java
Used ingredient: private final GammaDistribution gamma;
/mnt/vdb/output_extension/Math/Math_49/459/ValueServer.java
Used ingredient: implements Distribution, Serializable {
/mnt/vdb/output_extension/Math/Math_49/460/ValueServer.java
Used ingredient: implements TDistribution, Serializable  {
/mnt/vdb/output_extension/Math/Math_49/461/ValueServer.java
Used ingredient: implements FDistribution, Serializable  {
/mnt/vdb/output_extension/Math/Math_49/462/ValueServer.java
Used ingredient: * Negative Binomial Distribution</a></li>
/mnt/vdb/output_extension/Math/Math_49/463/ValueServer.java
Used ingredient: HypergeometricDistribution dist;
/mnt/vdb/output_extension/Math/Math_49/464/ValueServer.java
Used ingredient: distribution.getProbabilityOfSuccess());
/mnt/vdb/output_extension/Math/Math_49/465/ValueServer.java
Used ingredient: distribution.cumulativeProbability(1, 0);
/mnt/vdb/output_extension/Math/Math_49/466/ValueServer.java
Used ingredient: * Hypergeometric Distribution</a></li>
/mnt/vdb/output_extension/Math/Math_49/467/ValueServer.java
Used ingredient: * @return Value of property valuesFileURL.
/mnt/vdb/output_extension/Math/Math_49/468/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(100);
/mnt/vdb/output_extension/Math/Math_49/469/ValueServer.java
Used ingredient: public ExponentialDistributionImpl(double mean) {
/mnt/vdb/output_extension/Math/Math_49/470/ValueServer.java
Used ingredient: empiricalDistribution2 = new EmpiricalDistributionImpl(100);
/mnt/vdb/output_extension/Math/Math_49/471/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(1001);
/mnt/vdb/output_extension/Math/Math_49/472/ValueServer.java
Used ingredient: dist = new BinomialDistributionImpl(10, 0.5);
/mnt/vdb/output_extension/Math/Math_49/473/ValueServer.java
Used ingredient: dist = new BinomialDistributionImpl(30, 0.3);
/mnt/vdb/output_extension/Math/Math_49/474/ValueServer.java
Used ingredient: public GammaDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/475/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(5, -1, 5);
/mnt/vdb/output_extension/Math/Math_49/476/ValueServer.java
Used ingredient: new HypergeometricDistributionImpl(5, 3, -1);
/mnt/vdb/output_extension/Math/Math_49/477/ValueServer.java
Used ingredient: setDistribution(new TDistributionImpl(1d));
/mnt/vdb/output_extension/Math/Math_49/478/ValueServer.java
Used ingredient: dist = new PascalDistributionImpl(10, 0.5);
/mnt/vdb/output_extension/Math/Math_49/479/ValueServer.java
Used ingredient: dist = new PascalDistributionImpl(25, 0.3);
/mnt/vdb/output_extension/Math/Math_49/480/ValueServer.java
Used ingredient: return new ChiSquaredDistributionImpl(5.0);
/mnt/vdb/output_extension/Math/Math_49/481/ValueServer.java
Used ingredient: implements ZipfDistribution, Serializable {
/mnt/vdb/output_extension/Math/Math_49/482/ValueServer.java
Used ingredient: public NormalDistributionImpl(double mean, double sd){
/mnt/vdb/output_extension/Math/Math_49/483/ValueServer.java
Used ingredient: implements ExponentialDistribution, Serializable {
/mnt/vdb/output_extension/Math/Math_49/484/ValueServer.java
Used ingredient: empiricalDistribution2 = new EmpiricalDistributionImpl(1001);
/mnt/vdb/output_extension/Math/Math_49/485/ValueServer.java
Used ingredient: EmpiricalDistribution dist = new EmpiricalDistributionImpl();
/mnt/vdb/output_extension/Math/Math_49/486/ValueServer.java
Used ingredient: private EmpiricalDistribution empiricalDistribution = null;
/mnt/vdb/output_extension/Math/Math_49/487/ValueServer.java
Used ingredient: distribution = new TDistributionImpl(degrees);
/mnt/vdb/output_extension/Math/Math_49/488/ValueServer.java
Used ingredient: dist = new ExponentialDistributionImpl(10.5d);
/mnt/vdb/output_extension/Math/Math_49/489/ValueServer.java
Used ingredient: public CauchyDistribution makeDistribution() {
/mnt/vdb/output_extension/Math/Math_49/490/ValueServer.java
Used ingredient: return new BinomialDistributionImpl(10, 0.70);
/mnt/vdb/output_extension/Math/Math_49/491/ValueServer.java
Used ingredient: implements WeibullDistribution, Serializable {
/mnt/vdb/output_extension/Math/Math_49/492/ValueServer.java
Used ingredient: dist = new NormalDistributionImpl(2.2, 1.4);
/mnt/vdb/output_extension/Math/Math_49/493/ValueServer.java
Used ingredient: return new NormalDistributionImpl(2.1, 1.4);
/mnt/vdb/output_extension/Math/Math_49/494/ValueServer.java
Used ingredient: private ContinuousDistribution distribution;
/mnt/vdb/output_extension/Math/Math_49/495/ValueServer.java
Used ingredient: private ChiSquaredDistribution distribution;
/mnt/vdb/output_extension/Math/Math_49/496/ValueServer.java
Used ingredient: public BinomialDistributionImpl(int trials, double p) {
/mnt/vdb/output_extension/Math/Math_49/497/ValueServer.java
Used ingredient: * Simple distribution modeling a 6-sided die
/mnt/vdb/output_extension/Math/Math_49/498/ValueServer.java
Used ingredient: * Computes the empirical distribution using values from the file
/mnt/vdb/output_extension/Math/Math_49/499/ValueServer.java
Used ingredient: distribution = makeDistribution();
/mnt/vdb/output_extension/Math/Math_49/500/ValueServer.java
SuspiciousModificationPoint:         if ((empiricalDistribution == null) ||
At: ValueServer.java org.apache.commons.math.random.ValueServer
Line number: 315
Used ingredient: vs.getEmpiricalDistribution() != null);
/mnt/vdb/output_extension/Math/Math_49/501/ValueServer.java
Used ingredient: public EmpiricalDistributionImpl() {
/mnt/vdb/output_extension/Math/Math_49/502/ValueServer.java
Used ingredient: empiricalDistribution.load(url);
/mnt/vdb/output_extension/Math/Math_49/503/ValueServer.java
Used ingredient: if (partialDerivatives == null) {
/mnt/vdb/output_extension/Math/Math_49/504/ValueServer.java
Used ingredient: if (partialDerivativeX == null) {
/mnt/vdb/output_extension/Math/Math_49/505/ValueServer.java
Used ingredient: if (partialDerivativeY == null) {
/mnt/vdb/output_extension/Math/Math_49/506/ValueServer.java
Used ingredient: if (partialDerivativeXX == null) {
/mnt/vdb/output_extension/Math/Math_49/507/ValueServer.java
Used ingredient: if (partialDerivativeYY == null) {
/mnt/vdb/output_extension/Math/Math_49/508/ValueServer.java
Used ingredient: if (partialDerivativeXY == null) {
/mnt/vdb/output_extension/Math/Math_49/509/ValueServer.java
Used ingredient: dist = new EmpiricalDistributionImpl(5, null);
/mnt/vdb/output_extension/Math/Math_49/510/ValueServer.java
Used ingredient: verifySame(empiricalDistribution2, dist2);
/mnt/vdb/output_extension/Math/Math_49/511/ValueServer.java
Used ingredient: empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/512/ValueServer.java
Used ingredient: empiricalDistribution2.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/513/ValueServer.java
Used ingredient: /** Use empirical distribution.  */
/mnt/vdb/output_extension/Math/Math_49/514/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load(x);
/mnt/vdb/output_extension/Math/Math_49/515/ValueServer.java
Used ingredient: public interface EmpiricalDistribution {
/mnt/vdb/output_extension/Math/Math_49/516/ValueServer.java
Used ingredient: empiricalDistribution2.load(dataArray);
/mnt/vdb/output_extension/Math/Math_49/517/ValueServer.java
Used ingredient: * before loading empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/518/ValueServer.java
Used ingredient: empiricalDistribution.reSeed(100);
/mnt/vdb/output_extension/Math/Math_49/519/ValueServer.java
Used ingredient: empiricalDistribution.reSeed(1000);
/mnt/vdb/output_extension/Math/Math_49/520/ValueServer.java
Used ingredient: empiricalDistribution2.reSeed(1000);
/mnt/vdb/output_extension/Math/Math_49/521/ValueServer.java
Used ingredient: return empiricalDistribution;
/mnt/vdb/output_extension/Math/Math_49/522/ValueServer.java
Used ingredient: if (getTree(false).getCut() == null) {
/mnt/vdb/output_extension/Math/Math_49/523/ValueServer.java
Used ingredient: if (preconditioner == null) {
/mnt/vdb/output_extension/Math/Math_49/524/ValueServer.java
Used ingredient: if (interpolator.stateVariation != null) {
/mnt/vdb/output_extension/Math/Math_49/525/ValueServer.java
Used ingredient: empiricalDistribution.load(valuesFileURL);
/mnt/vdb/output_extension/Math/Math_49/526/ValueServer.java
Used ingredient: public EmpiricalDistributionImpl(int binCount) {
/mnt/vdb/output_extension/Math/Math_49/527/ValueServer.java
Used ingredient: if (minimalIterationCount == 1) {
/mnt/vdb/output_extension/Math/Math_49/528/ValueServer.java
Used ingredient: if (theoreticalMinParams != null) {
/mnt/vdb/output_extension/Math/Math_49/529/ValueServer.java
Used ingredient: if (covarianceMatrix == null) {
/mnt/vdb/output_extension/Math/Math_49/530/ValueServer.java
Used ingredient: if (interpolator.polynoms == null) {
/mnt/vdb/output_extension/Math/Math_49/531/ValueServer.java
Used ingredient: if ((matrix.getRowDimension() != 1) ||
/mnt/vdb/output_extension/Math/Math_49/532/ValueServer.java
Used ingredient: if (vecAbsoluteTolerance == null) {
/mnt/vdb/output_extension/Math/Math_49/533/ValueServer.java
Used ingredient: if (observations == null) {
/mnt/vdb/output_extension/Math/Math_49/534/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((URL) null);
/mnt/vdb/output_extension/Math/Math_49/535/ValueServer.java
Used ingredient: return empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/536/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((File) null);
/mnt/vdb/output_extension/Math/Math_49/537/ValueServer.java
Used ingredient: (empiricalDistribution.getBinStats().size() == 0)) {
/mnt/vdb/output_extension/Math/Math_49/538/ValueServer.java
Used ingredient: if (minRatioPositions.size() == 0) {
/mnt/vdb/output_extension/Math/Math_49/539/ValueServer.java
Used ingredient: if (attribute != null) {
/mnt/vdb/output_extension/Math/Math_49/540/ValueServer.java
Used ingredient: if (getNumObjectiveFunctions() == 2) {
/mnt/vdb/output_extension/Math/Math_49/541/ValueServer.java
Used ingredient: if (getNumObjectiveFunctions() == 1) {
/mnt/vdb/output_extension/Math/Math_49/542/ValueServer.java
Used ingredient: if (fraction == null) {
/mnt/vdb/output_extension/Math/Math_49/543/ValueServer.java
Used ingredient: if (startPoint == null) {
/mnt/vdb/output_extension/Math/Math_49/544/ValueServer.java
Used ingredient: if (selectedCluster == null) {
/mnt/vdb/output_extension/Math/Math_49/545/ValueServer.java
Used ingredient: if (imaginaryCharacter == null) {
/mnt/vdb/output_extension/Math/Math_49/546/ValueServer.java
Used ingredient: if (problem.errorScale == null) {
/mnt/vdb/output_extension/Math/Math_49/547/ValueServer.java
Used ingredient: private final NormalDistribution normal;
/mnt/vdb/output_extension/Math/Math_49/548/ValueServer.java
Used ingredient: if (attribute.getPlusInside() != null) {
/mnt/vdb/output_extension/Math/Math_49/549/ValueServer.java
Used ingredient: if (interpolator.currentState == null) {
/mnt/vdb/output_extension/Math/Math_49/550/ValueServer.java
Used ingredient: if ((attribute.getPlusInside() != null) &&
/mnt/vdb/output_extension/Math/Math_49/551/ValueServer.java
Used ingredient: if ((matrix.getRowDimension() != nRows) ||
/mnt/vdb/output_extension/Math/Math_49/552/ValueServer.java
Used ingredient: public final class EmpiricalDistributionTest {
/mnt/vdb/output_extension/Math/Math_49/553/ValueServer.java
Used ingredient: * Test cases for the EmpiricalDistribution class
/mnt/vdb/output_extension/Math/Math_49/554/ValueServer.java
Used ingredient: implements Distribution, Serializable {
/mnt/vdb/output_extension/Math/Math_49/555/ValueServer.java
Used ingredient: if (attribute.getPlusOutside() != null) {
/mnt/vdb/output_extension/Math/Math_49/556/ValueServer.java
Used ingredient: if ((attribute.getPlusOutside() != null) &&
/mnt/vdb/output_extension/Math/Math_49/557/ValueServer.java
Used ingredient: if ((str = filePointer.readLine()) == null) {
/mnt/vdb/output_extension/Math/Math_49/558/ValueServer.java
Used ingredient: values[i] = empiricalDistribution.getNextValue();
/mnt/vdb/output_extension/Math/Math_49/559/ValueServer.java
Used ingredient: private EmpiricalDistribution empiricalDistribution = null;
/mnt/vdb/output_extension/Math/Math_49/560/ValueServer.java
Used ingredient: new EmpiricalDistributionImpl().load((double[]) null);
/mnt/vdb/output_extension/Math/Math_49/561/ValueServer.java
Used ingredient: new ExponentialDistributionImpl(0);
/mnt/vdb/output_extension/Math/Math_49/562/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl();
/mnt/vdb/output_extension/Math/Math_49/563/ValueServer.java
Used ingredient: /** Getter for property empiricalDistribution.
/mnt/vdb/output_extension/Math/Math_49/564/ValueServer.java
Used ingredient: dist = new NormalDistributionImpl(0, 1);
/mnt/vdb/output_extension/Math/Math_49/565/ValueServer.java
Used ingredient: public NormalDistributionImpl(){
/mnt/vdb/output_extension/Math/Math_49/566/ValueServer.java
Used ingredient: * Hypergeometric Distribution</a></li>
/mnt/vdb/output_extension/Math/Math_49/567/ValueServer.java
Used ingredient: public CauchyDistributionImpl() {
/mnt/vdb/output_extension/Math/Math_49/568/ValueServer.java
Used ingredient: if (representation.size() != l) {
/mnt/vdb/output_extension/Math/Math_49/569/ValueServer.java
Used ingredient: if (interpolator.nordsieck != null) {
/mnt/vdb/output_extension/Math/Math_49/570/ValueServer.java
Used ingredient: if (descriptivesValue != null) {
/mnt/vdb/output_extension/Math/Math_49/571/ValueServer.java
Used ingredient: if (vector.getDimension() != nCols) {
/mnt/vdb/output_extension/Math/Math_49/572/ValueServer.java
Used ingredient: if ((startIndex >= source.length()) ||
/mnt/vdb/output_extension/Math/Math_49/573/ValueServer.java
Used ingredient: if (interpolator.scaled != null) {
/mnt/vdb/output_extension/Math/Math_49/574/ValueServer.java
Used ingredient: if (interpolator.currentState != null) {
/mnt/vdb/output_extension/Math/Math_49/575/ValueServer.java
Used ingredient: if (currentDerivative != null) {
/mnt/vdb/output_extension/Math/Math_49/576/ValueServer.java
Used ingredient: if (right.right != null) {
/mnt/vdb/output_extension/Math/Math_49/577/ValueServer.java
Used ingredient: if (binaryRepresentation[i] == '1') {
/mnt/vdb/output_extension/Math/Math_49/578/ValueServer.java
Used ingredient: if (resultRedundant == null) {
/mnt/vdb/output_extension/Math/Math_49/579/ValueServer.java
Used ingredient: if (interpolator.v1 == null) {
/mnt/vdb/output_extension/Math/Math_49/580/ValueServer.java
Used ingredient: if (initialDoubleArray != null) {
/mnt/vdb/output_extension/Math/Math_49/581/ValueServer.java
Used ingredient: if ((left == null) && (right == null)) {
/mnt/vdb/output_extension/Math/Math_49/582/ValueServer.java
Used ingredient: if (statistics == null) {
/mnt/vdb/output_extension/Math/Math_49/583/ValueServer.java
Used ingredient: if (realFormat == null) {
/mnt/vdb/output_extension/Math/Math_49/584/ValueServer.java
Used ingredient: if (filePointer == null) {
/mnt/vdb/output_extension/Math/Math_49/585/ValueServer.java
Used ingredient: if (cell.getCut() == null) {
/mnt/vdb/output_extension/Math/Math_49/586/ValueServer.java
Used ingredient: if (summariesValue != null) {
/mnt/vdb/output_extension/Math/Math_49/587/ValueServer.java
Used ingredient: if (imaginaryFormat == null) {
/mnt/vdb/output_extension/Math/Math_49/588/ValueServer.java
Used ingredient: if (this.parameters == null) {
/mnt/vdb/output_extension/Math/Math_49/589/ValueServer.java
Used ingredient: if (initialArray == null) {
/mnt/vdb/output_extension/Math/Math_49/590/ValueServer.java
Used ingredient: if (getBasicRow(col) == null) {
/mnt/vdb/output_extension/Math/Math_49/591/ValueServer.java
Used ingredient: if (function == null) {
/mnt/vdb/output_extension/Math/Math_49/592/ValueServer.java
Used ingredient: if (parameters == null) {
/mnt/vdb/output_extension/Math/Math_49/593/ValueServer.java
Used ingredient: if (selectedColumns == null) {
/mnt/vdb/output_extension/Math/Math_49/594/ValueServer.java
Used ingredient: if (node.parent == null) {
/mnt/vdb/output_extension/Math/Math_49/595/ValueServer.java
Used ingredient: if (coefficients == null) {
/mnt/vdb/output_extension/Math/Math_49/596/ValueServer.java
Used ingredient: if (vertices == null) {
/mnt/vdb/output_extension/Math/Math_49/597/ValueServer.java
Used ingredient: if (optimizer == null ||
/mnt/vdb/output_extension/Math/Math_49/598/ValueServer.java
Used ingredient: if (selectedRows == null ||
/mnt/vdb/output_extension/Math/Math_49/599/ValueServer.java
Used ingredient: empiricalDistribution = new EmpiricalDistributionImpl(1);
/mnt/vdb/output_extension/Math/Math_49/600/ValueServer.java
SuspiciousModificationPoint:                 throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
At: OpenIntToDoubleHashMap.java org.apache.commons.math.util.OpenIntToDoubleHashMap
Line number: 564
Used ingredient: throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
/mnt/vdb/output_extension/Math/Math_49/601/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS);
/mnt/vdb/output_extension/Math/Math_49/602/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
/mnt/vdb/output_extension/Math/Math_49/603/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createIllegalStateException(LocalizedFormats.DIGEST_NOT_INITIALIZED);
/mnt/vdb/output_extension/Math/Math_49/604/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createIllegalStateException(LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);
/mnt/vdb/output_extension/Math/Math_49/605/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR);
/mnt/vdb/output_extension/Math/Math_49/606/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
/mnt/vdb/output_extension/Math/Math_49/607/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
/mnt/vdb/output_extension/Math/Math_49/608/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createIllegalStateException(LocalizedFormats.DISTRIBUTION_NOT_LOADED);
/mnt/vdb/output_extension/Math/Math_49/609/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_RESULT_AVAILABLE);
/mnt/vdb/output_extension/Math/Math_49/610/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createEOFException(LocalizedFormats.URL_CONTAINS_NO_DATA,
/mnt/vdb/output_extension/Math/Math_49/611/OpenIntToDoubleHashMap.java
Used ingredient: public static ConcurrentModificationException createConcurrentModificationException(final Localizable pattern,
/mnt/vdb/output_extension/Math/Math_49/612/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathUnsupportedOperationException(LocalizedFormats.NOT_SUPPORTED_IN_DIMENSION_N, 1);
/mnt/vdb/output_extension/Math/Math_49/613/OpenIntToDoubleHashMap.java
Used ingredient: throw new ModelSpecificationException(LocalizedFormats.INVALID_REGRESSION_OBSERVATION,
/mnt/vdb/output_extension/Math/Math_49/614/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotStrictlyPositiveException(LocalizedFormats.INVALID_MAX_ITERATIONS, maximumIterations);
/mnt/vdb/output_extension/Math/Math_49/615/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.CANNOT_CONVERT_OBJECT_TO_FRACTION, hDouble);
/mnt/vdb/output_extension/Math/Math_49/616/OpenIntToDoubleHashMap.java
Used ingredient: throw new DimensionMismatchException(LocalizedFormats.ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1,
/mnt/vdb/output_extension/Math/Math_49/617/OpenIntToDoubleHashMap.java
Used ingredient: throw new MaxCountExceededException(LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION,
/mnt/vdb/output_extension/Math/Math_49/618/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_SUBTRACTION, x, y);
/mnt/vdb/output_extension/Math/Math_49/619/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.NON_INVERTIBLE_TRANSFORM);
/mnt/vdb/output_extension/Math/Math_49/620/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX, i, weights[i]);
/mnt/vdb/output_extension/Math/Math_49/621/OpenIntToDoubleHashMap.java
Used ingredient: throw new ConvergenceException(LocalizedFormats.TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE,
/mnt/vdb/output_extension/Math/Math_49/622/OpenIntToDoubleHashMap.java
Used ingredient: throw new ModelSpecificationException(LocalizedFormats.NO_REGRESSORS);
/mnt/vdb/output_extension/Math/Math_49/623/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION, sd);
/mnt/vdb/output_extension/Math/Math_49/624/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotStrictlyPositiveException(LocalizedFormats.STANDARD_DEVIATION, sigma);
/mnt/vdb/output_extension/Math/Math_49/625/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);
/mnt/vdb/output_extension/Math/Math_49/626/OpenIntToDoubleHashMap.java
Used ingredient: throw new InvalidRepresentationException(LocalizedFormats.INVALID_BINARY_DIGIT,
/mnt/vdb/output_extension/Math/Math_49/627/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.NAN_ELEMENT_AT_INDEX, i);
/mnt/vdb/output_extension/Math/Math_49/628/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);
/mnt/vdb/output_extension/Math/Math_49/629/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalStateException(LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET, column);
/mnt/vdb/output_extension/Math/Math_49/630/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,
/mnt/vdb/output_extension/Math/Math_49/631/OpenIntToDoubleHashMap.java
Used ingredient: throw new ConvergenceException(LocalizedFormats.TOO_SMALL_COST_RELATIVE_TOLERANCE,
/mnt/vdb/output_extension/Math/Math_49/632/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalStateException(LocalizedFormats.UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH);
/mnt/vdb/output_extension/Math/Math_49/633/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathRuntimeException(LocalizedFormats.SIMPLE_MESSAGE, "?");
/mnt/vdb/output_extension/Math/Math_49/634/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, x, y);
/mnt/vdb/output_extension/Math/Math_49/635/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotStrictlyPositiveException(LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES, n);
/mnt/vdb/output_extension/Math/Math_49/636/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, a, -b);
/mnt/vdb/output_extension/Math/Math_49/637/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotPositiveException(LocalizedFormats.ROBUSTNESS_ITERATIONS, robustnessIters);
/mnt/vdb/output_extension/Math/Math_49/638/OpenIntToDoubleHashMap.java
Used ingredient: throw new NoBracketingException(LocalizedFormats.FAILED_BRACKETING,
/mnt/vdb/output_extension/Math/Math_49/639/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_INFINITE);
/mnt/vdb/output_extension/Math/Math_49/640/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, weights[i], i);
/mnt/vdb/output_extension/Math/Math_49/641/OpenIntToDoubleHashMap.java
Used ingredient: throw new DimensionMismatchException(LocalizedFormats.DIFFERENT_ROWS_LENGTHS,
/mnt/vdb/output_extension/Math/Math_49/642/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);
/mnt/vdb/output_extension/Math/Math_49/643/OpenIntToDoubleHashMap.java
Used ingredient: throw new ConvergenceException(LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);
/mnt/vdb/output_extension/Math/Math_49/644/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathUserException(LocalizedFormats.CUMULATIVE_PROBABILITY_RETURNED_NAN, x, p);
/mnt/vdb/output_extension/Math/Math_49/645/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.OUTLINE_BOUNDARY_LOOP_OPEN);
/mnt/vdb/output_extension/Math/Math_49/646/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION,
/mnt/vdb/output_extension/Math/Math_49/647/OpenIntToDoubleHashMap.java
Used ingredient: throw new ConvergenceException(LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM);
/mnt/vdb/output_extension/Math/Math_49/648/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY, i);
/mnt/vdb/output_extension/Math/Math_49/649/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalStateException(LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET, row);
/mnt/vdb/output_extension/Math/Math_49/650/OpenIntToDoubleHashMap.java
Used ingredient: throw new ConvergenceException(LocalizedFormats.TOO_SMALL_ORTHOGONALITY_TOLERANCE,
/mnt/vdb/output_extension/Math/Math_49/651/OpenIntToDoubleHashMap.java
Used ingredient: throw new NumberIsTooLargeException(LocalizedFormats.SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE,
/mnt/vdb/output_extension/Math/Math_49/652/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotPositiveException(LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,
/mnt/vdb/output_extension/Math/Math_49/653/OpenIntToDoubleHashMap.java
Used ingredient: throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,
/mnt/vdb/output_extension/Math/Math_49/654/OpenIntToDoubleHashMap.java
Used ingredient: throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE,
/mnt/vdb/output_extension/Math/Math_49/655/OpenIntToDoubleHashMap.java
Used ingredient: throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,
/mnt/vdb/output_extension/Math/Math_49/656/OpenIntToDoubleHashMap.java
Used ingredient: throw new ConvergenceException(LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN,
/mnt/vdb/output_extension/Math/Math_49/657/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathRuntimeException(LocalizedFormats.NO_BIN_SELECTED);
/mnt/vdb/output_extension/Math/Math_49/658/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotStrictlyPositiveException(LocalizedFormats.SIMPLEX_NEED_ONE_POINT,
/mnt/vdb/output_extension/Math/Math_49/659/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotPositiveException(LocalizedFormats.BINOMIAL_NEGATIVE_PARAMETER, n);
/mnt/vdb/output_extension/Math/Math_49/660/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalStateException(LocalizedFormats.TOO_MUCH_CANCELLATION, vquad);
/mnt/vdb/output_extension/Math/Math_49/661/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 1);
/mnt/vdb/output_extension/Math/Math_49/662/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 2);
/mnt/vdb/output_extension/Math/Math_49/663/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,
/mnt/vdb/output_extension/Math/Math_49/664/OpenIntToDoubleHashMap.java
Used ingredient: throw new NoDataException(LocalizedFormats.EMPTY_SELECTED_ROW_INDEX_ARRAY);
/mnt/vdb/output_extension/Math/Math_49/665/OpenIntToDoubleHashMap.java
Used ingredient: throw new NoDataException(LocalizedFormats.EMPTY_SELECTED_COLUMN_INDEX_ARRAY);
/mnt/vdb/output_extension/Math/Math_49/666/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
/mnt/vdb/output_extension/Math/Math_49/667/OpenIntToDoubleHashMap.java
Used ingredient: throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
/mnt/vdb/output_extension/Math/Math_49/668/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathException(LocalizedFormats.DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN, argument);
/mnt/vdb/output_extension/Math/Math_49/669/OpenIntToDoubleHashMap.java
Used ingredient: throw new OutOfRangeException(LocalizedFormats.NUMBER_OF_INTERPOLATION_POINTS,
/mnt/vdb/output_extension/Math/Math_49/670/OpenIntToDoubleHashMap.java
Used ingredient: throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
/mnt/vdb/output_extension/Math/Math_49/671/OpenIntToDoubleHashMap.java
Used ingredient: throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
/mnt/vdb/output_extension/Math/Math_49/672/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, k);
/mnt/vdb/output_extension/Math/Math_49/673/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_NAN);
/mnt/vdb/output_extension/Math/Math_49/674/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);
/mnt/vdb/output_extension/Math/Math_49/675/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit);
/mnt/vdb/output_extension/Math/Math_49/676/OpenIntToDoubleHashMap.java
Used ingredient: * Constructs a new <code>ConcurrentModificationException</code> with specified formatted detail message.
/mnt/vdb/output_extension/Math/Math_49/677/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalStateException(LocalizedFormats.TRUST_REGION_STEP_FAILED, vquad);
/mnt/vdb/output_extension/Math/Math_49/678/OpenIntToDoubleHashMap.java
Used ingredient: throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE, p, 0, 100);
/mnt/vdb/output_extension/Math/Math_49/679/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
/mnt/vdb/output_extension/Math/Math_49/680/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.ZERO_FRACTION_TO_DIVIDE_BY,
/mnt/vdb/output_extension/Math/Math_49/681/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.EQUAL_VERTICES_IN_SIMPLEX,
/mnt/vdb/output_extension/Math/Math_49/682/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
/mnt/vdb/output_extension/Math/Math_49/683/OpenIntToDoubleHashMap.java
Used ingredient: throw new NumberIsTooLargeException(LocalizedFormats.SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE,
/mnt/vdb/output_extension/Math/Math_49/684/OpenIntToDoubleHashMap.java
Used ingredient: throw new NumberIsTooSmallException(LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION,
/mnt/vdb/output_extension/Math/Math_49/685/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotFiniteNumberException(LocalizedFormats.ARRAY_ELEMENT, x, i);
/mnt/vdb/output_extension/Math/Math_49/686/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
/mnt/vdb/output_extension/Math/Math_49/687/OpenIntToDoubleHashMap.java
Used ingredient: throw new NullArgumentException(LocalizedFormats.OBJECT_TRANSFORMATION);
/mnt/vdb/output_extension/Math/Math_49/688/OpenIntToDoubleHashMap.java
Used ingredient: throw new NoDataException(LocalizedFormats.INSUFFICIENT_DIMENSION);
/mnt/vdb/output_extension/Math/Math_49/689/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_32_BITS,
/mnt/vdb/output_extension/Math/Math_49/690/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,
/mnt/vdb/output_extension/Math/Math_49/691/OpenIntToDoubleHashMap.java
Used ingredient: throw new MaxCountExceededException(LocalizedFormats.CONVERGENCE_FAILED,
/mnt/vdb/output_extension/Math/Math_49/692/OpenIntToDoubleHashMap.java
Used ingredient: throw new ZeroException(LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT);
/mnt/vdb/output_extension/Math/Math_49/693/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.INVALID_ROUNDING_METHOD,
/mnt/vdb/output_extension/Math/Math_49/694/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_2x2,
/mnt/vdb/output_extension/Math/Math_49/695/OpenIntToDoubleHashMap.java
Used ingredient: throw new NotPositiveException(LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,
/mnt/vdb/output_extension/Math/Math_49/696/OpenIntToDoubleHashMap.java
Used ingredient: throw new OutOfRangeException(LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,
/mnt/vdb/output_extension/Math/Math_49/697/OpenIntToDoubleHashMap.java
Used ingredient: throw new NumberIsTooSmallException(LocalizedFormats.INSUFFICIENT_DATA_FOR_T_STATISTIC,
/mnt/vdb/output_extension/Math/Math_49/698/OpenIntToDoubleHashMap.java
Used ingredient: throw new NumberIsTooLargeException(LocalizedFormats.BINOMIAL_INVALID_PARAMETERS_ORDER,
/mnt/vdb/output_extension/Math/Math_49/699/OpenIntToDoubleHashMap.java
Used ingredient: throw new MathIllegalArgumentException(LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX,
/mnt/vdb/output_extension/Math/Math_49/700/OpenIntToDoubleHashMap.java
SuspiciousModificationPoint:         checkVectorDimensions(v.getDimension());
At: OpenMapRealVector.java org.apache.commons.math.linear.OpenMapRealVector
Line number: 368
Used ingredient: p.getRowDimension(), p.getRowDimension());
/mnt/vdb/output_extension/Math/Math_49/701/OpenMapRealVector.java
Used ingredient: getRowDimension(), getColumnDimension());
/mnt/vdb/output_extension/Math/Math_49/702/OpenMapRealVector.java
Used ingredient: checkVectorDimensions(v.length);
/mnt/vdb/output_extension/Math/Math_49/703/OpenMapRealVector.java
Used ingredient: checkVectorDimensions(y.length);
/mnt/vdb/output_extension/Math/Math_49/704/OpenMapRealVector.java
Used ingredient: rm.getRowDimension(),rm.getRowDimension(),
/mnt/vdb/output_extension/Math/Math_49/705/OpenMapRealVector.java
Used ingredient: rm.getRowDimension(),rm.getColumnDimension());
/mnt/vdb/output_extension/Math/Math_49/706/OpenMapRealVector.java
Used ingredient: checkVectorDimensions(dim);
/mnt/vdb/output_extension/Math/Math_49/707/OpenMapRealVector.java
Used ingredient: (X.getRowDimension() - X.getColumnDimension());
/mnt/vdb/output_extension/Math/Math_49/708/OpenMapRealVector.java
Used ingredient: mainSetDimension = equations.getDimension();
/mnt/vdb/output_extension/Math/Math_49/709/OpenMapRealVector.java
Used ingredient: checkIndex(index + v.getDimension() - 1);
/mnt/vdb/output_extension/Math/Math_49/710/OpenMapRealVector.java
Used ingredient: v1.checkVectorDimensions(v4_2);
/mnt/vdb/output_extension/Math/Math_49/711/OpenMapRealVector.java
Used ingredient: checkVectorDimensions(v);
/mnt/vdb/output_extension/Math/Math_49/712/OpenMapRealVector.java
Used ingredient: v1.checkVectorDimensions(v4);
/mnt/vdb/output_extension/Math/Math_49/713/OpenMapRealVector.java
Used ingredient: transitionMatrix.getColumnDimension());
/mnt/vdb/output_extension/Math/Math_49/714/OpenMapRealVector.java
Used ingredient: return stateEstimation.getDimension();
/mnt/vdb/output_extension/Math/Math_49/715/OpenMapRealVector.java
Used ingredient: transitionMatrix.getRowDimension(), 1);
/mnt/vdb/output_extension/Math/Math_49/716/OpenMapRealVector.java
Used ingredient: transitionMatrix.getRowDimension());
/mnt/vdb/output_extension/Math/Math_49/717/OpenMapRealVector.java
Used ingredient: stateEstimation.getDimension());
/mnt/vdb/output_extension/Math/Math_49/718/OpenMapRealVector.java
Used ingredient: checkVectorDimensions(y);
/mnt/vdb/output_extension/Math/Math_49/719/OpenMapRealVector.java
Used ingredient: v1.checkVectorDimensions(2);
/mnt/vdb/output_extension/Math/Math_49/720/OpenMapRealVector.java
Used ingredient: return f.getCoefficients().getDimension();
/mnt/vdb/output_extension/Math/Math_49/721/OpenMapRealVector.java
Used ingredient: dimension      = equations.getDimension();
/mnt/vdb/output_extension/Math/Math_49/722/OpenMapRealVector.java
Used ingredient: return getColumnDimension() == getRowDimension();
/mnt/vdb/output_extension/Math/Math_49/723/OpenMapRealVector.java
Used ingredient: if ((getRowDimension() != m.getRowDimension()) ||
/mnt/vdb/output_extension/Math/Math_49/724/OpenMapRealVector.java
Used ingredient: right.getRowDimension(), right.getColumnDimension());
/mnt/vdb/output_extension/Math/Math_49/725/OpenMapRealVector.java
Used ingredient: if (getColumnDimension() != m.getRowDimension()) {
/mnt/vdb/output_extension/Math/Math_49/726/OpenMapRealVector.java
Used ingredient: protected void checkVectorDimensions(int n) {
/mnt/vdb/output_extension/Math/Math_49/727/OpenMapRealVector.java
Used ingredient: measurementMatrix.getRowDimension(), 1);
/mnt/vdb/output_extension/Math/Math_49/728/OpenMapRealVector.java
Used ingredient: measurementMatrix.getRowDimension());
/mnt/vdb/output_extension/Math/Math_49/729/OpenMapRealVector.java
Used ingredient: checkDimension(createTestMatrix(r, p, q));
/mnt/vdb/output_extension/Math/Math_49/730/OpenMapRealVector.java
Used ingredient: checkDimension(createTestMatrix(r, q, p));
/mnt/vdb/output_extension/Math/Math_49/731/OpenMapRealVector.java
Used ingredient: (getColumnDimension() != m.getColumnDimension())) {
/mnt/vdb/output_extension/Math/Math_49/732/OpenMapRealVector.java
Used ingredient: int dimension = matrix.getColumnDimension();
/mnt/vdb/output_extension/Math/Math_49/733/OpenMapRealVector.java
Used ingredient: private void checkDimension(int dimension) {
/mnt/vdb/output_extension/Math/Math_49/734/OpenMapRealVector.java
Used ingredient: controlMatrix.getColumnDimension());
/mnt/vdb/output_extension/Math/Math_49/735/OpenMapRealVector.java
Used ingredient: transitionMatrix.getRowDimension(),
/mnt/vdb/output_extension/Math/Math_49/736/OpenMapRealVector.java
Used ingredient: super(rowDimension, columnDimension);
/mnt/vdb/output_extension/Math/Math_49/737/OpenMapRealVector.java
Used ingredient: " x " + expected.getColumnDimension());
/mnt/vdb/output_extension/Math/Math_49/738/OpenMapRealVector.java
Used ingredient: columns = other.getColumnDimension();
/mnt/vdb/output_extension/Math/Math_49/739/OpenMapRealVector.java
Used ingredient: public VectorialMean(int dimension) {
/mnt/vdb/output_extension/Math/Math_49/740/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(0, v0.getDimension());
/mnt/vdb/output_extension/Math/Math_49/741/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(7, v1.getDimension());
/mnt/vdb/output_extension/Math/Math_49/742/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(5, v2.getDimension());
/mnt/vdb/output_extension/Math/Math_49/743/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(3, v3.getDimension());
/mnt/vdb/output_extension/Math/Math_49/744/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(2, v4.getDimension());
/mnt/vdb/output_extension/Math/Math_49/745/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(9, v5.getDimension());
/mnt/vdb/output_extension/Math/Math_49/746/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(2, v6.getDimension());
/mnt/vdb/output_extension/Math/Math_49/747/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(7, v7.getDimension());
/mnt/vdb/output_extension/Math/Math_49/748/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(7, v8.getDimension());
/mnt/vdb/output_extension/Math/Math_49/749/OpenMapRealVector.java
Used ingredient: expected.getRowDimension() != observed.getRowDimension()) {
/mnt/vdb/output_extension/Math/Math_49/750/OpenMapRealVector.java
Used ingredient: if( rm.getColumnDimension() != rm.getRowDimension() ){
/mnt/vdb/output_extension/Math/Math_49/751/OpenMapRealVector.java
Used ingredient: int order = covariance.getRowDimension();
/mnt/vdb/output_extension/Math/Math_49/752/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(2, u.getDimension());
/mnt/vdb/output_extension/Math/Math_49/753/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(2, e.getDimension());
/mnt/vdb/output_extension/Math/Math_49/754/OpenMapRealVector.java
Used ingredient: return measurementMatrix.getRowDimension();
/mnt/vdb/output_extension/Math/Math_49/755/OpenMapRealVector.java
Used ingredient: checkVertices(set.getVertices(), vertices);
/mnt/vdb/output_extension/Math/Math_49/756/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(10, v9.getDimension());
/mnt/vdb/output_extension/Math/Math_49/757/OpenMapRealVector.java
Used ingredient: return t / (X.getRowDimension() - X.getColumnDimension());
/mnt/vdb/output_extension/Math/Math_49/758/OpenMapRealVector.java
Used ingredient: final Vector3D direction = line.getDirection();
/mnt/vdb/output_extension/Math/Math_49/759/OpenMapRealVector.java
Used ingredient: int[] dimensionSize = mdcm.getDimensionSizes();
/mnt/vdb/output_extension/Math/Math_49/760/OpenMapRealVector.java
Used ingredient: measurementMatrix.getColumnDimension(),
/mnt/vdb/output_extension/Math/Math_49/761/OpenMapRealVector.java
Used ingredient: final int cols = m.getColumnDimension();
/mnt/vdb/output_extension/Math/Math_49/762/OpenMapRealVector.java
Used ingredient: int columns = m.getColumnDimension();
/mnt/vdb/output_extension/Math/Math_49/763/OpenMapRealVector.java
Used ingredient: measurementMatrix.getRowDimension(),
/mnt/vdb/output_extension/Math/Math_49/764/OpenMapRealVector.java
Used ingredient: int order = matrix.getRowDimension();
/mnt/vdb/output_extension/Math/Math_49/765/OpenMapRealVector.java
Used ingredient: column, 0, m.getColumnDimension() - 1);
/mnt/vdb/output_extension/Math/Math_49/766/OpenMapRealVector.java
Used ingredient: public synchronized int getDimension() {
/mnt/vdb/output_extension/Math/Math_49/767/OpenMapRealVector.java
Used ingredient: if (vector.getDimension() != nCols) {
/mnt/vdb/output_extension/Math/Math_49/768/OpenMapRealVector.java
Used ingredient: final int rows = m.getRowDimension();
/mnt/vdb/output_extension/Math/Math_49/769/OpenMapRealVector.java
Used ingredient: final int n = vector.getDimension();
/mnt/vdb/output_extension/Math/Math_49/770/OpenMapRealVector.java
Used ingredient: checkVertices(c.getVertices(),
/mnt/vdb/output_extension/Math/Math_49/771/OpenMapRealVector.java
Used ingredient: if (vector.getDimension() != nRows) {
/mnt/vdb/output_extension/Math/Math_49/772/OpenMapRealVector.java
Used ingredient: measNoise.getColumnDimension() != 1) {
/mnt/vdb/output_extension/Math/Math_49/773/OpenMapRealVector.java
Used ingredient: return super.getDimension();
/mnt/vdb/output_extension/Math/Math_49/774/OpenMapRealVector.java
Used ingredient: checkDimension(newImpl.length);
/mnt/vdb/output_extension/Math/Math_49/775/OpenMapRealVector.java
Used ingredient: checkDimension(value.length);
/mnt/vdb/output_extension/Math/Math_49/776/OpenMapRealVector.java
Used ingredient: data = buildArray(v.getDimension());
/mnt/vdb/output_extension/Math/Math_49/777/OpenMapRealVector.java
Used ingredient: final int n = v.getDimension();
/mnt/vdb/output_extension/Math/Math_49/778/OpenMapRealVector.java
Used ingredient: final int l2 = v2.getDimension();
/mnt/vdb/output_extension/Math/Math_49/779/OpenMapRealVector.java
Used ingredient: final int l1 = v1.getDimension();
/mnt/vdb/output_extension/Math/Math_49/780/OpenMapRealVector.java
Used ingredient: checkVector(r.getAxis(), Vector3D.PLUS_J);
/mnt/vdb/output_extension/Math/Math_49/781/OpenMapRealVector.java
Used ingredient: super(field, rowDimension, columnDimension);
/mnt/vdb/output_extension/Math/Math_49/782/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(9, v5_i.getDimension());
/mnt/vdb/output_extension/Math/Math_49/783/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(3, v7_2.getDimension());
/mnt/vdb/output_extension/Math/Math_49/784/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(7, v8_2.getDimension());
/mnt/vdb/output_extension/Math/Math_49/785/OpenMapRealVector.java
Used ingredient: throw new DimensionMismatchException(z.getDimension(),
/mnt/vdb/output_extension/Math/Math_49/786/OpenMapRealVector.java
Used ingredient: throw new DimensionMismatchException(u.getDimension(),
/mnt/vdb/output_extension/Math/Math_49/787/OpenMapRealVector.java
Used ingredient: throw new DimensionMismatchException(getDimension(), n);
/mnt/vdb/output_extension/Math/Math_49/788/OpenMapRealVector.java
Used ingredient: throw new DimensionMismatchException(b.getDimension(), m);
/mnt/vdb/output_extension/Math/Math_49/789/OpenMapRealVector.java
Used ingredient: final int n = currentBest.getDimension();
/mnt/vdb/output_extension/Math/Math_49/790/OpenMapRealVector.java
Used ingredient: final int columns = getColumnDimension();
/mnt/vdb/output_extension/Math/Math_49/791/OpenMapRealVector.java
Used ingredient: final int nRows = this.getRowDimension();
/mnt/vdb/output_extension/Math/Math_49/792/OpenMapRealVector.java
Used ingredient: final int nCols = m.getColumnDimension();
/mnt/vdb/output_extension/Math/Math_49/793/OpenMapRealVector.java
Used ingredient: RealVector v_mapAsin = vat.map(new Asin());
/mnt/vdb/output_extension/Math/Math_49/794/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(8, dme.getDimension());
/mnt/vdb/output_extension/Math/Math_49/795/OpenMapRealVector.java
Used ingredient: checkVertices(set1.getVertices(), vertices1);
/mnt/vdb/output_extension/Math/Math_49/796/OpenMapRealVector.java
Used ingredient: checkVertices(set2.getVertices(), vertices2);
/mnt/vdb/output_extension/Math/Math_49/797/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(3, vout5.getDimension());
/mnt/vdb/output_extension/Math/Math_49/798/OpenMapRealVector.java
Used ingredient: if (left.getColumnDimension() != right.getRowDimension()) {
/mnt/vdb/output_extension/Math/Math_49/799/OpenMapRealVector.java
Used ingredient: throw new DimensionMismatchException(v.getDimension(), nCols);
/mnt/vdb/output_extension/Math/Math_49/800/OpenMapRealVector.java
SuspiciousModificationPoint:         OpenMapRealVector res = new OpenMapRealVector(this);
At: OpenMapRealVector.java org.apache.commons.math.linear.OpenMapRealVector
Line number: 369
Used ingredient: OpenMapRealVector res = new OpenMapRealVector(this, 1);
/mnt/vdb/output_extension/Math/Math_49/801/OpenMapRealVector.java
Used ingredient: OpenMapRealVector res = new OpenMapRealVector(n);
/mnt/vdb/output_extension/Math/Math_49/802/OpenMapRealVector.java
Used ingredient: OpenMapRealVector vat = new OpenMapRealVector(vat_a);
/mnt/vdb/output_extension/Math/Math_49/803/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v7_2 = new OpenMapRealVector(v7_i);
/mnt/vdb/output_extension/Math/Math_49/804/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v0 = new OpenMapRealVector();
/mnt/vdb/output_extension/Math/Math_49/805/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v1 = new OpenMapRealVector(7);
/mnt/vdb/output_extension/Math/Math_49/806/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v7 = new OpenMapRealVector(v1);
/mnt/vdb/output_extension/Math/Math_49/807/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v8 = new OpenMapRealVector(v1);
/mnt/vdb/output_extension/Math/Math_49/808/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v3 = new OpenMapRealVector(vec1);
/mnt/vdb/output_extension/Math/Math_49/809/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v1 = new OpenMapRealVector(vec1);
/mnt/vdb/output_extension/Math/Math_49/810/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v2 = new OpenMapRealVector(vec2);
/mnt/vdb/output_extension/Math/Math_49/811/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v4 = new OpenMapRealVector(vec4);
/mnt/vdb/output_extension/Math/Math_49/812/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v5 = new OpenMapRealVector(vec5);
/mnt/vdb/output_extension/Math/Math_49/813/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v5 = new OpenMapRealVector(dvec1);
/mnt/vdb/output_extension/Math/Math_49/814/OpenMapRealVector.java
Used ingredient: OpenMapRealVector abs_v = new OpenMapRealVector(abs_a);
/mnt/vdb/output_extension/Math/Math_49/815/OpenMapRealVector.java
Used ingredient: OpenMapRealVector res = new OpenMapRealVector(this, a.length);
/mnt/vdb/output_extension/Math/Math_49/816/OpenMapRealVector.java
Used ingredient: OpenMapRealVector ceil_v = new OpenMapRealVector(ceil_a);
/mnt/vdb/output_extension/Math/Math_49/817/OpenMapRealVector.java
Used ingredient: OpenMapRealVector cbrt_v = new OpenMapRealVector(cbrt_a);
/mnt/vdb/output_extension/Math/Math_49/818/OpenMapRealVector.java
Used ingredient: final RealVector y = new OpenMapRealVector(dim, 0d);
/mnt/vdb/output_extension/Math/Math_49/819/OpenMapRealVector.java
Used ingredient: OpenMapRealVector other = (OpenMapRealVector) obj;
/mnt/vdb/output_extension/Math/Math_49/820/OpenMapRealVector.java
Used ingredient: final RealVector y = new OpenMapRealVector(aux);
/mnt/vdb/output_extension/Math/Math_49/821/OpenMapRealVector.java
Used ingredient: final RealVector u = new OpenMapRealVector(3, 1e-6);
/mnt/vdb/output_extension/Math/Math_49/822/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v_null = new OpenMapRealVector(vec_null);
/mnt/vdb/output_extension/Math/Math_49/823/OpenMapRealVector.java
Used ingredient: final RealVector v1 = new OpenMapRealVector(3, 1e-6);
/mnt/vdb/output_extension/Math/Math_49/824/OpenMapRealVector.java
Used ingredient: OpenMapRealVector res = new OpenMapRealVector(this, v.getDimension());
/mnt/vdb/output_extension/Math/Math_49/825/OpenMapRealVector.java
Used ingredient: RealVector v5_i = new OpenMapRealVector(dvec1);
/mnt/vdb/output_extension/Math/Math_49/826/OpenMapRealVector.java
Used ingredient: ArrayRealVector result = new ArrayRealVector(dim);
/mnt/vdb/output_extension/Math/Math_49/827/OpenMapRealVector.java
Used ingredient: final OpenMapRealMatrix out = new OpenMapRealMatrix(this);
/mnt/vdb/output_extension/Math/Math_49/828/OpenMapRealVector.java
Used ingredient: public OpenMapRealVector append(OpenMapRealVector v) {
/mnt/vdb/output_extension/Math/Math_49/829/OpenMapRealVector.java
Used ingredient: public OpenMapRealVector add(OpenMapRealVector v) {
/mnt/vdb/output_extension/Math/Math_49/830/OpenMapRealVector.java
Used ingredient: return (OpenMapRealVector) projection(new OpenMapRealVector(v));
/mnt/vdb/output_extension/Math/Math_49/831/OpenMapRealVector.java
Used ingredient: RealVector result = new ArrayRealVector(v);
/mnt/vdb/output_extension/Math/Math_49/832/OpenMapRealVector.java
Used ingredient: final RealVector x = new ArrayRealVector(dim);
/mnt/vdb/output_extension/Math/Math_49/833/OpenMapRealVector.java
Used ingredient: final RealVector y = new ArrayRealVector(dim);
/mnt/vdb/output_extension/Math/Math_49/834/OpenMapRealVector.java
Used ingredient: final ArrayRealVector su = new ArrayRealVector(n);
/mnt/vdb/output_extension/Math/Math_49/835/OpenMapRealVector.java
Used ingredient: final ArrayRealVector sl = new ArrayRealVector(n);
/mnt/vdb/output_extension/Math/Math_49/836/OpenMapRealVector.java
Used ingredient: public OpenMapRealVector(OpenMapRealVector v) {
/mnt/vdb/output_extension/Math/Math_49/837/OpenMapRealVector.java
Used ingredient: ArrayRealVector abs_v = new ArrayRealVector(abs_a);
/mnt/vdb/output_extension/Math/Math_49/838/OpenMapRealVector.java
Used ingredient: final RealVector p = new ArrayRealVector(point);
/mnt/vdb/output_extension/Math/Math_49/839/OpenMapRealVector.java
Used ingredient: public OpenMapRealVector subtract(OpenMapRealVector v) {
/mnt/vdb/output_extension/Math/Math_49/840/OpenMapRealVector.java
Used ingredient: ArrayRealVector ceil_v = new ArrayRealVector(ceil_a);
/mnt/vdb/output_extension/Math/Math_49/841/OpenMapRealVector.java
Used ingredient: ArrayRealVector cbrt_v = new ArrayRealVector(cbrt_a);
/mnt/vdb/output_extension/Math/Math_49/842/OpenMapRealVector.java
Used ingredient: final RealVector x = new ArrayRealVector(aux, false);
/mnt/vdb/output_extension/Math/Math_49/843/OpenMapRealVector.java
Used ingredient: final RealVector y = new ArrayRealVector(aux, false);
/mnt/vdb/output_extension/Math/Math_49/844/OpenMapRealVector.java
Used ingredient: SparseFieldVector<T> res = new SparseFieldVector<T>(this);
/mnt/vdb/output_extension/Math/Math_49/845/OpenMapRealVector.java
Used ingredient: FieldVector<T> res = new SparseFieldVector<T>(this, 1);
/mnt/vdb/output_extension/Math/Math_49/846/OpenMapRealVector.java
Used ingredient: ArrayRealVector v8 = new ArrayRealVector(v1, true);
/mnt/vdb/output_extension/Math/Math_49/847/OpenMapRealVector.java
Used ingredient: ArrayRealVector vat = new ArrayRealVector(vat_a);
/mnt/vdb/output_extension/Math/Math_49/848/OpenMapRealVector.java
Used ingredient: ArrayRealVector v7_2 = new ArrayRealVector(v7_i);
/mnt/vdb/output_extension/Math/Math_49/849/OpenMapRealVector.java
Used ingredient: OpenMapRealVector v = new OpenMapRealVector(new double[] { 0, 1, 2 });
/mnt/vdb/output_extension/Math/Math_49/850/OpenMapRealVector.java
Used ingredient: OpenMapRealMatrix out = new OpenMapRealMatrix(rows, outCols);
/mnt/vdb/output_extension/Math/Math_49/851/OpenMapRealVector.java
Used ingredient: RealMatrix res = new OpenMapRealMatrix(virtualSize, n);
/mnt/vdb/output_extension/Math/Math_49/852/OpenMapRealVector.java
Used ingredient: RealVector pNoise = new ArrayRealVector(1);
/mnt/vdb/output_extension/Math/Math_49/853/OpenMapRealVector.java
Used ingredient: RealVector mNoise = new ArrayRealVector(1);
/mnt/vdb/output_extension/Math/Math_49/854/OpenMapRealVector.java
Used ingredient: ArrayRealVector out = new ArrayRealVector(n);
/mnt/vdb/output_extension/Math/Math_49/855/OpenMapRealVector.java
Used ingredient: RealVector w = new ArrayRealVector(wData);
/mnt/vdb/output_extension/Math/Math_49/856/OpenMapRealVector.java
Used ingredient: RealVector sub = new ArrayRealVector(n, 1.0);
/mnt/vdb/output_extension/Math/Math_49/857/OpenMapRealVector.java
Used ingredient: ArrayRealVector v0 = new ArrayRealVector();
/mnt/vdb/output_extension/Math/Math_49/858/OpenMapRealVector.java
Used ingredient: ArrayRealVector v1 = new ArrayRealVector(7);
/mnt/vdb/output_extension/Math/Math_49/859/OpenMapRealVector.java
Used ingredient: RealVector mRow0 = new ArrayRealVector(subRow0[0]);
/mnt/vdb/output_extension/Math/Math_49/860/OpenMapRealVector.java
Used ingredient: RealVector mRow3 = new ArrayRealVector(subRow3[0]);
/mnt/vdb/output_extension/Math/Math_49/861/OpenMapRealVector.java
Used ingredient: ArrayRealVector v7 = new ArrayRealVector(v1);
/mnt/vdb/output_extension/Math/Math_49/862/OpenMapRealVector.java
Used ingredient: ArrayRealVector v3 = new ArrayRealVector(vec1);
/mnt/vdb/output_extension/Math/Math_49/863/OpenMapRealVector.java
Used ingredient: ArrayRealVector v1 = new ArrayRealVector(vec1);
/mnt/vdb/output_extension/Math/Math_49/864/OpenMapRealVector.java
Used ingredient: ArrayRealVector v2 = new ArrayRealVector(vec2);
/mnt/vdb/output_extension/Math/Math_49/865/OpenMapRealVector.java
Used ingredient: ArrayRealVector v4 = new ArrayRealVector(vec4);
/mnt/vdb/output_extension/Math/Math_49/866/OpenMapRealVector.java
Used ingredient: ArrayRealVector v5 = new ArrayRealVector(vec5);
/mnt/vdb/output_extension/Math/Math_49/867/OpenMapRealVector.java
Used ingredient: ArrayRealVector v5 = new ArrayRealVector(dvec1);
/mnt/vdb/output_extension/Math/Math_49/868/OpenMapRealVector.java
Used ingredient: public OpenMapRealVector ebeMultiply(RealVector v) {
/mnt/vdb/output_extension/Math/Math_49/869/OpenMapRealVector.java
Used ingredient: ArrayRealVector v9 = new ArrayRealVector(v1, v3);
/mnt/vdb/output_extension/Math/Math_49/870/OpenMapRealVector.java
Used ingredient: ArrayRealVector v2 = new ArrayRealVector(5, 1.23);
/mnt/vdb/output_extension/Math/Math_49/871/OpenMapRealVector.java
Used ingredient: ArrayRealVector v12 = new ArrayRealVector(v2, vec3);
/mnt/vdb/output_extension/Math/Math_49/872/OpenMapRealVector.java
Used ingredient: ArrayRealVector v13 = new ArrayRealVector(vec3, v2);
/mnt/vdb/output_extension/Math/Math_49/873/OpenMapRealVector.java
Used ingredient: * #OpenMapRealVector(OpenMapRealVector, int)} constructor
/mnt/vdb/output_extension/Math/Math_49/874/OpenMapRealVector.java
Used ingredient: ArrayRealVector v8_2 = new ArrayRealVector(v1, false);
/mnt/vdb/output_extension/Math/Math_49/875/OpenMapRealVector.java
Used ingredient: final RealVector vector = new ArrayRealVector(data, false);
/mnt/vdb/output_extension/Math/Math_49/876/OpenMapRealVector.java
Used ingredient: final OpenMapRealVector v = new OpenMapRealVector(new double[] {4, -2});
/mnt/vdb/output_extension/Math/Math_49/877/OpenMapRealVector.java
Used ingredient: ArrayRealVector v4 = new ArrayRealVector(vec4, 3, 2);
/mnt/vdb/output_extension/Math/Math_49/878/OpenMapRealVector.java
Used ingredient: RealVector v5_i = new ArrayRealVector(dvec1);
/mnt/vdb/output_extension/Math/Math_49/879/OpenMapRealVector.java
Used ingredient: return new OpenMapRealVector(this);
/mnt/vdb/output_extension/Math/Math_49/880/OpenMapRealVector.java
Used ingredient: public OpenMapRealVector ebeDivide(RealVector v) {
/mnt/vdb/output_extension/Math/Math_49/881/OpenMapRealVector.java
Used ingredient: public OpenMapRealVector append(RealVector v) {
/mnt/vdb/output_extension/Math/Math_49/882/OpenMapRealVector.java
Used ingredient: RealVector v4_2 = new ArrayRealVector(vec4);
/mnt/vdb/output_extension/Math/Math_49/883/OpenMapRealVector.java
Used ingredient: ArrayRealVector v3_bis = new ArrayRealVector(vec1, true);
/mnt/vdb/output_extension/Math/Math_49/884/OpenMapRealVector.java
Used ingredient: //SparseRealVector v4 = new SparseRealVector(vec4, 3, 2);
/mnt/vdb/output_extension/Math/Math_49/885/OpenMapRealVector.java
Used ingredient: ArrayRealVector v14 = new ArrayRealVector(vec3, vec4);
/mnt/vdb/output_extension/Math/Math_49/886/OpenMapRealVector.java
Used ingredient: ArrayRealVector v6 = new ArrayRealVector(dvec1, 3, 2);
/mnt/vdb/output_extension/Math/Math_49/887/OpenMapRealVector.java
Used ingredient: final RealVector x = solve(new ArrayRealVector(b, false));
/mnt/vdb/output_extension/Math/Math_49/888/OpenMapRealVector.java
Used ingredient: ArrayRealVector v3_ter = new ArrayRealVector(vec1, false);
/mnt/vdb/output_extension/Math/Math_49/889/OpenMapRealVector.java
Used ingredient: ArrayRealVector v_null = new ArrayRealVector(vec_null);
/mnt/vdb/output_extension/Math/Math_49/890/OpenMapRealVector.java
Used ingredient: final OpenMapRealVector u = new OpenMapRealVector(new double[] {1, 2, -3});
/mnt/vdb/output_extension/Math/Math_49/891/OpenMapRealVector.java
Used ingredient: protected OpenMapRealVector(OpenMapRealVector v, int resize) {
/mnt/vdb/output_extension/Math/Math_49/892/OpenMapRealVector.java
Used ingredient: OpenMapRealMatrix mt = (OpenMapRealMatrix) m.transpose();
/mnt/vdb/output_extension/Math/Math_49/893/OpenMapRealVector.java
Used ingredient: RealVectorFormat cf = new RealVectorFormat(nf);
/mnt/vdb/output_extension/Math/Math_49/894/OpenMapRealVector.java
Used ingredient: public OpenMapRealVector subtract(RealVector v) {
/mnt/vdb/output_extension/Math/Math_49/895/OpenMapRealVector.java
Used ingredient: RealVectorTestImpl vt2 = new RealVectorTestImpl(vec2);
/mnt/vdb/output_extension/Math/Math_49/896/OpenMapRealVector.java
Used ingredient: ArrayRealVector v4 = new ArrayRealVector(new double[0]);
/mnt/vdb/output_extension/Math/Math_49/897/OpenMapRealVector.java
Used ingredient: final RealVector y = operate(new ArrayRealVector(x, false));
/mnt/vdb/output_extension/Math/Math_49/898/OpenMapRealVector.java
Used ingredient: RealVectorTestImpl v7_i = new RealVectorTestImpl(vec1);
/mnt/vdb/output_extension/Math/Math_49/899/OpenMapRealVector.java
Used ingredient: RealVectorTestImpl v2_t = new RealVectorTestImpl(vec2);
/mnt/vdb/output_extension/Math/Math_49/900/OpenMapRealVector.java
SuspiciousModificationPoint:         Iterator iter = res.entries.iterator();
At: OpenMapRealVector.java org.apache.commons.math.linear.OpenMapRealVector
Line number: 370
Used ingredient: Iterator iter = v.entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/901/OpenMapRealVector.java
Used ingredient: Iterator iter = entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/902/OpenMapRealVector.java
Used ingredient: Iterator iter = v.getEntries().iterator();
/mnt/vdb/output_extension/Math/Math_49/903/OpenMapRealVector.java
Used ingredient: iter = other.getEntries().iterator();
/mnt/vdb/output_extension/Math/Math_49/904/OpenMapRealVector.java
Used ingredient: Iterator<Entry> it = sparseIterator();
/mnt/vdb/output_extension/Math/Math_49/905/OpenMapRealVector.java
Used ingredient: Iterator<Entry> iterator = iterator();
/mnt/vdb/output_extension/Math/Math_49/906/OpenMapRealVector.java
Used ingredient: Iterator<?> it = f.valuesIterator();
/mnt/vdb/output_extension/Math/Math_49/907/OpenMapRealVector.java
Used ingredient: iter = v.getEntries().iterator();
/mnt/vdb/output_extension/Math/Math_49/908/OpenMapRealVector.java
Used ingredient: Iterator<Entry> it = v.sparseIterator();
/mnt/vdb/output_extension/Math/Math_49/909/OpenMapRealVector.java
Used ingredient: iterator = tiesTrace.iterator();
/mnt/vdb/output_extension/Math/Math_49/910/OpenMapRealVector.java
Used ingredient: iter = entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/911/OpenMapRealVector.java
Used ingredient: Iterator<Entry> thisIt = sparseIterator();
/mnt/vdb/output_extension/Math/Math_49/912/OpenMapRealVector.java
Used ingredient: Iterator<Entry> it = iterator();
/mnt/vdb/output_extension/Math/Math_49/913/OpenMapRealVector.java
Used ingredient: Iterator<Integer> iterator = tiesTrace.iterator();
/mnt/vdb/output_extension/Math/Math_49/914/OpenMapRealVector.java
Used ingredient: Iterator<Entry> otherIt = v.sparseIterator();
/mnt/vdb/output_extension/Math/Math_49/915/OpenMapRealVector.java
Used ingredient: Iterator<Entry> sparseIterator();
/mnt/vdb/output_extension/Math/Math_49/916/OpenMapRealVector.java
Used ingredient: OpenIntToFieldHashMap<T>.Iterator iter = res.entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/917/OpenMapRealVector.java
Used ingredient: Iterator<Integer> iterator = nanPositions.iterator();
/mnt/vdb/output_extension/Math/Math_49/918/OpenMapRealVector.java
Used ingredient: Iterator<Long> iterator = freqTable.values().iterator();
/mnt/vdb/output_extension/Math/Math_49/919/OpenMapRealVector.java
Used ingredient: GillIntegrator integ = new GillIntegrator(step);
/mnt/vdb/output_extension/Math/Math_49/920/OpenMapRealVector.java
Used ingredient: OpenIntToFieldHashMap<T>.Iterator iter = entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/921/OpenMapRealVector.java
Used ingredient: OpenIntToFieldHashMap<T>.Iterator iter = v.entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/922/OpenMapRealVector.java
Used ingredient: RealVector v_unitVector = v1.unitVector();
/mnt/vdb/output_extension/Math/Math_49/923/OpenMapRealVector.java
Used ingredient: OpenIntToFieldHashMap<T>.Iterator iter2 = v.entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/924/OpenMapRealVector.java
Used ingredient: Iterator iter = copyThis ? v.entries.iterator() : entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/925/OpenMapRealVector.java
Used ingredient: RealVector v  = ed.getEigenvector(i);
/mnt/vdb/output_extension/Math/Math_49/926/OpenMapRealVector.java
Used ingredient: RealMatrix inverse = es.getInverse();
/mnt/vdb/output_extension/Math/Math_49/927/OpenMapRealVector.java
Used ingredient: return new SparseEntryIterator();
/mnt/vdb/output_extension/Math/Math_49/928/OpenMapRealVector.java
Used ingredient: Iterator<Entry> iterator();
/mnt/vdb/output_extension/Math/Math_49/929/OpenMapRealVector.java
Used ingredient: GetVisitor getVisitor = new GetVisitor();
/mnt/vdb/output_extension/Math/Math_49/930/OpenMapRealVector.java
Used ingredient: public Iterator<Entry> sparseIterator() {
/mnt/vdb/output_extension/Math/Math_49/931/OpenMapRealVector.java
Used ingredient: EulerIntegrator integ = new EulerIntegrator(step);
/mnt/vdb/output_extension/Math/Math_49/932/OpenMapRealVector.java
Used ingredient: Iterator<Comparable<?>> iter = freqTable.keySet().iterator();
/mnt/vdb/output_extension/Math/Math_49/933/OpenMapRealVector.java
Used ingredient: generator = makeGenerator();
/mnt/vdb/output_extension/Math/Math_49/934/OpenMapRealVector.java
Used ingredient: Vector3D point = p.intersection(l);
/mnt/vdb/output_extension/Math/Math_49/935/OpenMapRealVector.java
Used ingredient: integrator.setMinimalIterationCount(5);
/mnt/vdb/output_extension/Math/Math_49/936/OpenMapRealVector.java
Used ingredient: integrator.setMinimalIterationCount(2);
/mnt/vdb/output_extension/Math/Math_49/937/OpenMapRealVector.java
Used ingredient: return (numerator == rhs.numerator) &&
/mnt/vdb/output_extension/Math/Math_49/938/OpenMapRealVector.java
Used ingredient: return freqTable.keySet().iterator();
/mnt/vdb/output_extension/Math/Math_49/939/OpenMapRealVector.java
Used ingredient: public Iterator<Entry> iterator() {
/mnt/vdb/output_extension/Math/Math_49/940/OpenMapRealVector.java
Used ingredient: this.starter = starterIntegrator;
/mnt/vdb/output_extension/Math/Math_49/941/OpenMapRealVector.java
Used ingredient: OpenIntToFieldHashMap<T>.Iterator iter = v.getEntries().iterator();
/mnt/vdb/output_extension/Math/Math_49/942/OpenMapRealVector.java
Used ingredient: betaHat = result.getParameterEstimates();
/mnt/vdb/output_extension/Math/Math_49/943/OpenMapRealVector.java
Used ingredient: BigInteger num = fraction.getNumerator();
/mnt/vdb/output_extension/Math/Math_49/944/OpenMapRealVector.java
Used ingredient: FirstOrderIntegrator integ = new GillIntegrator(0.3);
/mnt/vdb/output_extension/Math/Math_49/945/OpenMapRealVector.java
Used ingredient: final Incrementor i = new Incrementor();
/mnt/vdb/output_extension/Math/Math_49/946/OpenMapRealVector.java
Used ingredient: RealVector e = Y.subtract(X.operate(b));
/mnt/vdb/output_extension/Math/Math_49/947/OpenMapRealVector.java
Used ingredient: integrator.setMinimalIterationCount(10);
/mnt/vdb/output_extension/Math/Math_49/948/OpenMapRealVector.java
Used ingredient: public Iterator<Chromosome> iterator() {
/mnt/vdb/output_extension/Math/Math_49/949/OpenMapRealVector.java
Used ingredient: Iterator<SummaryStatistics> iterator = statistics.iterator();
/mnt/vdb/output_extension/Math/Math_49/950/OpenMapRealVector.java
Used ingredient: StepInterpolator cloned = interpolator.copy();
/mnt/vdb/output_extension/Math/Math_49/951/OpenMapRealVector.java
Used ingredient: Iterator iter = thisIsSmaller  ? entries.iterator() : v.entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/952/OpenMapRealVector.java
Used ingredient: TrapezoidIntegrator qtrap = new TrapezoidIntegrator();
/mnt/vdb/output_extension/Math/Math_49/953/OpenMapRealVector.java
Used ingredient: FirstOrderIntegrator integ = new GillIntegrator(step);
/mnt/vdb/output_extension/Math/Math_49/954/OpenMapRealVector.java
Used ingredient: final Iterator<EventState> iterator = occuringEvents.iterator();
/mnt/vdb/output_extension/Math/Math_49/955/OpenMapRealVector.java
Used ingredient: return new OpenMapSparseIterator();
/mnt/vdb/output_extension/Math/Math_49/956/OpenMapRealVector.java
Used ingredient: RealVector flatY = regression.Y.copy();
/mnt/vdb/output_extension/Math/Math_49/957/OpenMapRealVector.java
Used ingredient: RealVector mV = matrix.operate(v);
/mnt/vdb/output_extension/Math/Math_49/958/OpenMapRealVector.java
Used ingredient: RealMatrix m = createSparseMatrix(id);
/mnt/vdb/output_extension/Math/Math_49/959/OpenMapRealVector.java
Used ingredient: getVisitor = new GetVisitor();
/mnt/vdb/output_extension/Math/Math_49/960/OpenMapRealVector.java
Used ingredient: trimmedSeparator = separator.trim();
/mnt/vdb/output_extension/Math/Math_49/961/OpenMapRealVector.java
Used ingredient: RealMatrix m3 = createSparseMatrix(d3);
/mnt/vdb/output_extension/Math/Math_49/962/OpenMapRealVector.java
Used ingredient: RealMatrix m4 = createSparseMatrix(d4);
/mnt/vdb/output_extension/Math/Math_49/963/OpenMapRealVector.java
Used ingredient: RealMatrix m5 = createSparseMatrix(d5);
/mnt/vdb/output_extension/Math/Math_49/964/OpenMapRealVector.java
Used ingredient: double[] generated = sg.nextVector();
/mnt/vdb/output_extension/Math/Math_49/965/OpenMapRealVector.java
Used ingredient: this.randomGenerator = randomGenerator;
/mnt/vdb/output_extension/Math/Math_49/966/OpenMapRealVector.java
Used ingredient: integrator.setMaximalIterationCount(4);
/mnt/vdb/output_extension/Math/Math_49/967/OpenMapRealVector.java
Used ingredient: final Entry entry = iterator.next();
/mnt/vdb/output_extension/Math/Math_49/968/OpenMapRealVector.java
Used ingredient: (denominator == rhs.denominator);
/mnt/vdb/output_extension/Math/Math_49/969/OpenMapRealVector.java
Used ingredient: int order = matrix.getRowDimension();
/mnt/vdb/output_extension/Math/Math_49/970/OpenMapRealVector.java
Used ingredient: protected SparseEntryIterator() {
/mnt/vdb/output_extension/Math/Math_49/971/OpenMapRealVector.java
Used ingredient: Rotation reverted = r.revert();
/mnt/vdb/output_extension/Math/Math_49/972/OpenMapRealVector.java
Used ingredient: this.integrator = rkIntegrator;
/mnt/vdb/output_extension/Math/Math_49/973/OpenMapRealVector.java
Used ingredient: return chromosomes.iterator();
/mnt/vdb/output_extension/Math/Math_49/974/OpenMapRealVector.java
Used ingredient: state.reinitializeBegin(interpolator);
/mnt/vdb/output_extension/Math/Math_49/975/OpenMapRealVector.java
Used ingredient: List<Interval> list = set.asList();
/mnt/vdb/output_extension/Math/Math_49/976/OpenMapRealVector.java
Used ingredient: errors = result.getStdErrorOfEstimates();
/mnt/vdb/output_extension/Math/Math_49/977/OpenMapRealVector.java
Used ingredient: BigFraction[] ai = generator.generate(k);
/mnt/vdb/output_extension/Math/Math_49/978/OpenMapRealVector.java
Used ingredient: int order = covariance.getRowDimension();
/mnt/vdb/output_extension/Math/Math_49/979/OpenMapRealVector.java
Used ingredient: final int n = currentBest.getDimension();
/mnt/vdb/output_extension/Math/Math_49/980/OpenMapRealVector.java
Used ingredient: BigInteger den = fraction.getDenominator();
/mnt/vdb/output_extension/Math/Math_49/981/OpenMapRealVector.java
Used ingredient: PrintWriter pw = new PrintWriter(ps, true);
/mnt/vdb/output_extension/Math/Math_49/982/OpenMapRealVector.java
Used ingredient: final StepInterpolator si = steps.get(index);
/mnt/vdb/output_extension/Math/Math_49/983/OpenMapRealVector.java
Used ingredient: FirstOrderIntegrator integ = new EulerIntegrator(step);
/mnt/vdb/output_extension/Math/Math_49/984/OpenMapRealVector.java
Used ingredient: RandomGenerator rg = new JDKRandomGenerator();
/mnt/vdb/output_extension/Math/Math_49/985/OpenMapRealVector.java
Used ingredient: MidpointIntegrator integ = new MidpointIntegrator(step);
/mnt/vdb/output_extension/Math/Math_49/986/OpenMapRealVector.java
Used ingredient: ConstantGenerator generator = new ConstantGenerator();
/mnt/vdb/output_extension/Math/Math_49/987/OpenMapRealVector.java
Used ingredient: RealMatrix m = createSparseMatrix(testData);
/mnt/vdb/output_extension/Math/Math_49/988/OpenMapRealVector.java
Used ingredient: final StepInterpolator sMin = steps.get(iMin);
/mnt/vdb/output_extension/Math/Math_49/989/OpenMapRealVector.java
Used ingredient: final StepInterpolator sMed = steps.get(iMed);
/mnt/vdb/output_extension/Math/Math_49/990/OpenMapRealVector.java
Used ingredient: Iterator<Comparable<?>> values = valuesIterator();
/mnt/vdb/output_extension/Math/Math_49/991/OpenMapRealVector.java
Used ingredient: integrator.setMaximalIterationCount(99);
/mnt/vdb/output_extension/Math/Math_49/992/OpenMapRealVector.java
Used ingredient: integrator.setMaximalIterationCount(50);
/mnt/vdb/output_extension/Math/Math_49/993/OpenMapRealVector.java
Used ingredient: integrator.setMaximalIterationCount(15);
/mnt/vdb/output_extension/Math/Math_49/994/OpenMapRealVector.java
Used ingredient: final Dfp zero = a.getField().getZero();
/mnt/vdb/output_extension/Math/Math_49/995/OpenMapRealVector.java
Used ingredient: * @return the array of entries in the row.
/mnt/vdb/output_extension/Math/Math_49/996/OpenMapRealVector.java
Used ingredient: FirstOrderIntegrator integ = new ThreeEighthesIntegrator(step);
/mnt/vdb/output_extension/Math/Math_49/997/OpenMapRealVector.java
Used ingredient: transitionMatrixT = transitionMatrix.transpose();
/mnt/vdb/output_extension/Math/Math_49/998/OpenMapRealVector.java
Used ingredient: RandomGenerator randGen = getRandomGenerator();
/mnt/vdb/output_extension/Math/Math_49/999/OpenMapRealVector.java
Used ingredient: RealMatrix mt = createSparseMatrix(testData2T);
/mnt/vdb/output_extension/Math/Math_49/1000/OpenMapRealVector.java
SuspiciousModificationPoint:         while (iter.hasNext()) {
At: OpenMapRealVector.java org.apache.commons.math.linear.OpenMapRealVector
Line number: 371
Used ingredient: while (iter2.hasNext()) {
/mnt/vdb/output_extension/Math/Math_49/1001/OpenMapRealVector.java
Used ingredient: while(iter.hasNext()) {
/mnt/vdb/output_extension/Math/Math_49/1002/OpenMapRealVector.java
Used ingredient: while (it.hasNext()) {
/mnt/vdb/output_extension/Math/Math_49/1003/OpenMapRealVector.java
Used ingredient: while (iterator.hasNext()) {
/mnt/vdb/output_extension/Math/Math_49/1004/OpenMapRealVector.java
Used ingredient: if (iter.hasNext()) {
/mnt/vdb/output_extension/Math/Math_49/1005/OpenMapRealVector.java
Used ingredient: if (!iter.hasNext()) {
/mnt/vdb/output_extension/Math/Math_49/1006/OpenMapRealVector.java
Used ingredient: while (iterator.hasNext())  {
/mnt/vdb/output_extension/Math/Math_49/1007/OpenMapRealVector.java
Used ingredient: while (values.hasNext()) {
/mnt/vdb/output_extension/Math/Math_49/1008/OpenMapRealVector.java
Used ingredient: if (!iterator.hasNext()) {
/mnt/vdb/output_extension/Math/Math_49/1009/OpenMapRealVector.java
Used ingredient: return iter.hasNext();
/mnt/vdb/output_extension/Math/Math_49/1010/OpenMapRealVector.java
Used ingredient: while (!sorted.isEmpty()) {
/mnt/vdb/output_extension/Math/Math_49/1011/OpenMapRealVector.java
Used ingredient: while (i < bytes.length) {
/mnt/vdb/output_extension/Math/Math_49/1012/OpenMapRealVector.java
Used ingredient: if (minusChar.hasOut()) {
/mnt/vdb/output_extension/Math/Math_49/1013/OpenMapRealVector.java
Used ingredient: if (iter.value() > max) {
/mnt/vdb/output_extension/Math/Math_49/1014/OpenMapRealVector.java
Used ingredient: if (isNoIntercept()) {
/mnt/vdb/output_extension/Math/Math_49/1015/OpenMapRealVector.java
Used ingredient: while (x.unequal(px)) {
/mnt/vdb/output_extension/Math/Math_49/1016/OpenMapRealVector.java
Used ingredient: if (plusChar.hasOut()) {
/mnt/vdb/output_extension/Math/Math_49/1017/OpenMapRealVector.java
Used ingredient: if (minusChar.hasIn()) {
/mnt/vdb/output_extension/Math/Math_49/1018/OpenMapRealVector.java
Used ingredient: public boolean hasNext() {
/mnt/vdb/output_extension/Math/Math_49/1019/OpenMapRealVector.java
Used ingredient: while (!widthSufficient) {
/mnt/vdb/output_extension/Math/Math_49/1020/OpenMapRealVector.java
Used ingredient: while (resultSet.size() < k) {
/mnt/vdb/output_extension/Math/Math_49/1021/OpenMapRealVector.java
Used ingredient: if (instance.hasIntercept()) {
/mnt/vdb/output_extension/Math/Math_49/1022/OpenMapRealVector.java
Used ingredient: while (!tableau.isOptimal()) {
/mnt/vdb/output_extension/Math/Math_49/1023/OpenMapRealVector.java
Used ingredient: if (filteredNextIsLast) {
/mnt/vdb/output_extension/Math/Math_49/1024/OpenMapRealVector.java
Used ingredient: if (!instance.hasIntercept()) {
/mnt/vdb/output_extension/Math/Math_49/1025/OpenMapRealVector.java
Used ingredient: public void testNeta() {
/mnt/vdb/output_extension/Math/Math_49/1026/OpenMapRealVector.java
Used ingredient: if (x.greaterThan(ty)) {
/mnt/vdb/output_extension/Math/Math_49/1027/OpenMapRealVector.java
Used ingredient: if (rng.nextBoolean()) {
/mnt/vdb/output_extension/Math/Math_49/1028/OpenMapRealVector.java
Used ingredient: if (this.hasIntercept) {
/mnt/vdb/output_extension/Math/Math_49/1029/OpenMapRealVector.java
Used ingredient: if (steps.size() == 0) {
/mnt/vdb/output_extension/Math/Math_49/1030/OpenMapRealVector.java
Used ingredient: public IntervalsSet() {
/mnt/vdb/output_extension/Math/Math_49/1031/OpenMapRealVector.java
Used ingredient: if (points.size() < k) {
/mnt/vdb/output_extension/Math/Math_49/1032/OpenMapRealVector.java
Used ingredient: if (stats.getN() > 0) {
/mnt/vdb/output_extension/Math/Math_49/1033/OpenMapRealVector.java
Used ingredient: while (count <= index) {
/mnt/vdb/output_extension/Math/Math_49/1034/OpenMapRealVector.java
Used ingredient: while (i < nvars) {
/mnt/vdb/output_extension/Math/Math_49/1035/OpenMapRealVector.java
Used ingredient: while (!trialgood) {
/mnt/vdb/output_extension/Math/Math_49/1036/OpenMapRealVector.java
Used ingredient: while (error >= 1.0) {
/mnt/vdb/output_extension/Math/Math_49/1037/OpenMapRealVector.java
Used ingredient: if (Double.isNaN(ret)) {
/mnt/vdb/output_extension/Math/Math_49/1038/OpenMapRealVector.java
Used ingredient: if (divisor.isNaN()) {
/mnt/vdb/output_extension/Math/Math_49/1039/OpenMapRealVector.java
Used ingredient: while (idx < count) {
/mnt/vdb/output_extension/Math/Math_49/1040/OpenMapRealVector.java
Used ingredient: while (nextInStep) {
/mnt/vdb/output_extension/Math/Math_49/1041/OpenMapRealVector.java
Used ingredient: if (plusChar.hasIn()) {
/mnt/vdb/output_extension/Math/Math_49/1042/OpenMapRealVector.java
Used ingredient: while (++min < --max) {
/mnt/vdb/output_extension/Math/Math_49/1043/OpenMapRealVector.java
Used ingredient: while (true) {
/mnt/vdb/output_extension/Math/Math_49/1044/OpenMapRealVector.java
Used ingredient: if (Double.isNaN(nextX)) {
/mnt/vdb/output_extension/Math/Math_49/1045/OpenMapRealVector.java
Used ingredient: while (p<rawdigits.length) {
/mnt/vdb/output_extension/Math/Math_49/1046/OpenMapRealVector.java
Used ingredient: while (!BigInteger.ZERO.equals(e)) {
/mnt/vdb/output_extension/Math/Math_49/1047/OpenMapRealVector.java
Used ingredient: if (x.greaterThan(one)) {
/mnt/vdb/output_extension/Math/Math_49/1048/OpenMapRealVector.java
Used ingredient: if (!matrix.isSquare()) {
/mnt/vdb/output_extension/Math/Math_49/1049/OpenMapRealVector.java
Used ingredient: if (!this.hasIntercept) {
/mnt/vdb/output_extension/Math/Math_49/1050/OpenMapRealVector.java
Used ingredient: if (pointA.getY() == y) {
/mnt/vdb/output_extension/Math/Math_49/1051/OpenMapRealVector.java
Used ingredient: if (pointB.getY() == y) {
/mnt/vdb/output_extension/Math/Math_49/1052/OpenMapRealVector.java
Used ingredient: while (iMax - iMin > 5) {
/mnt/vdb/output_extension/Math/Math_49/1053/OpenMapRealVector.java
Used ingredient: public void testNextInt() {
/mnt/vdb/output_extension/Math/Math_49/1054/OpenMapRealVector.java
Used ingredient: public void testNextHex() {
/mnt/vdb/output_extension/Math/Math_49/1055/OpenMapRealVector.java
Used ingredient: while (node.left != null) {
/mnt/vdb/output_extension/Math/Math_49/1056/OpenMapRealVector.java
Used ingredient: while (!fgc.isSatisfied(pop)) {
/mnt/vdb/output_extension/Math/Math_49/1057/OpenMapRealVector.java
Used ingredient: while (node.getCut() != null) {
/mnt/vdb/output_extension/Math/Math_49/1058/OpenMapRealVector.java
Used ingredient: private Iterator() {
/mnt/vdb/output_extension/Math/Math_49/1059/OpenMapRealVector.java
Used ingredient: if (iterc == itermax) {
/mnt/vdb/output_extension/Math/Math_49/1060/OpenMapRealVector.java
Used ingredient: T value = iter.value();
/mnt/vdb/output_extension/Math/Math_49/1061/OpenMapRealVector.java
Used ingredient: public void testNextLong() {
/mnt/vdb/output_extension/Math/Math_49/1062/OpenMapRealVector.java
Used ingredient: public void testNegate() {
/mnt/vdb/output_extension/Math/Math_49/1063/OpenMapRealVector.java
Used ingredient: private void tolset() {
/mnt/vdb/output_extension/Math/Math_49/1064/OpenMapRealVector.java
Used ingredient: filePointer.close();
/mnt/vdb/output_extension/Math/Math_49/1065/OpenMapRealVector.java
Used ingredient: } while (isIdentity);
/mnt/vdb/output_extension/Math/Math_49/1066/OpenMapRealVector.java
Used ingredient: if (lessThan(getZero())) {
/mnt/vdb/output_extension/Math/Math_49/1067/OpenMapRealVector.java
Used ingredient: if (firstIteration) {
/mnt/vdb/output_extension/Math/Math_49/1068/OpenMapRealVector.java
Used ingredient: switch (tiesStrategy) {
/mnt/vdb/output_extension/Math/Math_49/1069/OpenMapRealVector.java
Used ingredient: public void testNextInt2() {
/mnt/vdb/output_extension/Math/Math_49/1070/OpenMapRealVector.java
Used ingredient: public Integer next() {
/mnt/vdb/output_extension/Math/Math_49/1071/OpenMapRealVector.java
Used ingredient: public void testBeta() {
/mnt/vdb/output_extension/Math/Math_49/1072/OpenMapRealVector.java
Used ingredient: if (inc.equals(getZero())) {
/mnt/vdb/output_extension/Math/Math_49/1073/OpenMapRealVector.java
Used ingredient: if (a.greaterThan(half)) {
/mnt/vdb/output_extension/Math/Math_49/1074/OpenMapRealVector.java
Used ingredient: if (y.greaterThan(zero)) {
/mnt/vdb/output_extension/Math/Math_49/1075/OpenMapRealVector.java
Used ingredient: if (nextY.isZero()) {
/mnt/vdb/output_extension/Math/Math_49/1076/OpenMapRealVector.java
Used ingredient: if (e.testBit(0)) {
/mnt/vdb/output_extension/Math/Math_49/1077/OpenMapRealVector.java
Used ingredient: public void testName() {
/mnt/vdb/output_extension/Math/Math_49/1078/OpenMapRealVector.java
Used ingredient: while (lsbthreshold > msb) {
/mnt/vdb/output_extension/Math/Math_49/1079/OpenMapRealVector.java
Used ingredient: while (node.right != null) {
/mnt/vdb/output_extension/Math/Math_49/1080/OpenMapRealVector.java
Used ingredient: if (set.equals(sampSet)) {
/mnt/vdb/output_extension/Math/Math_49/1081/OpenMapRealVector.java
Used ingredient: while (states[++next] != FULL) {
/mnt/vdb/output_extension/Math/Math_49/1082/OpenMapRealVector.java
Used ingredient: } while (!isLastStep);
/mnt/vdb/output_extension/Math/Math_49/1083/OpenMapRealVector.java
Used ingredient: if (filteredH > maxStep) {
/mnt/vdb/output_extension/Math/Math_49/1084/OpenMapRealVector.java
Used ingredient: if (this.equals(inc)) {
/mnt/vdb/output_extension/Math/Math_49/1085/OpenMapRealVector.java
Used ingredient: if (!binStats.isEmpty()) {
/mnt/vdb/output_extension/Math/Math_49/1086/OpenMapRealVector.java
Used ingredient: if (shouldContract()) {
/mnt/vdb/output_extension/Math/Math_49/1087/OpenMapRealVector.java
Used ingredient: if (moment.getN() > 3) {
/mnt/vdb/output_extension/Math/Math_49/1088/OpenMapRealVector.java
Used ingredient: if (this.lessThan(x)) {
/mnt/vdb/output_extension/Math/Math_49/1089/OpenMapRealVector.java
Used ingredient: if (iteration > 0) {
/mnt/vdb/output_extension/Math/Math_49/1090/OpenMapRealVector.java
Used ingredient: if (rhs.isNaN()) {
/mnt/vdb/output_extension/Math/Math_49/1091/OpenMapRealVector.java
Used ingredient: public Node getNext() {
/mnt/vdb/output_extension/Math/Math_49/1092/OpenMapRealVector.java
Used ingredient: while (line != null) {
/mnt/vdb/output_extension/Math/Math_49/1093/OpenMapRealVector.java
Used ingredient: if (raiseException) {
/mnt/vdb/output_extension/Math/Math_49/1094/OpenMapRealVector.java
Used ingredient: if (h > getMaxStep()) {
/mnt/vdb/output_extension/Math/Math_49/1095/OpenMapRealVector.java
Used ingredient: if (chopped.isEmpty()) {
/mnt/vdb/output_extension/Math/Math_49/1096/OpenMapRealVector.java
Used ingredient: if (hex.length() == 1) {
/mnt/vdb/output_extension/Math/Math_49/1097/OpenMapRealVector.java
Used ingredient: if (nextX.isNaN()) {
/mnt/vdb/output_extension/Math/Math_49/1098/OpenMapRealVector.java
Used ingredient: if (stat.getN() < 2) {
/mnt/vdb/output_extension/Math/Math_49/1099/OpenMapRealVector.java
Used ingredient: if (Double.isNaN(v)) {
/mnt/vdb/output_extension/Math/Math_49/1100/OpenMapRealVector.java
SuspiciousModificationPoint:             iter.advance();
At: OpenMapRealVector.java org.apache.commons.math.linear.OpenMapRealVector
Line number: 372
Used ingredient: iter2.advance();
/mnt/vdb/output_extension/Math/Math_49/1101/OpenMapRealVector.java
Used ingredient: iterator.advance();
/mnt/vdb/output_extension/Math/Math_49/1102/OpenMapRealVector.java
Used ingredient: advance(next);
/mnt/vdb/output_extension/Math/Math_49/1103/OpenMapRealVector.java
Used ingredient: advance();
/mnt/vdb/output_extension/Math/Math_49/1104/OpenMapRealVector.java
Used ingredient: getTolerance());
/mnt/vdb/output_extension/Math/Math_49/1105/OpenMapRealVector.java
Used ingredient: tolerance);
/mnt/vdb/output_extension/Math/Math_49/1106/OpenMapRealVector.java
Used ingredient: t.addValue(2d);
/mnt/vdb/output_extension/Math/Math_49/1107/OpenMapRealVector.java
Used ingredient: t.addValue(1d);
/mnt/vdb/output_extension/Math/Math_49/1108/OpenMapRealVector.java
Used ingredient: t.addValue(3d);
/mnt/vdb/output_extension/Math/Math_49/1109/OpenMapRealVector.java
Used ingredient: t.addValue(4d);
/mnt/vdb/output_extension/Math/Math_49/1110/OpenMapRealVector.java
Used ingredient: filter.predict();
/mnt/vdb/output_extension/Math/Math_49/1111/OpenMapRealVector.java
Used ingredient: max = iter.value();
/mnt/vdb/output_extension/Math/Math_49/1112/OpenMapRealVector.java
Used ingredient: entryTolerance);
/mnt/vdb/output_extension/Math/Math_49/1113/OpenMapRealVector.java
Used ingredient: orthoTolerance);
/mnt/vdb/output_extension/Math/Math_49/1114/OpenMapRealVector.java
Used ingredient: filter.correct(z);
/mnt/vdb/output_extension/Math/Math_49/1115/OpenMapRealVector.java
Used ingredient: iterator.remove();
/mnt/vdb/output_extension/Math/Math_49/1116/OpenMapRealVector.java
Used ingredient: super.addValue(v);
/mnt/vdb/output_extension/Math/Math_49/1117/OpenMapRealVector.java
Used ingredient: return iter.value();
/mnt/vdb/output_extension/Math/Math_49/1118/OpenMapRealVector.java
Used ingredient: fitter.fit();
/mnt/vdb/output_extension/Math/Math_49/1119/OpenMapRealVector.java
Used ingredient: list.clear();
/mnt/vdb/output_extension/Math/Math_49/1120/OpenMapRealVector.java
Used ingredient: list.remove(0);
/mnt/vdb/output_extension/Math/Math_49/1121/OpenMapRealVector.java
Used ingredient: m.getTrace();
/mnt/vdb/output_extension/Math/Math_49/1122/OpenMapRealVector.java
Used ingredient: T getTrace();
/mnt/vdb/output_extension/Math/Math_49/1123/OpenMapRealVector.java
Used ingredient: list.add(oR);
/mnt/vdb/output_extension/Math/Math_49/1124/OpenMapRealVector.java
Used ingredient: list.add(o);
/mnt/vdb/output_extension/Math/Math_49/1125/OpenMapRealVector.java
Used ingredient: l.distance(l),
/mnt/vdb/output_extension/Math/Math_49/1126/OpenMapRealVector.java
Used ingredient: steps.clear();
/mnt/vdb/output_extension/Math/Math_49/1127/OpenMapRealVector.java
Used ingredient: super.clear();
/mnt/vdb/output_extension/Math/Math_49/1128/OpenMapRealVector.java
Used ingredient: int getRank();
/mnt/vdb/output_extension/Math/Math_49/1129/OpenMapRealVector.java
Used ingredient: normTolerance);
/mnt/vdb/output_extension/Math/Math_49/1130/OpenMapRealVector.java
Used ingredient: mean.clear();
/mnt/vdb/output_extension/Math/Math_49/1131/OpenMapRealVector.java
Used ingredient: v.addValue(7d);
/mnt/vdb/output_extension/Math/Math_49/1132/OpenMapRealVector.java
Used ingredient: v.addValue(9d);
/mnt/vdb/output_extension/Math/Math_49/1133/OpenMapRealVector.java
Used ingredient: u.addValue(1d);
/mnt/vdb/output_extension/Math/Math_49/1134/OpenMapRealVector.java
Used ingredient: u.addValue(2d);
/mnt/vdb/output_extension/Math/Math_49/1135/OpenMapRealVector.java
Used ingredient: u.addValue(3d);
/mnt/vdb/output_extension/Math/Math_49/1136/OpenMapRealVector.java
Used ingredient: u.addValue(4d);
/mnt/vdb/output_extension/Math/Math_49/1137/OpenMapRealVector.java
Used ingredient: u.addValue(5d);
/mnt/vdb/output_extension/Math/Math_49/1138/OpenMapRealVector.java
Used ingredient: u.addValue(7d);
/mnt/vdb/output_extension/Math/Math_49/1139/OpenMapRealVector.java
Used ingredient: u.addValue(9d);
/mnt/vdb/output_extension/Math/Math_49/1140/OpenMapRealVector.java
Used ingredient: u.addValue(1);
/mnt/vdb/output_extension/Math/Math_49/1141/OpenMapRealVector.java
Used ingredient: u.addValue(3);
/mnt/vdb/output_extension/Math/Math_49/1142/OpenMapRealVector.java
Used ingredient: u.addValue(2);
/mnt/vdb/output_extension/Math/Math_49/1143/OpenMapRealVector.java
Used ingredient: f.addValue(1);
/mnt/vdb/output_extension/Math/Math_49/1144/OpenMapRealVector.java
Used ingredient: f.addValue(2);
/mnt/vdb/output_extension/Math/Math_49/1145/OpenMapRealVector.java
Used ingredient: f.addValue(3);
/mnt/vdb/output_extension/Math/Math_49/1146/OpenMapRealVector.java
Used ingredient: iter.getCount(2);
/mnt/vdb/output_extension/Math/Math_49/1147/OpenMapRealVector.java
Used ingredient: instance.clear();
/mnt/vdb/output_extension/Math/Math_49/1148/OpenMapRealVector.java
Used ingredient: setTolerance(1e-9);
/mnt/vdb/output_extension/Math/Math_49/1149/OpenMapRealVector.java
Used ingredient: setTolerance(1E-9);
/mnt/vdb/output_extension/Math/Math_49/1150/OpenMapRealVector.java
Used ingredient: setTolerance(1E-4);
/mnt/vdb/output_extension/Math/Math_49/1151/OpenMapRealVector.java
Used ingredient: filePointer.close();
/mnt/vdb/output_extension/Math/Math_49/1152/OpenMapRealVector.java
Used ingredient: T test = iter.value();
/mnt/vdb/output_extension/Math/Math_49/1153/OpenMapRealVector.java
Used ingredient: return iter.key();
/mnt/vdb/output_extension/Math/Math_49/1154/OpenMapRealVector.java
Used ingredient: iter.getCount(-1);
/mnt/vdb/output_extension/Math/Math_49/1155/OpenMapRealVector.java
Used ingredient: cluster.addPoint(p);
/mnt/vdb/output_extension/Math/Math_49/1156/OpenMapRealVector.java
Used ingredient: setTolerance(1e-12);
/mnt/vdb/output_extension/Math/Math_49/1157/OpenMapRealVector.java
Used ingredient: return f.value(x);
/mnt/vdb/output_extension/Math/Math_49/1158/OpenMapRealVector.java
Used ingredient: solver.solve(b);
/mnt/vdb/output_extension/Math/Math_49/1159/OpenMapRealVector.java
Used ingredient: merged.condense();
/mnt/vdb/output_extension/Math/Math_49/1160/OpenMapRealVector.java
Used ingredient: m,entryTolerance);
/mnt/vdb/output_extension/Math/Math_49/1161/OpenMapRealVector.java
Used ingredient: child.add(node);
/mnt/vdb/output_extension/Math/Math_49/1162/OpenMapRealVector.java
Used ingredient: stats.addValue(i);
/mnt/vdb/output_extension/Math/Math_49/1163/OpenMapRealVector.java
Used ingredient: stats.addValue(1);
/mnt/vdb/output_extension/Math/Math_49/1164/OpenMapRealVector.java
Used ingredient: stats.addValue(3);
/mnt/vdb/output_extension/Math/Math_49/1165/OpenMapRealVector.java
Used ingredient: stats.addValue(2);
/mnt/vdb/output_extension/Math/Math_49/1166/OpenMapRealVector.java
Used ingredient: dstat.addValue(i);
/mnt/vdb/output_extension/Math/Math_49/1167/OpenMapRealVector.java
Used ingredient: return variance;
/mnt/vdb/output_extension/Math/Math_49/1168/OpenMapRealVector.java
Used ingredient: u.addValue(one);
/mnt/vdb/output_extension/Math/Math_49/1169/OpenMapRealVector.java
Used ingredient: u.addValue(two);
/mnt/vdb/output_extension/Math/Math_49/1170/OpenMapRealVector.java
Used ingredient: u.addValue(1.0);
/mnt/vdb/output_extension/Math/Math_49/1171/OpenMapRealVector.java
Used ingredient: u.addValue(2.0);
/mnt/vdb/output_extension/Math/Math_49/1172/OpenMapRealVector.java
Used ingredient: u.addValue(3.0);
/mnt/vdb/output_extension/Math/Math_49/1173/OpenMapRealVector.java
Used ingredient: u.addValue(4.0);
/mnt/vdb/output_extension/Math/Math_49/1174/OpenMapRealVector.java
Used ingredient: u.addValue(0.0);
/mnt/vdb/output_extension/Math/Math_49/1175/OpenMapRealVector.java
Used ingredient: v.addValue(11d);
/mnt/vdb/output_extension/Math/Math_49/1176/OpenMapRealVector.java
Used ingredient: v.addValue(23d);
/mnt/vdb/output_extension/Math/Math_49/1177/OpenMapRealVector.java
Used ingredient: u.addValue(11d);
/mnt/vdb/output_extension/Math/Math_49/1178/OpenMapRealVector.java
Used ingredient: u.addValue(23d);
/mnt/vdb/output_extension/Math/Math_49/1179/OpenMapRealVector.java
Used ingredient: f.addValue('a');
/mnt/vdb/output_extension/Math/Math_49/1180/OpenMapRealVector.java
Used ingredient: f.addValue('c');
/mnt/vdb/output_extension/Math/Math_49/1181/OpenMapRealVector.java
Used ingredient: f.addValue('d');
/mnt/vdb/output_extension/Math/Math_49/1182/OpenMapRealVector.java
Used ingredient: f.addValue('b');
/mnt/vdb/output_extension/Math/Math_49/1183/OpenMapRealVector.java
Used ingredient: f.addValue("Z");
/mnt/vdb/output_extension/Math/Math_49/1184/OpenMapRealVector.java
Used ingredient: integ.addStepHandler(cm);
/mnt/vdb/output_extension/Math/Math_49/1185/OpenMapRealVector.java
Used ingredient: T value = iter.value();
/mnt/vdb/output_extension/Math/Math_49/1186/OpenMapRealVector.java
Used ingredient: return p1.distance(p2);
/mnt/vdb/output_extension/Math/Math_49/1187/OpenMapRealVector.java
Used ingredient: return v1.distance(v2);
/mnt/vdb/output_extension/Math/Math_49/1188/OpenMapRealVector.java
Used ingredient: line = in.readLine();
/mnt/vdb/output_extension/Math/Math_49/1189/OpenMapRealVector.java
Used ingredient: observations.clear();
/mnt/vdb/output_extension/Math/Math_49/1190/OpenMapRealVector.java
Used ingredient: public void advance()
/mnt/vdb/output_extension/Math/Math_49/1191/OpenMapRealVector.java
Used ingredient: int len = c.size();
/mnt/vdb/output_extension/Math/Math_49/1192/OpenMapRealVector.java
Used ingredient: tableau.hashCode();
/mnt/vdb/output_extension/Math/Math_49/1193/OpenMapRealVector.java
Used ingredient: sortObservations();
/mnt/vdb/output_extension/Math/Math_49/1194/OpenMapRealVector.java
Used ingredient: super.increment(d);
/mnt/vdb/output_extension/Math/Math_49/1195/OpenMapRealVector.java
Used ingredient: m, entryTolerance);
/mnt/vdb/output_extension/Math/Math_49/1196/OpenMapRealVector.java
Used ingredient: m2,entryTolerance);
/mnt/vdb/output_extension/Math/Math_49/1197/OpenMapRealVector.java
Used ingredient: return add(values);
/mnt/vdb/output_extension/Math/Math_49/1198/OpenMapRealVector.java
Used ingredient: ioe.initCause(e);
/mnt/vdb/output_extension/Math/Math_49/1199/OpenMapRealVector.java
Used ingredient: verifyDataSet(f);
/mnt/vdb/output_extension/Math/Math_49/1200/OpenMapRealVector.java
SuspiciousModificationPoint:             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));
At: OpenMapRealVector.java org.apache.commons.math.linear.OpenMapRealVector
Line number: 373
Used ingredient: res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
/mnt/vdb/output_extension/Math/Math_49/1201/OpenMapRealVector.java
Used ingredient: res.setEntry(iter.key(), iter.value().divide(v.getEntry(iter.key())));
/mnt/vdb/output_extension/Math/Math_49/1202/OpenMapRealVector.java
Used ingredient: res.setEntry(iter.key(), iter.value().multiply(v.getEntry(iter.key())));
/mnt/vdb/output_extension/Math/Math_49/1203/OpenMapRealVector.java
Used ingredient: res.setEntry(iter.key(), iter.value().multiply(v[iter.key()]));
/mnt/vdb/output_extension/Math/Math_49/1204/OpenMapRealVector.java
Used ingredient: res.setEntry(iter.key(), iter.value() * v[iter.key()]);
/mnt/vdb/output_extension/Math/Math_49/1205/OpenMapRealVector.java
Used ingredient: res.setEntry(iter.key(), iter.value().divide(v[iter.key()]));
/mnt/vdb/output_extension/Math/Math_49/1206/OpenMapRealVector.java
Used ingredient: res.setEntry(iter.key(), iter.value() / v[iter.key()]);
/mnt/vdb/output_extension/Math/Math_49/1207/OpenMapRealVector.java
Used ingredient: res.setEntry(iter.key(), iter2.key(), iter.value().multiply(iter2.value()));
/mnt/vdb/output_extension/Math/Math_49/1208/OpenMapRealVector.java
Used ingredient: double delta = FastMath.abs(iter.value() - v.getEntry(iter.key()));
/mnt/vdb/output_extension/Math/Math_49/1209/OpenMapRealVector.java
Used ingredient: result.setEntry(index, e.getValue() + result.getEntry(index));
/mnt/vdb/output_extension/Math/Math_49/1210/OpenMapRealVector.java
Used ingredient: res.setEntry(iter.key() + virtualSize, iter.value());
/mnt/vdb/output_extension/Math/Math_49/1211/OpenMapRealVector.java
Used ingredient: res.setEntry(key, field.getZero().subtract(iter.value()));
/mnt/vdb/output_extension/Math/Math_49/1212/OpenMapRealVector.java
Used ingredient: res.setEntry(key, entries.get(key).subtract(iter.value()));
/mnt/vdb/output_extension/Math/Math_49/1213/OpenMapRealVector.java
Used ingredient: v.setEntry(index, e.getValue() - result.getEntry(index));
/mnt/vdb/output_extension/Math/Math_49/1214/OpenMapRealVector.java
Used ingredient: hred.setEntry(i, cth * hred.getEntry(i) + sth * hs.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1215/OpenMapRealVector.java
Used ingredient: gnew.setEntry(i, gnew.getEntry(i) + stplen * hs.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1216/OpenMapRealVector.java
Used ingredient: entries.put(iter.key(), iter.value().multiply(d));
/mnt/vdb/output_extension/Math/Math_49/1217/OpenMapRealVector.java
Used ingredient: res = res.add(v.getEntry(iter.key()).multiply(iter.value()));
/mnt/vdb/output_extension/Math/Math_49/1218/OpenMapRealVector.java
Used ingredient: s.setEntry(i, beta * s.getEntry(i) - gnew.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1219/OpenMapRealVector.java
Used ingredient: hs.setEntry(i, hs.getEntry(i) + hq.getEntry(ih) * s.getEntry(j));
/mnt/vdb/output_extension/Math/Math_49/1220/OpenMapRealVector.java
Used ingredient: hs.setEntry(j, hs.getEntry(j) + hq.getEntry(ih) * s.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1221/OpenMapRealVector.java
Used ingredient: work1.setEntry(i, work1.getEntry(i) + temp * xpt.getEntry(k, i));
/mnt/vdb/output_extension/Math/Math_49/1222/OpenMapRealVector.java
Used ingredient: entries.put(iter.key(), iter.value().divide(d));
/mnt/vdb/output_extension/Math/Math_49/1223/OpenMapRealVector.java
Used ingredient: gopt.setEntry(i, gopt.getEntry(i) + temp * xpt.getEntry(k, i));
/mnt/vdb/output_extension/Math/Math_49/1224/OpenMapRealVector.java
Used ingredient: d__.setEntry(i, d__.getEntry(i) + stplen * s.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1225/OpenMapRealVector.java
Used ingredient: hs.setEntry(i, hs.getEntry(i) + temp * xpt.getEntry(k, i));
/mnt/vdb/output_extension/Math/Math_49/1226/OpenMapRealVector.java
Used ingredient: hq.setEntry(ih, hq.getEntry(ih) + temp * xpt.getEntry(knew, j));
/mnt/vdb/output_extension/Math/Math_49/1227/OpenMapRealVector.java
Used ingredient: entries.put(iter.key(), iter.value() / norm);
/mnt/vdb/output_extension/Math/Math_49/1228/OpenMapRealVector.java
Used ingredient: res.setEntry(key, entries.get(key) - iter.value());
/mnt/vdb/output_extension/Math/Math_49/1229/OpenMapRealVector.java
Used ingredient: res.setEntry(key, randomAccess.get(key) + iter.value());
/mnt/vdb/output_extension/Math/Math_49/1230/OpenMapRealVector.java
Used ingredient: hq.setEntry(ih, hq.getEntry(ih) + temp * work2.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1231/OpenMapRealVector.java
Used ingredient: d__.setEntry(i, cth * d__.getEntry(i) + sth * s.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1232/OpenMapRealVector.java
Used ingredient: gopt.setEntry(i, gopt.getEntry(i) + diff * work1.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1233/OpenMapRealVector.java
Used ingredient: glag.setEntry(i, glag.getEntry(i) + temp * xpt.getEntry(k, i));
/mnt/vdb/output_extension/Math/Math_49/1234/OpenMapRealVector.java
Used ingredient: work3.setEntry(k, work3.getEntry(k) + sum * zmat.getEntry(k, j));
/mnt/vdb/output_extension/Math/Math_49/1235/OpenMapRealVector.java
Used ingredient: vlag.setEntry(i, sum * xpt.getEntry(k, i) + temp * xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1236/OpenMapRealVector.java
Used ingredient: d += FastMath.abs(e.getValue() - v.getEntry(e.getIndex()));
/mnt/vdb/output_extension/Math/Math_49/1237/OpenMapRealVector.java
Used ingredient: xnew.setEntry(i, xnew.getEntry(i) - xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1238/OpenMapRealVector.java
Used ingredient: xbase.setEntry(i, xbase.getEntry(i) + xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1239/OpenMapRealVector.java
Used ingredient: vlag.setEntry(k, vlag.getEntry(k) + sum * zmat.getEntry(k, m));
/mnt/vdb/output_extension/Math/Math_49/1240/OpenMapRealVector.java
Used ingredient: vlag.setEntry(k, vlag.getEntry(k) + sum * zmat.getEntry(k, j));
/mnt/vdb/output_extension/Math/Math_49/1241/OpenMapRealVector.java
Used ingredient: vlag.setEntry(k, work2.getEntry(k) * zmat.getEntry(k, m));
/mnt/vdb/output_extension/Math/Math_49/1242/OpenMapRealVector.java
Used ingredient: pq.setEntry(k, pq.getEntry(k) + temp * zmat.getEntry(k, m));
/mnt/vdb/output_extension/Math/Math_49/1243/OpenMapRealVector.java
Used ingredient: hcol.setEntry(k, hcol.getEntry(k) + temp * zmat.getEntry(k, j));
/mnt/vdb/output_extension/Math/Math_49/1244/OpenMapRealVector.java
Used ingredient: gopt.setEntry(i, gopt.getEntry(i) + diff * bmat.getEntry(kpt, i));
/mnt/vdb/output_extension/Math/Math_49/1245/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(mapEntry.getValue(), map.get(mapEntry.getKey()));
/mnt/vdb/output_extension/Math/Math_49/1246/OpenMapRealVector.java
Used ingredient: gopt.setEntry(i, gopt.getEntry(i) + hq.getEntry(ih) * d__.getEntry(j));
/mnt/vdb/output_extension/Math/Math_49/1247/OpenMapRealVector.java
Used ingredient: gopt.setEntry(j, gopt.getEntry(j) + hq.getEntry(ih) * d__.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1248/OpenMapRealVector.java
Used ingredient: gopt.setEntry(i,  gopt.getEntry(i) + hq.getEntry(ih) * xopt.getEntry(j));
/mnt/vdb/output_extension/Math/Math_49/1249/OpenMapRealVector.java
Used ingredient: res.setEntry(i, v[i].add(getEntry(i)));
/mnt/vdb/output_extension/Math/Math_49/1250/OpenMapRealVector.java
Used ingredient: xnew.setEntry(i, Math.max(min, sl.getEntry(i)));
/mnt/vdb/output_extension/Math/Math_49/1251/OpenMapRealVector.java
Used ingredient: out.setEntry(row, col, getEntry(row, col) + iterator.value());
/mnt/vdb/output_extension/Math/Math_49/1252/OpenMapRealVector.java
Used ingredient: out.setEntry(row, col, getEntry(row, col) - iterator.value());
/mnt/vdb/output_extension/Math/Math_49/1253/OpenMapRealVector.java
Used ingredient: sl.setEntry(i, sl.getEntry(i) - xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1254/OpenMapRealVector.java
Used ingredient: su.setEntry(i, su.getEntry(i) - xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1255/OpenMapRealVector.java
Used ingredient: work1.setEntry(i, sl.getEntry(i) - xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1256/OpenMapRealVector.java
Used ingredient: work1.setEntry(i, su.getEntry(i) - xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1257/OpenMapRealVector.java
Used ingredient: d__.setEntry(i, xnew.getEntry(i) - xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1258/OpenMapRealVector.java
Used ingredient: tempb = su.getEntry(i) - xopt.getEntry(i) - d__.getEntry(i);
/mnt/vdb/output_extension/Math/Math_49/1259/OpenMapRealVector.java
Used ingredient: vlag.getEntry(k) + xpt.getEntry(k, i) * work3.getEntry(k);
/mnt/vdb/output_extension/Math/Math_49/1260/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(mapEntry.getValue(), copy.get(mapEntry.getKey()));
/mnt/vdb/output_extension/Math/Math_49/1261/OpenMapRealVector.java
Used ingredient: outMatrix.setEntry(i, i, variance.evaluate(matrix.getColumn(i)));
/mnt/vdb/output_extension/Math/Math_49/1262/OpenMapRealVector.java
Used ingredient: fval.setEntry(getEvaluations(), fval.getEntry(getEvaluations() - n));
/mnt/vdb/output_extension/Math/Math_49/1263/OpenMapRealVector.java
Used ingredient: gopt.setEntry(j,  gopt.getEntry(j) + hq.getEntry(ih) * xopt.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1264/OpenMapRealVector.java
Used ingredient: work1.setEntry(j, work1.getEntry(j) + pq.getEntry(k) * xpt.getEntry(k, j));
/mnt/vdb/output_extension/Math/Math_49/1265/OpenMapRealVector.java
Used ingredient: work2.setEntry(j, work2.getEntry(j) + pq.getEntry(k) * xpt.getEntry(k, j));
/mnt/vdb/output_extension/Math/Math_49/1266/OpenMapRealVector.java
Used ingredient: delta = iter.value() - v.getEntry(key);
/mnt/vdb/output_extension/Math/Math_49/1267/OpenMapRealVector.java
Used ingredient: d += iter.value() * larger.get(iter.key());
/mnt/vdb/output_extension/Math/Math_49/1268/OpenMapRealVector.java
Used ingredient: res.setEntry(key, entries.get(key).add(value));
/mnt/vdb/output_extension/Math/Math_49/1269/OpenMapRealVector.java
Used ingredient: setEntry(i, field.getOne().divide(getEntry(i)));
/mnt/vdb/output_extension/Math/Math_49/1270/OpenMapRealVector.java
Used ingredient: Assert.assertEquals(BigInteger.valueOf(2l), c.getDenominator());
/mnt/vdb/output_extension/Math/Math_49/1271/OpenMapRealVector.java
Used ingredient: H.setEntry(i, j, HBigFraction.getEntry(i, j).doubleValue());
/mnt/vdb/output_extension/Math/Math_49/1272/OpenMapRealVector.java
Used ingredient: work1.setEntry(i, -step * glag.getEntry(i));
/mnt/vdb/output_extension/Math/Math_49/1273/OpenMapRealVector.java
Used ingredient: work3.setEntry(k, Math.abs(work3.getEntry(k)));
/mnt/vdb/output_extension/Math/Math_49/1274/OpenMapRealVector.java
Used ingredient: xpt.setEntry(k, j, xpt.getEntry(k, j) - xopt.getEntry(j));
/mnt/vdb/output_extension/Math/Math_49/1275/OpenMapRealVector.java
Used ingredient: xbase.setEntry(j, xbase.getEntry(j) + xopt.getEntry(j));
/mnt/vdb/output_extension/Math/Math_49/1276/OpenMapRealVector.java
Used ingredient: sum = sum.add(getEntry(row, i).multiply(v.getEntry(i)));
/mnt/vdb/output_extension/Math/Math_49/1277/OpenMapRealVector.java
Used ingredient: subMatrix.setEntry(i - startRow, j - startColumn, getEntry(i, j));
/mnt/vdb/output_extension/Math/Math_49/1278/OpenMapRealVector.java
Used ingredient: out.setEntry(row, col, getEntry(row, col) + m.getEntry(row, col));
/mnt/vdb/output_extension/Math/Math_49/1279/OpenMapRealVector.java
Used ingredient: out.setEntry(row, col, getEntry(row, col) - m.getEntry(row, col));
/mnt/vdb/output_extension/Math/Math_49/1280/OpenMapRealVector.java
Used ingredient: s.setEntry(i, (dredg * d__.getEntry(i) - dredsq * gnew.getEntry(i)) / temp);
/mnt/vdb/output_extension/Math/Math_49/1281/OpenMapRealVector.java
Used ingredient: xpt.setEntry(curNumEvalPlusOne, ipt, xpt.getEntry(ipt + 1, ipt));
/mnt/vdb/output_extension/Math/Math_49/1282/OpenMapRealVector.java
Used ingredient: res.setEntry(key, iter.value());
/mnt/vdb/output_extension/Math/Math_49/1283/OpenMapRealVector.java
Used ingredient: res.setEntry(key, -iter.value());
/mnt/vdb/output_extension/Math/Math_49/1284/OpenMapRealVector.java
Used ingredient: res.setEntry(key - index, iter.value());
/mnt/vdb/output_extension/Math/Math_49/1285/OpenMapRealVector.java
Used ingredient: out.addToEntry(i, j, value * m.getEntry(k, j));
/mnt/vdb/output_extension/Math/Math_49/1286/OpenMapRealVector.java
Used ingredient: out.setEntry(i, j, data[i] * v.getEntry(j));
/mnt/vdb/output_extension/Math/Math_49/1287/OpenMapRealVector.java
Used ingredient: out.entries.get(outKey) + value * m.entries.get(rightKey);
/mnt/vdb/output_extension/Math/Math_49/1288/OpenMapRealVector.java
Used ingredient: xalt.setEntry(i, Math.max(sl.getEntry(i), min));
/mnt/vdb/output_extension/Math/Math_49/1289/OpenMapRealVector.java
Used ingredient: xalt.setEntry(i, Math.max(sl.getEntry(i), d__2));
/mnt/vdb/output_extension/Math/Math_49/1290/OpenMapRealVector.java
Used ingredient: temp = xopt.getEntry(i) + scale * work1.getEntry(i);
/mnt/vdb/output_extension/Math/Math_49/1291/OpenMapRealVector.java
Used ingredient: out.setEntry(i, j, data[i].multiply(v.getEntry(j)));
/mnt/vdb/output_extension/Math/Math_49/1292/OpenMapRealVector.java
Used ingredient: Assert.assertTrue(field.getZero().equals(map.get(mapEntry.getKey())));
/mnt/vdb/output_extension/Math/Math_49/1293/OpenMapRealVector.java
Used ingredient: final double diff = e.getValue() - v.getEntry(e.getIndex());
/mnt/vdb/output_extension/Math/Math_49/1294/OpenMapRealVector.java
Used ingredient: work3.setEntry(k, sum * work3.getEntry(k));
/mnt/vdb/output_extension/Math/Math_49/1295/OpenMapRealVector.java
Used ingredient: sum = sum.add(getEntry(i, col).multiply(v.getEntry(i)));
/mnt/vdb/output_extension/Math/Math_49/1296/OpenMapRealVector.java
Used ingredient: sl.setEntry(j, sl.getEntry(j) - xopt.getEntry(j));
/mnt/vdb/output_extension/Math/Math_49/1297/OpenMapRealVector.java
Used ingredient: su.setEntry(j, su.getEntry(j) - xopt.getEntry(j));
/mnt/vdb/output_extension/Math/Math_49/1298/OpenMapRealVector.java
Used ingredient: tempa = xopt.getEntry(i) + d__.getEntry(i) - sl.getEntry(i);
/mnt/vdb/output_extension/Math/Math_49/1299/OpenMapRealVector.java
Used ingredient: sum = sum.add(getEntry(row, i).multiply(m.getEntry(i, col)));
/mnt/vdb/output_extension/Math/Math_49/1300/OpenMapRealVector.java
SuspiciousModificationPoint:         } else if (entries.containsKey(index)) {
At: OpenMapRealVector.java org.apache.commons.math.linear.OpenMapRealVector
Line number: 666
Used ingredient: if (m.entries.containsKey(rightKey)) {
/mnt/vdb/output_extension/Math/Math_49/1301/OpenMapRealVector.java
Used ingredient: if (entries.containsKey(key)) {
/mnt/vdb/output_extension/Math/Math_49/1302/OpenMapRealVector.java
Used ingredient: if (!entries.containsKey(key)) {
/mnt/vdb/output_extension/Math/Math_49/1303/OpenMapRealVector.java
Used ingredient: if (entries.containsKey(i)) {
/mnt/vdb/output_extension/Math/Math_49/1304/OpenMapRealVector.java
Used ingredient: } else if (s.contains("=")) {
/mnt/vdb/output_extension/Math/Math_49/1305/OpenMapRealVector.java
Used ingredient: } else if (s.contains("<=")) {
/mnt/vdb/output_extension/Math/Math_49/1306/OpenMapRealVector.java
Used ingredient: if (randomAccess.containsKey(key)) {
/mnt/vdb/output_extension/Math/Math_49/1307/OpenMapRealVector.java
Used ingredient: if (containsKey(key, index)) {
/mnt/vdb/output_extension/Math/Math_49/1308/OpenMapRealVector.java
Used ingredient: } else if (temp >= su.getEntry(i)) {
/mnt/vdb/output_extension/Math/Math_49/1309/OpenMapRealVector.java
Used ingredient: } else if (Double.isInfinite(d)) {
/mnt/vdb/output_extension/Math/Math_49/1310/OpenMapRealVector.java
Used ingredient: } else if (minRatioPositions.size() > 1) {
/mnt/vdb/output_extension/Math/Math_49/1311/OpenMapRealVector.java
Used ingredient: } else if (Double.isNaN(components[i])) {
/mnt/vdb/output_extension/Math/Math_49/1312/OpenMapRealVector.java
Used ingredient: } else if (!field.equals(other.field)) {
/mnt/vdb/output_extension/Math/Math_49/1313/OpenMapRealVector.java
Used ingredient: } else if (obj instanceof BigInteger) {
/mnt/vdb/output_extension/Math/Math_49/1314/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.XZY) {
/mnt/vdb/output_extension/Math/Math_49/1315/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.YXZ) {
/mnt/vdb/output_extension/Math/Math_49/1316/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.YZX) {
/mnt/vdb/output_extension/Math/Math_49/1317/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.ZXY) {
/mnt/vdb/output_extension/Math/Math_49/1318/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.ZYX) {
/mnt/vdb/output_extension/Math/Math_49/1319/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.XYX) {
/mnt/vdb/output_extension/Math/Math_49/1320/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.XZX) {
/mnt/vdb/output_extension/Math/Math_49/1321/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.YXY) {
/mnt/vdb/output_extension/Math/Math_49/1322/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.YZY) {
/mnt/vdb/output_extension/Math/Math_49/1323/OpenMapRealVector.java
Used ingredient: } else if (order == RotationOrder.ZXZ) {
/mnt/vdb/output_extension/Math/Math_49/1324/OpenMapRealVector.java
Used ingredient: } else if (Double.isInfinite(sum)) {
/mnt/vdb/output_extension/Math/Math_49/1325/OpenMapRealVector.java
Used ingredient: } else if (Float.isInfinite(f)) {
/mnt/vdb/output_extension/Math/Math_49/1326/OpenMapRealVector.java
Used ingredient: } else if (in instanceof double[]) {
/mnt/vdb/output_extension/Math/Math_49/1327/OpenMapRealVector.java
Used ingredient: } else if (states[index] == FULL) {
/mnt/vdb/output_extension/Math/Math_49/1328/OpenMapRealVector.java
Used ingredient: } else if (other instanceof BigFraction) {
/mnt/vdb/output_extension/Math/Math_49/1329/OpenMapRealVector.java
Used ingredient: } else if (xopt.getEntry(i) == su.getEntry(i)) {
/mnt/vdb/output_extension/Math/Math_49/1330/OpenMapRealVector.java
Used ingredient: } else if (xopt.getEntry(i) >= su.getEntry(i)) {
/mnt/vdb/output_extension/Math/Math_49/1331/OpenMapRealVector.java
Used ingredient: } else if (other instanceof OrderedTuple) {
/mnt/vdb/output_extension/Math/Math_49/1332/OpenMapRealVector.java
Used ingredient: Assert.assertTrue(map.containsKey(key));
/mnt/vdb/output_extension/Math/Math_49/1333/OpenMapRealVector.java
Used ingredient: } else if (work1.getEntry(i) == ZERO) {
/mnt/vdb/output_extension/Math/Math_49/1334/OpenMapRealVector.java
Used ingredient: } else if (ptsid.getEntry(k) == ZERO) {
/mnt/vdb/output_extension/Math/Math_49/1335/OpenMapRealVector.java
Used ingredient: } else if (glag.getEntry(i) > ZERO) {
/mnt/vdb/output_extension/Math/Math_49/1336/OpenMapRealVector.java
Used ingredient: } else if (getEvaluations() >= n + 2) {
/mnt/vdb/output_extension/Math/Math_49/1337/OpenMapRealVector.java
Used ingredient: } else if (t.equals(int.class)) {
/mnt/vdb/output_extension/Math/Math_49/1338/OpenMapRealVector.java
Used ingredient: } else if (e.equals(Fraction.ONE)) {
/mnt/vdb/output_extension/Math/Math_49/1339/OpenMapRealVector.java
Used ingredient: } else if (expected instanceof Float ){
/mnt/vdb/output_extension/Math/Math_49/1340/OpenMapRealVector.java
Used ingredient: } else if (t.equals(long.class)) {
/mnt/vdb/output_extension/Math/Math_49/1341/OpenMapRealVector.java
Used ingredient: } else if (t.equals(float.class)) {
/mnt/vdb/output_extension/Math/Math_49/1342/OpenMapRealVector.java
Used ingredient: } else if (encoding[i] > ot.encoding[i]) {
/mnt/vdb/output_extension/Math/Math_49/1343/OpenMapRealVector.java
Used ingredient: } else if (time > interval.getCurrentTime()) {
/mnt/vdb/output_extension/Math/Math_49/1344/OpenMapRealVector.java
Used ingredient: } else if (time < interval.getCurrentTime()) {
/mnt/vdb/output_extension/Math/Math_49/1345/OpenMapRealVector.java
Used ingredient: public int getWrongDimension(int index) {
/mnt/vdb/output_extension/Math/Math_49/1346/OpenMapRealVector.java
Used ingredient: public boolean containsKey(final int key) {
/mnt/vdb/output_extension/Math/Math_49/1347/OpenMapRealVector.java
Used ingredient: } else if (tree.cut == null) {
/mnt/vdb/output_extension/Math/Math_49/1348/OpenMapRealVector.java
Used ingredient: } else if (obj instanceof Number) {
/mnt/vdb/output_extension/Math/Math_49/1349/OpenMapRealVector.java
Used ingredient: } else if (getN() < windowSize) {
/mnt/vdb/output_extension/Math/Math_49/1350/OpenMapRealVector.java
Used ingredient: } else  if (nbPoints == x.length) {
/mnt/vdb/output_extension/Math/Math_49/1351/OpenMapRealVector.java
Used ingredient: } else if (ninvhalf < d && d <= ninv) {
/mnt/vdb/output_extension/Math/Math_49/1352/OpenMapRealVector.java
Used ingredient: public void testContainsKey() {
/mnt/vdb/output_extension/Math/Math_49/1353/OpenMapRealVector.java
Used ingredient: } else if (d2 < this.epsilon) {
/mnt/vdb/output_extension/Math/Math_49/1354/OpenMapRealVector.java
Used ingredient: } else if (Double.isNaN(actual)) {
/mnt/vdb/output_extension/Math/Math_49/1355/OpenMapRealVector.java
Used ingredient: } else if (negInf || ot.posInf) {
/mnt/vdb/output_extension/Math/Math_49/1356/OpenMapRealVector.java
Used ingredient: if (basicRows.contains(basicRow)) {
/mnt/vdb/output_extension/Math/Math_49/1357/OpenMapRealVector.java
Used ingredient: } else if (im > 0.0 || Double.isNaN(im)) {
/mnt/vdb/output_extension/Math/Math_49/1358/OpenMapRealVector.java
Used ingredient: Assert.assertFalse(map.containsKey(key));
/mnt/vdb/output_extension/Math/Math_49/1359/OpenMapRealVector.java
Used ingredient: if (node.polygon.contains(child.polygon)) {
/mnt/vdb/output_extension/Math/Math_49/1360/OpenMapRealVector.java
Used ingredient: if (child.polygon.contains(node.polygon)) {
/mnt/vdb/output_extension/Math/Math_49/1361/OpenMapRealVector.java
Used ingredient: } else if (BigInteger.ZERO.equals(numerator)) {
/mnt/vdb/output_extension/Math/Math_49/1362/OpenMapRealVector.java
Used ingredient: } else if (node.element.compareTo(element) > 0) {
/mnt/vdb/output_extension/Math/Math_49/1363/OpenMapRealVector.java
Used ingredient: Assert.assertTrue(javaMap.containsKey(key));
/mnt/vdb/output_extension/Math/Math_49/1364/OpenMapRealVector.java
Used ingredient: Assert.assertTrue(p.contains(point));
/mnt/vdb/output_extension/Math/Math_49/1365/OpenMapRealVector.java
Used ingredient: Assert.assertTrue(l.contains(point));
/mnt/vdb/output_extension/Math/Math_49/1366/OpenMapRealVector.java
Used ingredient: Assert.assertTrue(set2.contains(set1));
/mnt/vdb/output_extension/Math/Math_49/1367/OpenMapRealVector.java
Used ingredient: } else if (lowerBound.length != init.length) {
/mnt/vdb/output_extension/Math/Math_49/1368/OpenMapRealVector.java
Used ingredient: } else if (upperBound.length != init.length) {
/mnt/vdb/output_extension/Math/Math_49/1369/OpenMapRealVector.java
Used ingredient: } else if (encoding.length > ot.encoding.length) {
/mnt/vdb/output_extension/Math/Math_49/1370/OpenMapRealVector.java
Used ingredient: if (data.length != rhs.getDimension()) {
/mnt/vdb/output_extension/Math/Math_49/1371/OpenMapRealVector.java
Used ingredient: if (representation.size() != l) {
/mnt/vdb/output_extension/Math/Math_49/1372/OpenMapRealVector.java
Used ingredient: * start points (contains {@code node})
/mnt/vdb/output_extension/Math/Math_49/1373/OpenMapRealVector.java
Used ingredient: } else if (i >= varCovData[j].length) {
/mnt/vdb/output_extension/Math/Math_49/1374/OpenMapRealVector.java
Used ingredient: } else if (x >= numberOfElements) {
/mnt/vdb/output_extension/Math/Math_49/1375/OpenMapRealVector.java
Used ingredient: public Dfp newInstance(final double x) {
/mnt/vdb/output_extension/Math/Math_49/1376/OpenMapRealVector.java
Used ingredient: } else if (left.skew == Skew.BALANCED) {
/mnt/vdb/output_extension/Math/Math_49/1377/OpenMapRealVector.java
Used ingredient: } else if (posInf || ot.negInf) {
/mnt/vdb/output_extension/Math/Math_49/1378/OpenMapRealVector.java
Used ingredient: } else if (scaledExponent > -53) {
/mnt/vdb/output_extension/Math/Math_49/1379/OpenMapRealVector.java
Used ingredient: } else if (scaledExponent > -24) {
/mnt/vdb/output_extension/Math/Math_49/1380/OpenMapRealVector.java
Used ingredient: } else if (scaledExponent < 255) {
/mnt/vdb/output_extension/Math/Math_49/1381/OpenMapRealVector.java
Used ingredient: } else if (expected == 0.0) {
/mnt/vdb/output_extension/Math/Math_49/1382/OpenMapRealVector.java
Used ingredient: } else if (scaledExponent < 2047) {
/mnt/vdb/output_extension/Math/Math_49/1383/OpenMapRealVector.java
Used ingredient: } else if (offset > ot.offset) {
/mnt/vdb/output_extension/Math/Math_49/1384/OpenMapRealVector.java
Used ingredient: } else if (d == direction) {
/mnt/vdb/output_extension/Math/Math_49/1385/OpenMapRealVector.java
Used ingredient: } else if (f == direction) {
/mnt/vdb/output_extension/Math/Math_49/1386/OpenMapRealVector.java
Used ingredient: if (!columnsToDrop.contains(j)) {
/mnt/vdb/output_extension/Math/Math_49/1387/OpenMapRealVector.java
Used ingredient: } else if (!MathUtils.equals(entry, 0d, maxUlps)) {
/mnt/vdb/output_extension/Math/Math_49/1388/OpenMapRealVector.java
Used ingredient: } else if (Double.isNaN(previousEventTime) ||
/mnt/vdb/output_extension/Math/Math_49/1389/OpenMapRealVector.java
Used ingredient: if (!keysInMap.contains(mapEntry.getKey()))
/mnt/vdb/output_extension/Math/Math_49/1390/OpenMapRealVector.java
Used ingredient: if (xnew.getEntry(i) == su.getEntry(i)) {
/mnt/vdb/output_extension/Math/Math_49/1391/OpenMapRealVector.java
Used ingredient: if (xnew.getEntry(i) == sl.getEntry(i)) {
/mnt/vdb/output_extension/Math/Math_49/1392/OpenMapRealVector.java
Used ingredient: if (xopt.getEntry(i) == su.getEntry(i)) {
/mnt/vdb/output_extension/Math/Math_49/1393/OpenMapRealVector.java
Used ingredient: if (xopt.getEntry(i) == sl.getEntry(i)) {
/mnt/vdb/output_extension/Math/Math_49/1394/OpenMapRealVector.java
Used ingredient: if (xopt.getEntry(i) <= sl.getEntry(i)) {
/mnt/vdb/output_extension/Math/Math_49/1395/OpenMapRealVector.java
Used ingredient: * Geet the entries at the given row index
/mnt/vdb/output_extension/Math/Math_49/1396/OpenMapRealVector.java
Used ingredient: } else if (right.skew == Skew.BALANCED) {
/mnt/vdb/output_extension/Math/Math_49/1397/OpenMapRealVector.java
Used ingredient: //     public void testPreconditions2() {
/mnt/vdb/output_extension/Math/Math_49/1398/OpenMapRealVector.java
Used ingredient: } else if (su.getEntry(j) <= initialTrustRegionRadius) {
/mnt/vdb/output_extension/Math/Math_49/1399/OpenMapRealVector.java
Used ingredient: } else if (other instanceof ComparableSegment) {
/mnt/vdb/output_extension/Math/Math_49/1400/OpenMapRealVector.java
SuspiciousModificationPoint:             entries.remove(index);
At: OpenMapRealVector.java org.apache.commons.math.linear.OpenMapRealVector
Line number: 667
Used ingredient: entries.remove(key);
/mnt/vdb/output_extension/Math/Math_49/1401/OpenMapRealVector.java
Used ingredient: return doRemove(index);
/mnt/vdb/output_extension/Math/Math_49/1402/OpenMapRealVector.java
Used ingredient: this.vmove(i, next);
/mnt/vdb/output_extension/Math/Math_49/1403/OpenMapRealVector.java
Used ingredient: generated.remove(key);
/mnt/vdb/output_extension/Math/Math_49/1404/OpenMapRealVector.java
Used ingredient: out.entries.remove(outKey);
/mnt/vdb/output_extension/Math/Math_49/1405/OpenMapRealVector.java
Used ingredient: return entries.get(index);
/mnt/vdb/output_extension/Math/Math_49/1406/OpenMapRealVector.java
Used ingredient: chromosomes.remove(rind);
/mnt/vdb/output_extension/Math/Math_49/1407/OpenMapRealVector.java
Used ingredient: entries.put(index, value);
/mnt/vdb/output_extension/Math/Math_49/1408/OpenMapRealVector.java
Found patch for Math_49, id: 1408
Execute command: diff -u /tmp/math_49_Genprog/output_astor/AstorMain-math_49_Genprog/src/default/org/apache/commons/math/linear/OpenMapRealVector.java /mnt/vdb/output_extension/Math/Math_49/1408/OpenMapRealVector.java
Used ingredient: return map.remove(key);
/mnt/vdb/output_extension/Math/Math_49/1409/OpenMapRealVector.java
Used ingredient: iterator.remove();
/mnt/vdb/output_extension/Math/Math_49/1410/OpenMapRealVector.java
Used ingredient: current.setIndex(index);
/mnt/vdb/output_extension/Math/Math_49/1411/OpenMapRealVector.java
Used ingredient: return solve(identity);
/mnt/vdb/output_extension/Math/Math_49/1412/OpenMapRealVector.java
Used ingredient: return eDA.getElement(index);
/mnt/vdb/output_extension/Math/Math_49/1413/OpenMapRealVector.java
Used ingredient: T getEntry(int index);
/mnt/vdb/output_extension/Math/Math_49/1414/OpenMapRealVector.java
Used ingredient: pos.setIndex(index);
/mnt/vdb/output_extension/Math/Math_49/1415/OpenMapRealVector.java
Used ingredient: return simplex[index];
/mnt/vdb/output_extension/Math/Math_49/1416/OpenMapRealVector.java
Used ingredient: variance.increment(d);
/mnt/vdb/output_extension/Math/Math_49/1417/OpenMapRealVector.java
Used ingredient: moment.increment(d);
/mnt/vdb/output_extension/Math/Math_49/1418/OpenMapRealVector.java
Used ingredient: moment.increment(1d);
/mnt/vdb/output_extension/Math/Math_49/1419/OpenMapRealVector.java
Used ingredient: list.remove(0);
/mnt/vdb/output_extension/Math/Math_49/1420/OpenMapRealVector.java
Used ingredient: return firstRemoved;
/mnt/vdb/output_extension/Math/Math_49/1421/OpenMapRealVector.java
Used ingredient: entries.put(key, value);
/mnt/vdb/output_extension/Math/Math_49/1422/OpenMapRealVector.java
Used ingredient: return expected[index];
/mnt/vdb/output_extension/Math/Math_49/1423/OpenMapRealVector.java
Used ingredient: return super.round(in);
/mnt/vdb/output_extension/Math/Math_49/1424/OpenMapRealVector.java
Used ingredient: return in.readDouble();
/mnt/vdb/output_extension/Math/Math_49/1425/OpenMapRealVector.java
Used ingredient: return super.getElement(index);
/mnt/vdb/output_extension/Math/Math_49/1426/OpenMapRealVector.java
Used ingredient: iter = entries.iterator();
/mnt/vdb/output_extension/Math/Math_49/1427/OpenMapRealVector.java
Used ingredient: return vertices.clone();
/mnt/vdb/output_extension/Math/Math_49/1428/OpenMapRealVector.java
Used ingredient: return this.parameters[index];
/mnt/vdb/output_extension/Math/Math_49/1429/OpenMapRealVector.java
Used ingredient: return res.toString();
/mnt/vdb/output_extension/Math/Math_49/1430/OpenMapRealVector.java
Used ingredient: reprCopy.set(index, null);
/mnt/vdb/output_extension/Math/Math_49/1431/OpenMapRealVector.java
Used ingredient: setWindowSize(window);
/mnt/vdb/output_extension/Math/Math_49/1432/OpenMapRealVector.java
Used ingredient: this.index = index;
/mnt/vdb/output_extension/Math/Math_49/1433/OpenMapRealVector.java
Used ingredient: return field.getOne();
/mnt/vdb/output_extension/Math/Math_49/1434/OpenMapRealVector.java
Used ingredient: return derivative(x);
/mnt/vdb/output_extension/Math/Math_49/1435/OpenMapRealVector.java
Used ingredient: statistic.increment(1d);
/mnt/vdb/output_extension/Math/Math_49/1436/OpenMapRealVector.java
Used ingredient: return measurementNoise;
/mnt/vdb/output_extension/Math/Math_49/1437/OpenMapRealVector.java
Used ingredient: super.increment(d);
/mnt/vdb/output_extension/Math/Math_49/1438/OpenMapRealVector.java
Used ingredient: return values[index];
/mnt/vdb/output_extension/Math/Math_49/1439/OpenMapRealVector.java
Used ingredient: pos.setBeginIndex(0);
/mnt/vdb/output_extension/Math/Math_49/1440/OpenMapRealVector.java
Used ingredient: checkNonNegative(in);
/mnt/vdb/output_extension/Math/Math_49/1441/OpenMapRealVector.java
Used ingredient: checkIndex(index);
/mnt/vdb/output_extension/Math/Math_49/1442/OpenMapRealVector.java
Used ingredient: return iter.value();
/mnt/vdb/output_extension/Math/Math_49/1443/OpenMapRealVector.java
Used ingredient: return visitor.end();
/mnt/vdb/output_extension/Math/Math_49/1444/OpenMapRealVector.java
Used ingredient: return one.divide(ak);
/mnt/vdb/output_extension/Math/Math_49/1445/OpenMapRealVector.java
Used ingredient: mean.increment(1d);
/mnt/vdb/output_extension/Math/Math_49/1446/OpenMapRealVector.java
Used ingredient: mean.increment(0d);
/mnt/vdb/output_extension/Math/Math_49/1447/OpenMapRealVector.java
Used ingredient: mean.increment(-2d);
/mnt/vdb/output_extension/Math/Math_49/1448/OpenMapRealVector.java
Used ingredient: return this.median;
/mnt/vdb/output_extension/Math/Math_49/1449/OpenMapRealVector.java
Used ingredient: this.extend = extend;
/mnt/vdb/output_extension/Math/Math_49/1450/OpenMapRealVector.java
Used ingredient: return wrong[index];
/mnt/vdb/output_extension/Math/Math_49/1451/OpenMapRealVector.java
Used ingredient: return field.getTwo();
/mnt/vdb/output_extension/Math/Math_49/1452/OpenMapRealVector.java
Used ingredient: meanStat.increment(v);
/mnt/vdb/output_extension/Math/Math_49/1453/OpenMapRealVector.java
Used ingredient: testDa.addElement(1d);
/mnt/vdb/output_extension/Math/Math_49/1454/OpenMapRealVector.java
Used ingredient: return this.geoMean;
/mnt/vdb/output_extension/Math/Math_49/1455/OpenMapRealVector.java
Used ingredient: map.remove(key);
/mnt/vdb/output_extension/Math/Math_49/1456/OpenMapRealVector.java
Used ingredient: map.remove(key2);
/mnt/vdb/output_extension/Math/Math_49/1457/OpenMapRealVector.java
Used ingredient: map.remove(key1);
/mnt/vdb/output_extension/Math/Math_49/1458/OpenMapRealVector.java
Used ingredient: regression.addData(removeSingle);
/mnt/vdb/output_extension/Math/Math_49/1459/OpenMapRealVector.java
Used ingredient: private T doRemove(int index) {
/mnt/vdb/output_extension/Math/Math_49/1460/OpenMapRealVector.java
Used ingredient: final int firstRemoved = index;
/mnt/vdb/output_extension/Math/Math_49/1461/OpenMapRealVector.java
Used ingredient: res.add(sequence.get(index));
/mnt/vdb/output_extension/Math/Math_49/1462/OpenMapRealVector.java
Used ingredient: int index = pos.getIndex();
/mnt/vdb/output_extension/Math/Math_49/1463/OpenMapRealVector.java
Used ingredient: return fields[i].getName();
/mnt/vdb/output_extension/Math/Math_49/1464/OpenMapRealVector.java
Used ingredient: return plus.reunite(minus);
/mnt/vdb/output_extension/Math/Math_49/1465/OpenMapRealVector.java
Used ingredient: sides.rememberMinusFound();
/mnt/vdb/output_extension/Math/Math_49/1466/OpenMapRealVector.java
Used ingredient: identity,entryTolerance);
/mnt/vdb/output_extension/Math/Math_49/1467/OpenMapRealVector.java
Used ingredient: verifyInterval(min, max);
/mnt/vdb/output_extension/Math/Math_49/1468/OpenMapRealVector.java
Used ingredient: return f.value(fixed, x);
/mnt/vdb/output_extension/Math/Math_49/1469/OpenMapRealVector.java
Used ingredient: statistic2.increment(1d);
/mnt/vdb/output_extension/Math/Math_49/1470/OpenMapRealVector.java
Used ingredient: means[i].increment(v[i]);
/mnt/vdb/output_extension/Math/Math_49/1471/OpenMapRealVector.java
Used ingredient: return this.secondMoment;
/mnt/vdb/output_extension/Math/Math_49/1472/OpenMapRealVector.java
Used ingredient: return measurementMatrix;
/mnt/vdb/output_extension/Math/Math_49/1473/OpenMapRealVector.java
Used ingredient: deSerializeContext(in);
/mnt/vdb/output_extension/Math/Math_49/1474/OpenMapRealVector.java
Used ingredient: super.readExternal(in);
/mnt/vdb/output_extension/Math/Math_49/1475/OpenMapRealVector.java
Used ingredient: setInterpolatedTime(t);
/mnt/vdb/output_extension/Math/Math_49/1476/OpenMapRealVector.java
Used ingredient: pos.setIndex(endIndex);
/mnt/vdb/output_extension/Math/Math_49/1477/OpenMapRealVector.java
Used ingredient: int p = s.indexOf("e");
/mnt/vdb/output_extension/Math/Math_49/1478/OpenMapRealVector.java
Used ingredient: excp = result.round(0);
/mnt/vdb/output_extension/Math/Math_49/1479/OpenMapRealVector.java
Used ingredient: return field.getZero();
/mnt/vdb/output_extension/Math/Math_49/1480/OpenMapRealVector.java
Used ingredient: getInterpolatedState();
/mnt/vdb/output_extension/Math/Math_49/1481/OpenMapRealVector.java
Used ingredient: return si.readObject();
/mnt/vdb/output_extension/Math/Math_49/1482/OpenMapRealVector.java
Used ingredient: return solve(b, false);
/mnt/vdb/output_extension/Math/Math_49/1483/OpenMapRealVector.java
Used ingredient: * @return removed value
/mnt/vdb/output_extension/Math/Math_49/1484/OpenMapRealVector.java
Used ingredient: this.denominator = den;
/mnt/vdb/output_extension/Math/Math_49/1485/OpenMapRealVector.java
Used ingredient: regression.removeData(removeSingle);
/mnt/vdb/output_extension/Math/Math_49/1486/OpenMapRealVector.java
Used ingredient: return minus.getCell(point);
/mnt/vdb/output_extension/Math/Math_49/1487/OpenMapRealVector.java
Used ingredient: setEntry(i + index, v[i]);
/mnt/vdb/output_extension/Math/Math_49/1488/OpenMapRealVector.java
Used ingredient: int n = line.indexOf('=');
/mnt/vdb/output_extension/Math/Math_49/1489/OpenMapRealVector.java
Used ingredient: identity, entryTolerance);
/mnt/vdb/output_extension/Math/Math_49/1490/OpenMapRealVector.java
Used ingredient: current = iterator.next();
/mnt/vdb/output_extension/Math/Math_49/1491/OpenMapRealVector.java
Used ingredient: ranks = removeNaNs(ranks);
/mnt/vdb/output_extension/Math/Math_49/1492/OpenMapRealVector.java
Used ingredient: sides.rememberPlusFound();
/mnt/vdb/output_extension/Math/Math_49/1493/OpenMapRealVector.java
Used ingredient: super(referenceSimplex);
/mnt/vdb/output_extension/Math/Math_49/1494/OpenMapRealVector.java
Used ingredient: deSerializeMessages(in);
/mnt/vdb/output_extension/Math/Math_49/1495/OpenMapRealVector.java
Used ingredient: * @return the row index.
/mnt/vdb/output_extension/Math/Math_49/1496/OpenMapRealVector.java
Used ingredient: tree.visit(nodeCleaner);
/mnt/vdb/output_extension/Math/Math_49/1497/OpenMapRealVector.java
Used ingredient: return interpolatedTime;
/mnt/vdb/output_extension/Math/Math_49/1498/OpenMapRealVector.java
Used ingredient: return FastMath.rint(x);
/mnt/vdb/output_extension/Math/Math_49/1499/OpenMapRealVector.java
Used ingredient: return d.compareTo(a.d);
/mnt/vdb/output_extension/Math/Math_49/1500/OpenMapRealVector.java
SuspiciousModificationPoint:             return false;
At: OpenIntToDoubleHashMap.java org.apache.commons.math.util.OpenIntToDoubleHashMap
Line number: 217
Used ingredient: return scale;
/mnt/vdb/output_extension/Math/Math_49/1501/OpenIntToDoubleHashMap.java
Used ingredient: return value;
/mnt/vdb/output_extension/Math/Math_49/1502/OpenIntToDoubleHashMap.java
Used ingredient: return facet;
/mnt/vdb/output_extension/Math/Math_49/1503/OpenIntToDoubleHashMap.java
Used ingredient: return calls;
/mnt/vdb/output_extension/Math/Math_49/1504/OpenIntToDoubleHashMap.java
Used ingredient: return values;
/mnt/vdb/output_extension/Math/Math_49/1505/OpenIntToDoubleHashMap.java
Used ingredient: return offset;
/mnt/vdb/output_extension/Math/Math_49/1506/OpenIntToDoubleHashMap.java
Used ingredient: return line;
/mnt/vdb/output_extension/Math/Math_49/1507/OpenIntToDoubleHashMap.java
Used ingredient: return field;
/mnt/vdb/output_extension/Math/Math_49/1508/OpenIntToDoubleHashMap.java


Node: zimin-1


Date: Thu Jul  5 16:29:59 EDT 2018

